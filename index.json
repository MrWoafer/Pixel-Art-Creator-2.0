{
  "api/DentedPixel.LTExamples.PathBezier.html": {
    "href": "api/DentedPixel.LTExamples.PathBezier.html",
    "title": "Class PathBezier | |",
    "keywords": "Class PathBezier Namespace DentedPixel.LTExamples public class PathBezier : MonoBehaviour Inheritance object PathBezier Fields trans public Transform[] trans Field Value Transform[]"
  },
  "api/DentedPixel.LTExamples.TestingUnitTests.html": {
    "href": "api/DentedPixel.LTExamples.TestingUnitTests.html",
    "title": "Class TestingUnitTests | |",
    "keywords": "Class TestingUnitTests Namespace DentedPixel.LTExamples public class TestingUnitTests : MonoBehaviour Inheritance object TestingUnitTests Fields cube1 public GameObject cube1 Field Value GameObject cube2 public GameObject cube2 Field Value GameObject cube3 public GameObject cube3 Field Value GameObject cube4 public GameObject cube4 Field Value GameObject cubeAlpha1 public GameObject cubeAlpha1 Field Value GameObject cubeAlpha2 public GameObject cubeAlpha2 Field Value GameObject"
  },
  "api/DentedPixel.LTExamples.html": {
    "href": "api/DentedPixel.LTExamples.html",
    "title": "Namespace DentedPixel.LTExamples | |",
    "keywords": "Namespace DentedPixel.LTExamples Classes PathBezier TestingUnitTests"
  },
  "api/DentedPixel.LeanDummy.html": {
    "href": "api/DentedPixel.LeanDummy.html",
    "title": "Class LeanDummy | |",
    "keywords": "Class LeanDummy Namespace DentedPixel public class LeanDummy Inheritance object LeanDummy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/DentedPixel.LeanPool.html": {
    "href": "api/DentedPixel.LeanPool.html",
    "title": "Class LeanPool | |",
    "keywords": "Class LeanPool Namespace DentedPixel public class LeanPool Inheritance object LeanPool Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods giveup(GameObject) public void giveup(GameObject go) Parameters go GameObject init(GameObject, int, Transform, bool) public GameObject[] init(GameObject prefab, int count, Transform parent = null, bool retrieveOldestItems = true) Parameters prefab GameObject count int parent Transform retrieveOldestItems bool Returns GameObject[] init(GameObject[], bool) public void init(GameObject[] array, bool retrieveOldestItems = true) Parameters array GameObject[] retrieveOldestItems bool retrieve() public GameObject retrieve() Returns GameObject"
  },
  "api/DentedPixel.html": {
    "href": "api/DentedPixel.html",
    "title": "Namespace DentedPixel | |",
    "keywords": "Namespace DentedPixel Classes LeanDummy LeanPool"
  },
  "api/Global.BasicSample.html": {
    "href": "api/Global.BasicSample.html",
    "title": "Class BasicSample | |",
    "keywords": "Class BasicSample Namespace Global public class BasicSample : MonoBehaviour Inheritance object BasicSample Methods WriteResult(string) public void WriteResult(string path) Parameters path string WriteResult(string[]) public void WriteResult(string[] paths) Parameters paths string[]"
  },
  "api/Global.CanvasSampleOpenFileImage.html": {
    "href": "api/Global.CanvasSampleOpenFileImage.html",
    "title": "Class CanvasSampleOpenFileImage | |",
    "keywords": "Class CanvasSampleOpenFileImage Namespace Global public class CanvasSampleOpenFileImage : MonoBehaviour, IPointerDownHandler Inheritance object CanvasSampleOpenFileImage Implements IPointerDownHandler Fields output public RawImage output Field Value RawImage Methods OnPointerDown(PointerEventData) public void OnPointerDown(PointerEventData eventData) Parameters eventData PointerEventData"
  },
  "api/Global.CanvasSampleOpenFileText.html": {
    "href": "api/Global.CanvasSampleOpenFileText.html",
    "title": "Class CanvasSampleOpenFileText | |",
    "keywords": "Class CanvasSampleOpenFileText Namespace Global public class CanvasSampleOpenFileText : MonoBehaviour, IPointerDownHandler Inheritance object CanvasSampleOpenFileText Implements IPointerDownHandler Fields output public Text output Field Value Text Methods OnPointerDown(PointerEventData) public void OnPointerDown(PointerEventData eventData) Parameters eventData PointerEventData"
  },
  "api/Global.CanvasSampleOpenFileTextMultiple.html": {
    "href": "api/Global.CanvasSampleOpenFileTextMultiple.html",
    "title": "Class CanvasSampleOpenFileTextMultiple | |",
    "keywords": "Class CanvasSampleOpenFileTextMultiple Namespace Global public class CanvasSampleOpenFileTextMultiple : MonoBehaviour, IPointerDownHandler Inheritance object CanvasSampleOpenFileTextMultiple Implements IPointerDownHandler Fields output public Text output Field Value Text Methods OnPointerDown(PointerEventData) public void OnPointerDown(PointerEventData eventData) Parameters eventData PointerEventData"
  },
  "api/Global.CanvasSampleSaveFileImage.html": {
    "href": "api/Global.CanvasSampleSaveFileImage.html",
    "title": "Class CanvasSampleSaveFileImage | |",
    "keywords": "Class CanvasSampleSaveFileImage Namespace Global public class CanvasSampleSaveFileImage : MonoBehaviour, IPointerDownHandler Inheritance object CanvasSampleSaveFileImage Implements IPointerDownHandler Fields output public Text output Field Value Text Methods OnClick() public void OnClick() OnPointerDown(PointerEventData) public void OnPointerDown(PointerEventData eventData) Parameters eventData PointerEventData"
  },
  "api/Global.CanvasSampleSaveFileText.html": {
    "href": "api/Global.CanvasSampleSaveFileText.html",
    "title": "Class CanvasSampleSaveFileText | |",
    "keywords": "Class CanvasSampleSaveFileText Namespace Global public class CanvasSampleSaveFileText : MonoBehaviour, IPointerDownHandler Inheritance object CanvasSampleSaveFileText Implements IPointerDownHandler Fields output public Text output Field Value Text Methods OnClick() public void OnClick() OnPointerDown(PointerEventData) public void OnPointerDown(PointerEventData eventData) Parameters eventData PointerEventData"
  },
  "api/Global.ExampleSpline.html": {
    "href": "api/Global.ExampleSpline.html",
    "title": "Class ExampleSpline | |",
    "keywords": "Class ExampleSpline Namespace Global public class ExampleSpline : MonoBehaviour Inheritance object ExampleSpline Fields trans public Transform[] trans Field Value Transform[]"
  },
  "api/Global.Following.html": {
    "href": "api/Global.Following.html",
    "title": "Class Following | |",
    "keywords": "Class Following Namespace Global public class Following : MonoBehaviour Inheritance object Following Fields dude1 public Transform dude1 Field Value Transform dude1Title public Transform dude1Title Field Value Transform dude2 public Transform dude2 Field Value Transform dude2Title public Transform dude2Title Field Value Transform dude3 public Transform dude3 Field Value Transform dude3Title public Transform dude3Title Field Value Transform dude4 public Transform dude4 Field Value Transform dude4Title public Transform dude4Title Field Value Transform dude5 public Transform dude5 Field Value Transform dude5Title public Transform dude5Title Field Value Transform followArrow public Transform followArrow Field Value Transform planet public Transform planet Field Value Transform"
  },
  "api/Global.FollowingTests.html": {
    "href": "api/Global.FollowingTests.html",
    "title": "Class FollowingTests | |",
    "keywords": "Class FollowingTests Namespace Global public class FollowingTests : MonoBehaviour Inheritance object FollowingTests Fields cube1 public Transform cube1 Field Value Transform cube2 public Transform cube2 Field Value Transform cube3 public Transform cube3 Field Value Transform cube4 public Transform cube4 Field Value Transform cube5 public Transform cube5 Field Value Transform cube6 public Transform cube6 Field Value Transform fly1 public Transform fly1 Field Value Transform followTrans public Transform followTrans Field Value Transform"
  },
  "api/Global.GeneralAdvancedTechniques.html": {
    "href": "api/Global.GeneralAdvancedTechniques.html",
    "title": "Class GeneralAdvancedTechniques | |",
    "keywords": "Class GeneralAdvancedTechniques Namespace Global public class GeneralAdvancedTechniques : MonoBehaviour Inheritance object GeneralAdvancedTechniques Fields avatar2dRecursive public GameObject avatar2dRecursive Field Value GameObject avatarMove public GameObject avatarMove Field Value GameObject avatarRecursive public GameObject avatarRecursive Field Value GameObject avatarSpeed public GameObject[] avatarSpeed Field Value GameObject[] avatarSpeed2 public GameObject[] avatarSpeed2 Field Value GameObject[] movePts public Transform[] movePts Field Value Transform[] textField public RectTransform textField Field Value RectTransform wingPersonPanel public RectTransform wingPersonPanel Field Value RectTransform"
  },
  "api/Global.GeneralBasic.html": {
    "href": "api/Global.GeneralBasic.html",
    "title": "Class GeneralBasic | |",
    "keywords": "Class GeneralBasic Namespace Global public class GeneralBasic : MonoBehaviour Inheritance object GeneralBasic Fields prefabAvatar public GameObject prefabAvatar Field Value GameObject"
  },
  "api/Global.GeneralBasics2d.html": {
    "href": "api/Global.GeneralBasics2d.html",
    "title": "Class GeneralBasics2d | |",
    "keywords": "Class GeneralBasics2d Namespace Global public class GeneralBasics2d : MonoBehaviour Inheritance object GeneralBasics2d Fields dudeTexture public Texture2D dudeTexture Field Value Texture2D prefabParticles public GameObject prefabParticles Field Value GameObject"
  },
  "api/Global.GeneralCameraShake.html": {
    "href": "api/Global.GeneralCameraShake.html",
    "title": "Class GeneralCameraShake | |",
    "keywords": "Class GeneralCameraShake Namespace Global public class GeneralCameraShake : MonoBehaviour Inheritance object GeneralCameraShake"
  },
  "api/Global.GeneralEasingTypes.html": {
    "href": "api/Global.GeneralEasingTypes.html",
    "title": "Class GeneralEasingTypes | |",
    "keywords": "Class GeneralEasingTypes Namespace Global public class GeneralEasingTypes : MonoBehaviour Inheritance object GeneralEasingTypes Fields animationCurve public AnimationCurve animationCurve Field Value AnimationCurve lineDrawScale public float lineDrawScale Field Value float"
  },
  "api/Global.GeneralEventsListeners.MyEvents.html": {
    "href": "api/Global.GeneralEventsListeners.MyEvents.html",
    "title": "Enum GeneralEventsListeners.MyEvents | |",
    "keywords": "Enum GeneralEventsListeners.MyEvents Namespace Global public enum GeneralEventsListeners.MyEvents Fields CHANGE_COLOR = 0 JUMP = 1 LENGTH = 2"
  },
  "api/Global.GeneralEventsListeners.html": {
    "href": "api/Global.GeneralEventsListeners.html",
    "title": "Class GeneralEventsListeners | |",
    "keywords": "Class GeneralEventsListeners Namespace Global public class GeneralEventsListeners : MonoBehaviour Inheritance object GeneralEventsListeners"
  },
  "api/Global.GeneralSequencer.html": {
    "href": "api/Global.GeneralSequencer.html",
    "title": "Class GeneralSequencer | |",
    "keywords": "Class GeneralSequencer Namespace Global public class GeneralSequencer : MonoBehaviour Inheritance object GeneralSequencer Fields avatar1 public GameObject avatar1 Field Value GameObject dustCloudPrefab public GameObject dustCloudPrefab Field Value GameObject speedScale public float speedScale Field Value float star public GameObject star Field Value GameObject Methods Start() public void Start()"
  },
  "api/Global.GeneralSimpleUI.html": {
    "href": "api/Global.GeneralSimpleUI.html",
    "title": "Class GeneralSimpleUI | |",
    "keywords": "Class GeneralSimpleUI Namespace Global public class GeneralSimpleUI : MonoBehaviour Inheritance object GeneralSimpleUI Fields button public RectTransform button Field Value RectTransform"
  },
  "api/Global.GeneralUISpace.html": {
    "href": "api/Global.GeneralUISpace.html",
    "title": "Class GeneralUISpace | |",
    "keywords": "Class GeneralUISpace Namespace Global public class GeneralUISpace : MonoBehaviour Inheritance object GeneralUISpace Fields chatBar1 public RectTransform chatBar1 Field Value RectTransform chatBar2 public RectTransform chatBar2 Field Value RectTransform chatRect public RectTransform chatRect Field Value RectTransform chatSprites public Sprite[] chatSprites Field Value Sprite[] chatText public UnityEngine.UI.Text chatText Field Value Text chatWindow public RectTransform chatWindow Field Value RectTransform mainButton1 public RectTransform mainButton1 Field Value RectTransform mainButton2 public RectTransform mainButton2 Field Value RectTransform mainParagraphText public RectTransform mainParagraphText Field Value RectTransform mainTitleText public RectTransform mainTitleText Field Value RectTransform mainWindow public RectTransform mainWindow Field Value RectTransform pauseRing1 public RectTransform pauseRing1 Field Value RectTransform pauseRing2 public RectTransform pauseRing2 Field Value RectTransform pauseWindow public RectTransform pauseWindow Field Value RectTransform rawImageRect public RectTransform rawImageRect Field Value RectTransform"
  },
  "api/Global.LTBezier.html": {
    "href": "api/Global.LTBezier.html",
    "title": "Class LTBezier | |",
    "keywords": "Class LTBezier Namespace Global public class LTBezier Inheritance object LTBezier Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LTBezier(Vector3, Vector3, Vector3, Vector3, float) public LTBezier(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float precision) Parameters a Vector3 b Vector3 c Vector3 d Vector3 precision float Fields length public float length Field Value float Methods point(float) public Vector3 point(float t) Parameters t float Returns Vector3"
  },
  "api/Global.LTBezierPath.html": {
    "href": "api/Global.LTBezierPath.html",
    "title": "Class LTBezierPath | |",
    "keywords": "Class LTBezierPath Namespace Global public class LTBezierPath Inheritance object LTBezierPath Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LTBezierPath() public LTBezierPath() LTBezierPath(Vector3[]) public LTBezierPath(Vector3[] pts_) Parameters pts_ Vector3[] Fields length public float length Field Value float orientToPath public bool orientToPath Field Value bool orientToPath2d public bool orientToPath2d Field Value bool pts public Vector3[] pts Field Value Vector3[] Properties distance public float distance { get; } Property Value float Methods gizmoDraw(float) public void gizmoDraw(float t = -1) Parameters t float place(Transform, float) Place an object along a certain point on the path (facing the direction perpendicular to the path) public void place(Transform transform, float ratio) Parameters transform Transform ratio float place(Transform, float, Vector3) Place an object along a certain point on the path, with it facing a certain direction perpendicular to the path public void place(Transform transform, float ratio, Vector3 worldUp) Parameters transform Transform ratio float worldUp Vector3 place2d(Transform, float) public void place2d(Transform transform, float ratio) Parameters transform Transform ratio float placeLocal(Transform, float) Place an object along a certain point on the path (facing the direction perpendicular to the path) - Local Space, not world-space public void placeLocal(Transform transform, float ratio) Parameters transform Transform ratio float placeLocal(Transform, float, Vector3) Place an object along a certain point on the path, with it facing a certain direction perpendicular to the path - Local Space, not world-space public void placeLocal(Transform transform, float ratio, Vector3 worldUp) Parameters transform Transform ratio float worldUp Vector3 placeLocal2d(Transform, float) public void placeLocal2d(Transform transform, float ratio) Parameters transform Transform ratio float point(float) Retrieve a point along a path public Vector3 point(float ratio) Parameters ratio float Returns Vector3 ratioAtPoint(Vector3, float) Retrieve the closest ratio near the point public float ratioAtPoint(Vector3 pt, float precision = 0.01) Parameters pt Vector3 precision float Returns float setPoints(Vector3[]) public void setPoints(Vector3[] pts_) Parameters pts_ Vector3[]"
  },
  "api/Global.LTDescr.ActionMethodDelegate.html": {
    "href": "api/Global.LTDescr.ActionMethodDelegate.html",
    "title": "Delegate LTDescr.ActionMethodDelegate | |",
    "keywords": "Delegate LTDescr.ActionMethodDelegate Namespace Global public delegate void LTDescr.ActionMethodDelegate()"
  },
  "api/Global.LTDescr.EaseTypeDelegate.html": {
    "href": "api/Global.LTDescr.EaseTypeDelegate.html",
    "title": "Delegate LTDescr.EaseTypeDelegate | |",
    "keywords": "Delegate LTDescr.EaseTypeDelegate Namespace Global public delegate Vector3 LTDescr.EaseTypeDelegate() Returns Vector3"
  },
  "api/Global.LTDescr.html": {
    "href": "api/Global.LTDescr.html",
    "title": "Class LTDescr | |",
    "keywords": "Class LTDescr Namespace Global public class LTDescr Inheritance object LTDescr Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LTDescr() public LTDescr() Fields _optional public LTDescrOptional _optional Field Value LTDescrOptional counter public uint counter Field Value uint delay public float delay Field Value float destroyOnComplete public bool destroyOnComplete Field Value bool direction public float direction Field Value float directionLast public float directionLast Field Value float dt public static float dt Field Value float easeMethod public LTDescr.EaseTypeDelegate easeMethod Field Value LTDescr.EaseTypeDelegate hasExtraOnCompletes public bool hasExtraOnCompletes Field Value bool hasInitiliazed public bool hasInitiliazed Field Value bool hasPhysics public bool hasPhysics Field Value bool hasUpdateCallback public bool hasUpdateCallback Field Value bool lastVal public float lastVal Field Value float loopCount public int loopCount Field Value int loopType public LeanTweenType loopType Field Value LeanTweenType newVect public static Vector3 newVect Field Value Vector3 onCompleteOnRepeat public bool onCompleteOnRepeat Field Value bool onCompleteOnStart public bool onCompleteOnStart Field Value bool overshoot public float overshoot Field Value float passed public float passed Field Value float period public float period Field Value float ratioPassed public float ratioPassed Field Value float rawImage public UnityEngine.UI.RawImage rawImage Field Value RawImage rectTransform public RectTransform rectTransform Field Value RectTransform scale public float scale Field Value float speed public float speed Field Value float spriteRen public SpriteRenderer spriteRen Field Value SpriteRenderer sprites public UnityEngine.Sprite[] sprites Field Value Sprite[] time public float time Field Value float toggle public bool toggle Field Value bool trans public Transform trans Field Value Transform type public TweenAction type Field Value TweenAction uiImage public UnityEngine.UI.Image uiImage Field Value Image uiText public UnityEngine.UI.Text uiText Field Value Text useEstimatedTime public bool useEstimatedTime Field Value bool useFrames public bool useFrames Field Value bool useManualTime public bool useManualTime Field Value bool useRecursion public bool useRecursion Field Value bool usesNormalDt public bool usesNormalDt Field Value bool val public static float val Field Value float Properties easeInternal public LTDescr.ActionMethodDelegate easeInternal { get; set; } Property Value LTDescr.ActionMethodDelegate from public Vector3 from { get; set; } Property Value Vector3 id public int id { get; } Property Value int initInternal public LTDescr.ActionMethodDelegate initInternal { get; set; } Property Value LTDescr.ActionMethodDelegate optional public LTDescrOptional optional { get; set; } Property Value LTDescrOptional to public Vector3 to { get; set; } Property Value Vector3 toTrans public Transform toTrans { get; } Property Value Transform uniqueId public int uniqueId { get; } Property Value int Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. callOnCompletes() public void callOnCompletes() cancel(GameObject) [Obsolete(\"Use 'LeanTween.cancel( id )' instead\")] public LTDescr cancel(GameObject gameObject) Parameters gameObject GameObject Returns LTDescr pause() public LTDescr pause() Returns LTDescr reset() public void reset() resume() public LTDescr resume() Returns LTDescr setAlpha() public LTDescr setAlpha() Returns LTDescr setAlphaVertex() public LTDescr setAlphaVertex() Returns LTDescr setAudio(object) public LTDescr setAudio(object audio) Parameters audio object Returns LTDescr setAxis(Vector3) public LTDescr setAxis(Vector3 axis) Parameters axis Vector3 Returns LTDescr setCallback() public LTDescr setCallback() Returns LTDescr setCallbackColor() public LTDescr setCallbackColor() Returns LTDescr setCanvasAlpha() public LTDescr setCanvasAlpha() Returns LTDescr setCanvasColor() public LTDescr setCanvasColor() Returns LTDescr setCanvasGroupAlpha() public LTDescr setCanvasGroupAlpha() Returns LTDescr setCanvasMove() public LTDescr setCanvasMove() Returns LTDescr setCanvasMoveX() public LTDescr setCanvasMoveX() Returns LTDescr setCanvasMoveY() public LTDescr setCanvasMoveY() Returns LTDescr setCanvasMoveZ() public LTDescr setCanvasMoveZ() Returns LTDescr setCanvasPlaySprite() public LTDescr setCanvasPlaySprite() Returns LTDescr setCanvasRotateAround() public LTDescr setCanvasRotateAround() Returns LTDescr setCanvasRotateAroundLocal() public LTDescr setCanvasRotateAroundLocal() Returns LTDescr setCanvasScale() public LTDescr setCanvasScale() Returns LTDescr setCanvasSizeDelta() public LTDescr setCanvasSizeDelta() Returns LTDescr setColor() public LTDescr setColor() Returns LTDescr setDelay(float) public LTDescr setDelay(float delay) Parameters delay float Returns LTDescr setDelayedSound() public LTDescr setDelayedSound() Returns LTDescr setDestroyOnComplete(bool) public LTDescr setDestroyOnComplete(bool doesDestroy) Parameters doesDestroy bool Returns LTDescr setDiff(Vector3) public LTDescr setDiff(Vector3 diff) Parameters diff Vector3 Returns LTDescr setDirection(float) public LTDescr setDirection(float direction) Parameters direction float Returns LTDescr setEase(AnimationCurve) public LTDescr setEase(AnimationCurve easeCurve) Parameters easeCurve AnimationCurve Returns LTDescr setEase(LeanTweenType) public LTDescr setEase(LeanTweenType easeType) Parameters easeType LeanTweenType Returns LTDescr setEaseInBack() public LTDescr setEaseInBack() Returns LTDescr setEaseInBounce() public LTDescr setEaseInBounce() Returns LTDescr setEaseInCirc() public LTDescr setEaseInCirc() Returns LTDescr setEaseInCubic() public LTDescr setEaseInCubic() Returns LTDescr setEaseInElastic() public LTDescr setEaseInElastic() Returns LTDescr setEaseInExpo() public LTDescr setEaseInExpo() Returns LTDescr setEaseInOutBack() public LTDescr setEaseInOutBack() Returns LTDescr setEaseInOutBounce() public LTDescr setEaseInOutBounce() Returns LTDescr setEaseInOutCirc() public LTDescr setEaseInOutCirc() Returns LTDescr setEaseInOutCubic() public LTDescr setEaseInOutCubic() Returns LTDescr setEaseInOutElastic() public LTDescr setEaseInOutElastic() Returns LTDescr setEaseInOutExpo() public LTDescr setEaseInOutExpo() Returns LTDescr setEaseInOutQuad() public LTDescr setEaseInOutQuad() Returns LTDescr setEaseInOutQuart() public LTDescr setEaseInOutQuart() Returns LTDescr setEaseInOutQuint() public LTDescr setEaseInOutQuint() Returns LTDescr setEaseInOutSine() public LTDescr setEaseInOutSine() Returns LTDescr setEaseInQuad() public LTDescr setEaseInQuad() Returns LTDescr setEaseInQuart() public LTDescr setEaseInQuart() Returns LTDescr setEaseInQuint() public LTDescr setEaseInQuint() Returns LTDescr setEaseInSine() public LTDescr setEaseInSine() Returns LTDescr setEaseLinear() public LTDescr setEaseLinear() Returns LTDescr setEaseOutBack() public LTDescr setEaseOutBack() Returns LTDescr setEaseOutBounce() public LTDescr setEaseOutBounce() Returns LTDescr setEaseOutCirc() public LTDescr setEaseOutCirc() Returns LTDescr setEaseOutCubic() public LTDescr setEaseOutCubic() Returns LTDescr setEaseOutElastic() public LTDescr setEaseOutElastic() Returns LTDescr setEaseOutExpo() public LTDescr setEaseOutExpo() Returns LTDescr setEaseOutQuad() public LTDescr setEaseOutQuad() Returns LTDescr setEaseOutQuart() public LTDescr setEaseOutQuart() Returns LTDescr setEaseOutQuint() public LTDescr setEaseOutQuint() Returns LTDescr setEaseOutSine() public LTDescr setEaseOutSine() Returns LTDescr setEasePunch() public LTDescr setEasePunch() Returns LTDescr setEaseShake() public LTDescr setEaseShake() Returns LTDescr setEaseSpring() public LTDescr setEaseSpring() Returns LTDescr setFollow() public LTDescr setFollow() Returns LTDescr setFrameRate(float) public LTDescr setFrameRate(float frameRate) Parameters frameRate float Returns LTDescr setFrom(float) public LTDescr setFrom(float from) Parameters from float Returns LTDescr setFrom(Vector3) public LTDescr setFrom(Vector3 from) Parameters from Vector3 Returns LTDescr setFromColor(Color) public LTDescr setFromColor(Color col) Parameters col Color Returns LTDescr setGUIAlpha() public LTDescr setGUIAlpha() Returns LTDescr setGUIMove() public LTDescr setGUIMove() Returns LTDescr setGUIMoveMargin() public LTDescr setGUIMoveMargin() Returns LTDescr setGUIRotate() public LTDescr setGUIRotate() Returns LTDescr setGUIScale() public LTDescr setGUIScale() Returns LTDescr setHasInitialized(bool) public LTDescr setHasInitialized(bool has) Parameters has bool Returns LTDescr setId(uint, uint) public LTDescr setId(uint id, uint global_counter) Parameters id uint global_counter uint Returns LTDescr setIgnoreTimeScale(bool) public LTDescr setIgnoreTimeScale(bool useUnScaledTime) Parameters useUnScaledTime bool Returns LTDescr setLoopClamp() public LTDescr setLoopClamp() Returns LTDescr setLoopClamp(int) public LTDescr setLoopClamp(int loops) Parameters loops int Returns LTDescr setLoopCount(int) public LTDescr setLoopCount(int loopCount) Parameters loopCount int Returns LTDescr setLoopOnce() public LTDescr setLoopOnce() Returns LTDescr setLoopPingPong() public LTDescr setLoopPingPong() Returns LTDescr setLoopPingPong(int) public LTDescr setLoopPingPong(int loops) Parameters loops int Returns LTDescr setLoopType(LeanTweenType) public LTDescr setLoopType(LeanTweenType loopType) Parameters loopType LeanTweenType Returns LTDescr setMove() public LTDescr setMove() Returns LTDescr setMoveCurved() public LTDescr setMoveCurved() Returns LTDescr setMoveCurvedLocal() public LTDescr setMoveCurvedLocal() Returns LTDescr setMoveLocal() public LTDescr setMoveLocal() Returns LTDescr setMoveLocalX() public LTDescr setMoveLocalX() Returns LTDescr setMoveLocalY() public LTDescr setMoveLocalY() Returns LTDescr setMoveLocalZ() public LTDescr setMoveLocalZ() Returns LTDescr setMoveSpline() public LTDescr setMoveSpline() Returns LTDescr setMoveSplineLocal() public LTDescr setMoveSplineLocal() Returns LTDescr setMoveToTransform() public LTDescr setMoveToTransform() Returns LTDescr setMoveX() public LTDescr setMoveX() Returns LTDescr setMoveY() public LTDescr setMoveY() Returns LTDescr setMoveZ() public LTDescr setMoveZ() Returns LTDescr setOffset(Vector3) public LTDescr setOffset(Vector3 offset) Parameters offset Vector3 Returns LTDescr setOnComplete(Action) public LTDescr setOnComplete(Action onComplete) Parameters onComplete Action Returns LTDescr setOnComplete(Action<object>) public LTDescr setOnComplete(Action<object> onComplete) Parameters onComplete Action<object> Returns LTDescr setOnComplete(Action<object>, object) public LTDescr setOnComplete(Action<object> onComplete, object onCompleteParam) Parameters onComplete Action<object> onCompleteParam object Returns LTDescr setOnCompleteOnRepeat(bool) public LTDescr setOnCompleteOnRepeat(bool isOn) Parameters isOn bool Returns LTDescr setOnCompleteOnStart(bool) public LTDescr setOnCompleteOnStart(bool isOn) Parameters isOn bool Returns LTDescr setOnCompleteParam(object) public LTDescr setOnCompleteParam(object onCompleteParam) Parameters onCompleteParam object Returns LTDescr setOnStart(Action) public LTDescr setOnStart(Action onStart) Parameters onStart Action Returns LTDescr setOnUpdate(Action<Color, object>) public LTDescr setOnUpdate(Action<Color, object> onUpdate) Parameters onUpdate Action<Color, object> Returns LTDescr setOnUpdate(Action<Color>) public LTDescr setOnUpdate(Action<Color> onUpdate) Parameters onUpdate Action<Color> Returns LTDescr setOnUpdate(Action<float, object>, object) public LTDescr setOnUpdate(Action<float, object> onUpdate, object onUpdateParam = null) Parameters onUpdate Action<float, object> onUpdateParam object Returns LTDescr setOnUpdate(Action<float>) public LTDescr setOnUpdate(Action<float> onUpdate) Parameters onUpdate Action<float> Returns LTDescr setOnUpdate(Action<Vector2>, object) public LTDescr setOnUpdate(Action<Vector2> onUpdate, object onUpdateParam = null) Parameters onUpdate Action<Vector2> onUpdateParam object Returns LTDescr setOnUpdate(Action<Vector3, object>, object) public LTDescr setOnUpdate(Action<Vector3, object> onUpdate, object onUpdateParam = null) Parameters onUpdate Action<Vector3, object> onUpdateParam object Returns LTDescr setOnUpdate(Action<Vector3>, object) public LTDescr setOnUpdate(Action<Vector3> onUpdate, object onUpdateParam = null) Parameters onUpdate Action<Vector3> onUpdateParam object Returns LTDescr setOnUpdateColor(Action<Color, object>) public LTDescr setOnUpdateColor(Action<Color, object> onUpdate) Parameters onUpdate Action<Color, object> Returns LTDescr setOnUpdateColor(Action<Color>) public LTDescr setOnUpdateColor(Action<Color> onUpdate) Parameters onUpdate Action<Color> Returns LTDescr setOnUpdateObject(Action<float, object>) public LTDescr setOnUpdateObject(Action<float, object> onUpdate) Parameters onUpdate Action<float, object> Returns LTDescr setOnUpdateParam(object) public LTDescr setOnUpdateParam(object onUpdateParam) Parameters onUpdateParam object Returns LTDescr setOnUpdateRatio(Action<float, float>) public LTDescr setOnUpdateRatio(Action<float, float> onUpdate) Parameters onUpdate Action<float, float> Returns LTDescr setOnUpdateVector2(Action<Vector2>) public LTDescr setOnUpdateVector2(Action<Vector2> onUpdate) Parameters onUpdate Action<Vector2> Returns LTDescr setOnUpdateVector3(Action<Vector3>) public LTDescr setOnUpdateVector3(Action<Vector3> onUpdate) Parameters onUpdate Action<Vector3> Returns LTDescr setOrientToPath(bool) public LTDescr setOrientToPath(bool doesOrient) Parameters doesOrient bool Returns LTDescr setOrientToPath2d(bool) public LTDescr setOrientToPath2d(bool doesOrient2d) Parameters doesOrient2d bool Returns LTDescr setOvershoot(float) public LTDescr setOvershoot(float overshoot) Parameters overshoot float Returns LTDescr setPassed(float) public LTDescr setPassed(float passed) Parameters passed float Returns LTDescr setPath(LTBezierPath) public LTDescr setPath(LTBezierPath path) Parameters path LTBezierPath Returns LTDescr setPeriod(float) public LTDescr setPeriod(float period) Parameters period float Returns LTDescr setPoint(Vector3) public LTDescr setPoint(Vector3 point) Parameters point Vector3 Returns LTDescr setRect(LTRect) public LTDescr setRect(LTRect rect) Parameters rect LTRect Returns LTDescr setRect(Rect) public LTDescr setRect(Rect rect) Parameters rect Rect Returns LTDescr setRect(RectTransform) public LTDescr setRect(RectTransform rect) Parameters rect RectTransform Returns LTDescr setRecursive(bool) public LTDescr setRecursive(bool useRecursion) Parameters useRecursion bool Returns LTDescr setRepeat(int) public LTDescr setRepeat(int repeat) Parameters repeat int Returns LTDescr setRotate() public LTDescr setRotate() Returns LTDescr setRotateAround() public LTDescr setRotateAround() Returns LTDescr setRotateAroundLocal() public LTDescr setRotateAroundLocal() Returns LTDescr setRotateLocal() public LTDescr setRotateLocal() Returns LTDescr setRotateX() public LTDescr setRotateX() Returns LTDescr setRotateY() public LTDescr setRotateY() Returns LTDescr setRotateZ() public LTDescr setRotateZ() Returns LTDescr setScale() public LTDescr setScale() Returns LTDescr setScale(float) public LTDescr setScale(float scale) Parameters scale float Returns LTDescr setScaleX() public LTDescr setScaleX() Returns LTDescr setScaleY() public LTDescr setScaleY() Returns LTDescr setScaleZ() public LTDescr setScaleZ() Returns LTDescr setSpeed(float) public LTDescr setSpeed(float speed) Parameters speed float Returns LTDescr setSprites(Sprite[]) public LTDescr setSprites(UnityEngine.Sprite[] sprites) Parameters sprites Sprite[] Returns LTDescr setTarget(Transform) public LTDescr setTarget(Transform trans) Parameters trans Transform Returns LTDescr setTextAlpha() public LTDescr setTextAlpha() Returns LTDescr setTextColor() public LTDescr setTextColor() Returns LTDescr setTime(float) public LTDescr setTime(float time) Parameters time float Returns LTDescr setTo(Transform) public LTDescr setTo(Transform to) Parameters to Transform Returns LTDescr setTo(Vector3) public LTDescr setTo(Vector3 to) Parameters to Vector3 Returns LTDescr setUseEstimatedTime(bool) public LTDescr setUseEstimatedTime(bool useEstimatedTime) Parameters useEstimatedTime bool Returns LTDescr setUseFrames(bool) public LTDescr setUseFrames(bool useFrames) Parameters useFrames bool Returns LTDescr setUseManualTime(bool) public LTDescr setUseManualTime(bool useManualTime) Parameters useManualTime bool Returns LTDescr setValue3() public LTDescr setValue3() Returns LTDescr updateInternal() public bool updateInternal() Returns bool updateNow() public LTDescr updateNow() Returns LTDescr"
  },
  "api/Global.LTDescrOptional.html": {
    "href": "api/Global.LTDescrOptional.html",
    "title": "Class LTDescrOptional | |",
    "keywords": "Class LTDescrOptional Namespace Global public class LTDescrOptional Inheritance object LTDescrOptional Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields animationCurve public AnimationCurve animationCurve Field Value AnimationCurve color public Color color Field Value Color initFrameCount public int initFrameCount Field Value int Properties axis public Vector3 axis { get; set; } Property Value Vector3 lastVal public float lastVal { get; set; } Property Value float ltRect public LTRect ltRect { get; set; } Property Value LTRect onComplete public Action onComplete { get; set; } Property Value Action onCompleteObject public Action<object> onCompleteObject { get; set; } Property Value Action<object> onCompleteParam public object onCompleteParam { get; set; } Property Value object onStart public Action onStart { get; set; } Property Value Action onUpdateColor public Action<Color> onUpdateColor { get; set; } Property Value Action<Color> onUpdateColorObject public Action<Color, object> onUpdateColorObject { get; set; } Property Value Action<Color, object> onUpdateFloat public Action<float> onUpdateFloat { get; set; } Property Value Action<float> onUpdateFloatObject public Action<float, object> onUpdateFloatObject { get; set; } Property Value Action<float, object> onUpdateFloatRatio public Action<float, float> onUpdateFloatRatio { get; set; } Property Value Action<float, float> onUpdateParam public object onUpdateParam { get; set; } Property Value object onUpdateVector2 public Action<Vector2> onUpdateVector2 { get; set; } Property Value Action<Vector2> onUpdateVector3 public Action<Vector3> onUpdateVector3 { get; set; } Property Value Action<Vector3> onUpdateVector3Object public Action<Vector3, object> onUpdateVector3Object { get; set; } Property Value Action<Vector3, object> origRotation public Quaternion origRotation { get; set; } Property Value Quaternion path public LTBezierPath path { get; set; } Property Value LTBezierPath point public Vector3 point { get; set; } Property Value Vector3 spline public LTSpline spline { get; set; } Property Value LTSpline toTrans public Transform toTrans { get; set; } Property Value Transform Methods callOnUpdate(float, float) public void callOnUpdate(float val, float ratioPassed) Parameters val float ratioPassed float reset() public void reset()"
  },
  "api/Global.LTEvent.html": {
    "href": "api/Global.LTEvent.html",
    "title": "Class LTEvent | |",
    "keywords": "Class LTEvent Namespace Global public class LTEvent Inheritance object LTEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LTEvent(int, object) public LTEvent(int id, object data) Parameters id int data object Fields data public object data Field Value object id public int id Field Value int"
  },
  "api/Global.LTGUI.Element_Type.html": {
    "href": "api/Global.LTGUI.Element_Type.html",
    "title": "Enum LTGUI.Element_Type | |",
    "keywords": "Enum LTGUI.Element_Type Namespace Global public enum LTGUI.Element_Type Fields Label = 1 Texture = 0"
  },
  "api/Global.LTGUI.html": {
    "href": "api/Global.LTGUI.html",
    "title": "Class LTGUI | |",
    "keywords": "Class LTGUI Namespace Global public class LTGUI Inheritance object LTGUI Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BUTTONS_MAX public static int BUTTONS_MAX Field Value int RECTS_PER_LEVEL public static int RECTS_PER_LEVEL Field Value int RECT_LEVELS public static int RECT_LEVELS Field Value int Methods checkOnScreen(Rect) public static bool checkOnScreen(Rect rect) Parameters rect Rect Returns bool checkWithinRect(Vector2, Rect) public static bool checkWithinRect(Vector2 vec2, Rect rect) Parameters vec2 Vector2 rect Rect Returns bool destroy(int) public static void destroy(int id) Parameters id int destroyAll(int) public static void destroyAll(int depth) Parameters depth int element(LTRect, int) public static LTRect element(LTRect rect, int depth) Parameters rect LTRect depth int Returns LTRect firstTouch() public static Vector2 firstTouch() Returns Vector2 hasNoOverlap(Rect, int) public static bool hasNoOverlap(Rect rect, int depth) Parameters rect Rect depth int Returns bool init() public static void init() initRectCheck() public static void initRectCheck() label(LTRect, string, int) public static LTRect label(LTRect rect, string label, int depth) Parameters rect LTRect label string depth int Returns LTRect label(Rect, string, int) public static LTRect label(Rect rect, string label, int depth) Parameters rect Rect label string depth int Returns LTRect pressedWithinRect(Rect) public static bool pressedWithinRect(Rect rect) Parameters rect Rect Returns bool reset() public static void reset() texture(LTRect, Texture, int) public static LTRect texture(LTRect rect, Texture texture, int depth) Parameters rect LTRect texture Texture depth int Returns LTRect texture(Rect, Texture, int) public static LTRect texture(Rect rect, Texture texture, int depth) Parameters rect Rect texture Texture depth int Returns LTRect update(int) public static void update(int updateLevel) Parameters updateLevel int"
  },
  "api/Global.LTRect.html": {
    "href": "api/Global.LTRect.html",
    "title": "Class LTRect | |",
    "keywords": "Class LTRect Namespace Global [Serializable] public class LTRect Inheritance object LTRect Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LTRect() public LTRect() LTRect(Rect) public LTRect(Rect rect) Parameters rect Rect LTRect(float, float, float, float) public LTRect(float x, float y, float width, float height) Parameters x float y float width float height float LTRect(float, float, float, float, float) public LTRect(float x, float y, float width, float height, float alpha) Parameters x float y float width float height float alpha float LTRect(float, float, float, float, float, float) public LTRect(float x, float y, float width, float height, float alpha, float rotation) Parameters x float y float width float height float alpha float rotation float Fields _rect public Rect _rect Field Value Rect alpha public float alpha Field Value float alphaEnabled public bool alphaEnabled Field Value bool color public Color color Field Value Color colorTouched public static bool colorTouched Field Value bool counter public int counter Field Value int fontScaleToFit public bool fontScaleToFit Field Value bool labelStr public string labelStr Field Value string margin public Vector2 margin Field Value Vector2 pivot public Vector2 pivot Field Value Vector2 relativeRect public Rect relativeRect Field Value Rect rotateEnabled public bool rotateEnabled Field Value bool rotateFinished public bool rotateFinished Field Value bool rotation public float rotation Field Value float sizeByHeight public bool sizeByHeight Field Value bool style public GUIStyle style Field Value GUIStyle texture public Texture texture Field Value Texture type public LTGUI.Element_Type type Field Value LTGUI.Element_Type useColor public bool useColor Field Value bool useSimpleScale public bool useSimpleScale Field Value bool Properties hasInitiliazed public bool hasInitiliazed { get; } Property Value bool height public float height { get; set; } Property Value float id public int id { get; } Property Value int rect public Rect rect { get; set; } Property Value Rect width public float width { get; set; } Property Value float x public float x { get; set; } Property Value float y public float y { get; set; } Property Value float Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. reset() public void reset() resetForRotation() public void resetForRotation() setAlpha(float) public LTRect setAlpha(float alpha) Parameters alpha float Returns LTRect setColor(Color) public LTRect setColor(Color color) Parameters color Color Returns LTRect setFontScaleToFit(bool) public LTRect setFontScaleToFit(bool fontScaleToFit) Parameters fontScaleToFit bool Returns LTRect setId(int, int) public void setId(int id, int counter) Parameters id int counter int setLabel(string) public LTRect setLabel(string str) Parameters str string Returns LTRect setSizeByHeight(bool) public LTRect setSizeByHeight(bool sizeByHeight) Parameters sizeByHeight bool Returns LTRect setStyle(GUIStyle) public LTRect setStyle(GUIStyle style) Parameters style GUIStyle Returns LTRect setUseSimpleScale(bool) public LTRect setUseSimpleScale(bool useSimpleScale) Parameters useSimpleScale bool Returns LTRect setUseSimpleScale(bool, Rect) public LTRect setUseSimpleScale(bool useSimpleScale, Rect relativeRect) Parameters useSimpleScale bool relativeRect Rect Returns LTRect"
  },
  "api/Global.LTSeq.html": {
    "href": "api/Global.LTSeq.html",
    "title": "Class LTSeq | |",
    "keywords": "Class LTSeq Namespace Global public class LTSeq Inheritance object LTSeq Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields counter public uint counter Field Value uint current public LTSeq current Field Value LTSeq previous public LTSeq previous Field Value LTSeq timeScale public float timeScale Field Value float toggle public bool toggle Field Value bool totalDelay public float totalDelay Field Value float tween public LTDescr tween Field Value LTDescr Properties id public int id { get; } Property Value int Methods append(GameObject, Action) public LTSeq append(GameObject gameObject, Action callback) Parameters gameObject GameObject callback Action Returns LTSeq append(GameObject, Action<object>, object) public LTSeq append(GameObject gameObject, Action<object> callback, object obj) Parameters gameObject GameObject callback Action<object> obj object Returns LTSeq append(LTDescr) public LTSeq append(LTDescr tween) Parameters tween LTDescr Returns LTSeq append(Action) public LTSeq append(Action callback) Parameters callback Action Returns LTSeq append(Action<object>, object) public LTSeq append(Action<object> callback, object obj) Parameters callback Action<object> obj object Returns LTSeq append(float) public LTSeq append(float delay) Parameters delay float Returns LTSeq init(uint, uint) public void init(uint id, uint global_counter) Parameters id uint global_counter uint insert(LTDescr) public LTSeq insert(LTDescr tween) Parameters tween LTDescr Returns LTSeq reset() public void reset() reverse() public LTSeq reverse() Returns LTSeq setScale(float) public LTSeq setScale(float timeScale) Parameters timeScale float Returns LTSeq"
  },
  "api/Global.LTSpline.html": {
    "href": "api/Global.LTSpline.html",
    "title": "Class LTSpline | |",
    "keywords": "Class LTSpline Namespace Global Move a GameObject to a certain location [Serializable] public class LTSpline Inheritance object LTSpline Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LTSpline(Vector3[]) public LTSpline(Vector3[] pts) Parameters pts Vector3[] LTSpline(Vector3[], bool) public LTSpline(Vector3[] pts, bool constantSpeed) Parameters pts Vector3[] constantSpeed bool Fields DISTANCE_COUNT public static int DISTANCE_COUNT Field Value int SUBLINE_COUNT public static int SUBLINE_COUNT Field Value int constantSpeed public bool constantSpeed Field Value bool distance public float distance Field Value float orientToPath public bool orientToPath Field Value bool orientToPath2d public bool orientToPath2d Field Value bool pts public Vector3[] pts Field Value Vector3[] ptsAdj [NonSerialized] public Vector3[] ptsAdj Field Value Vector3[] ptsAdjLength public int ptsAdjLength Field Value int Methods drawGizmo(Color) public void drawGizmo(Color color) Parameters color Color drawGizmo(Transform[], Color) public static void drawGizmo(Transform[] arr, Color color) Parameters arr Transform[] color Color drawLine(Transform[], float, Color) public static void drawLine(Transform[] arr, float width, Color color) Parameters arr Transform[] width float color Color drawLinesGLLines(Material, Color, float) public void drawLinesGLLines(Material outlineMaterial, Color color, float width) Parameters outlineMaterial Material color Color width float generateVectors() public Vector3[] generateVectors() Returns Vector3[] gizmoDraw(float) public void gizmoDraw(float t = -1) Parameters t float interp(float) public Vector3 interp(float t) Parameters t float Returns Vector3 map(float) public Vector3 map(float u) Parameters u float Returns Vector3 place(Transform, float) Move a GameObject to a certain location public void place(Transform transform, float ratio) Parameters transform Transform ratio float place(Transform, float, Vector3) Move a GameObject to a certain location public void place(Transform transform, float ratio, Vector3 worldUp) Parameters transform Transform ratio float worldUp Vector3 place2d(Transform, float) public void place2d(Transform transform, float ratio) Parameters transform Transform ratio float placeLocal(Transform, float) Move a GameObject to a certain location public void placeLocal(Transform transform, float ratio) Parameters transform Transform ratio float placeLocal(Transform, float, Vector3) Move a GameObject to a certain location public void placeLocal(Transform transform, float ratio, Vector3 worldUp) Parameters transform Transform ratio float worldUp Vector3 placeLocal2d(Transform, float) public void placeLocal2d(Transform transform, float ratio) Parameters transform Transform ratio float point(float) Move a GameObject to a certain location public Vector3 point(float ratio) Parameters ratio float Returns Vector3 ratioAtPoint(Vector3) Move a GameObject to a certain location public float ratioAtPoint(Vector3 pt) Parameters pt Vector3 Returns float"
  },
  "api/Global.LTUtility.html": {
    "href": "api/Global.LTUtility.html",
    "title": "Class LTUtility | |",
    "keywords": "Class LTUtility Namespace Global public class LTUtility Inheritance object LTUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods reverse(Vector3[]) public static Vector3[] reverse(Vector3[] arr) Parameters arr Vector3[] Returns Vector3[]"
  },
  "api/Global.LeanAudio.html": {
    "href": "api/Global.LeanAudio.html",
    "title": "Class LeanAudio | |",
    "keywords": "Class LeanAudio Namespace Global public class LeanAudio Inheritance object LeanAudio Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields MIN_FREQEUNCY_PERIOD public static float MIN_FREQEUNCY_PERIOD Field Value float PROCESSING_ITERATIONS_MAX public static int PROCESSING_ITERATIONS_MAX Field Value int generatedWaveDistances public static float[] generatedWaveDistances Field Value float[] generatedWaveDistancesCount public static int generatedWaveDistancesCount Field Value int Methods createAudio(AnimationCurve, AnimationCurve, LeanAudioOptions) public static AudioClip createAudio(AnimationCurve volume, AnimationCurve frequency, LeanAudioOptions options = null) Parameters volume AnimationCurve frequency AnimationCurve options LeanAudioOptions Returns AudioClip createAudioStream(AnimationCurve, AnimationCurve, LeanAudioOptions) public static LeanAudioStream createAudioStream(AnimationCurve volume, AnimationCurve frequency, LeanAudioOptions options = null) Parameters volume AnimationCurve frequency AnimationCurve options LeanAudioOptions Returns LeanAudioStream generateAudioFromCurve(AnimationCurve, int) public static AudioClip generateAudioFromCurve(AnimationCurve curve, int frequencyRate = 44100) Parameters curve AnimationCurve frequencyRate int Returns AudioClip options() public static LeanAudioOptions options() Returns LeanAudioOptions play(AudioClip) public static AudioSource play(AudioClip audio) Parameters audio AudioClip Returns AudioSource play(AudioClip, float) public static AudioSource play(AudioClip audio, float volume) Parameters audio AudioClip volume float Returns AudioSource play(AudioClip, Vector3) public static AudioSource play(AudioClip audio, Vector3 pos) Parameters audio AudioClip pos Vector3 Returns AudioSource play(AudioClip, Vector3, float) public static AudioSource play(AudioClip audio, Vector3 pos, float volume) Parameters audio AudioClip pos Vector3 volume float Returns AudioSource playClipAt(AudioClip, Vector3) public static AudioSource playClipAt(AudioClip clip, Vector3 pos) Parameters clip AudioClip pos Vector3 Returns AudioSource printOutAudioClip(AudioClip, ref AnimationCurve, float) public static void printOutAudioClip(AudioClip audioClip, ref AnimationCurve curve, float scaleX = 1) Parameters audioClip AudioClip curve AnimationCurve scaleX float"
  },
  "api/Global.LeanAudioOptions.LeanAudioWaveStyle.html": {
    "href": "api/Global.LeanAudioOptions.LeanAudioWaveStyle.html",
    "title": "Enum LeanAudioOptions.LeanAudioWaveStyle | |",
    "keywords": "Enum LeanAudioOptions.LeanAudioWaveStyle Namespace Global public enum LeanAudioOptions.LeanAudioWaveStyle Fields Noise = 3 Sawtooth = 2 Sine = 0 Square = 1"
  },
  "api/Global.LeanAudioOptions.html": {
    "href": "api/Global.LeanAudioOptions.html",
    "title": "Class LeanAudioOptions | |",
    "keywords": "Class LeanAudioOptions Namespace Global public class LeanAudioOptions Inheritance object LeanAudioOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LeanAudioOptions() public LeanAudioOptions() Fields frequencyRate public int frequencyRate Field Value int modulation public Vector3[] modulation Field Value Vector3[] stream public LeanAudioStream stream Field Value LeanAudioStream useSetData public bool useSetData Field Value bool vibrato public Vector3[] vibrato Field Value Vector3[] waveNoiseInfluence public float waveNoiseInfluence Field Value float waveNoiseScale public float waveNoiseScale Field Value float waveStyle public LeanAudioOptions.LeanAudioWaveStyle waveStyle Field Value LeanAudioOptions.LeanAudioWaveStyle Methods setFrequency(int) public LeanAudioOptions setFrequency(int frequencyRate) Parameters frequencyRate int Returns LeanAudioOptions setVibrato(Vector3[]) public LeanAudioOptions setVibrato(Vector3[] vibrato) Parameters vibrato Vector3[] Returns LeanAudioOptions setWaveNoise() public LeanAudioOptions setWaveNoise() Returns LeanAudioOptions setWaveNoiseInfluence(float) public LeanAudioOptions setWaveNoiseInfluence(float influence) Parameters influence float Returns LeanAudioOptions setWaveNoiseScale(float) public LeanAudioOptions setWaveNoiseScale(float waveScale) Parameters waveScale float Returns LeanAudioOptions setWaveSawtooth() public LeanAudioOptions setWaveSawtooth() Returns LeanAudioOptions setWaveSine() public LeanAudioOptions setWaveSine() Returns LeanAudioOptions setWaveSquare() public LeanAudioOptions setWaveSquare() Returns LeanAudioOptions setWaveStyle(LeanAudioWaveStyle) public LeanAudioOptions setWaveStyle(LeanAudioOptions.LeanAudioWaveStyle style) Parameters style LeanAudioOptions.LeanAudioWaveStyle Returns LeanAudioOptions"
  },
  "api/Global.LeanAudioStream.html": {
    "href": "api/Global.LeanAudioStream.html",
    "title": "Class LeanAudioStream | |",
    "keywords": "Class LeanAudioStream Namespace Global public class LeanAudioStream Inheritance object LeanAudioStream Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LeanAudioStream(float[]) public LeanAudioStream(float[] audioArr) Parameters audioArr float[] Fields audioArr public float[] audioArr Field Value float[] audioClip public AudioClip audioClip Field Value AudioClip position public int position Field Value int Methods OnAudioRead(float[]) public void OnAudioRead(float[] data) Parameters data float[] OnAudioSetPosition(int) public void OnAudioSetPosition(int newPosition) Parameters newPosition int"
  },
  "api/Global.LeanProp.html": {
    "href": "api/Global.LeanProp.html",
    "title": "Enum LeanProp | |",
    "keywords": "Enum LeanProp Namespace Global public enum LeanProp Fields color = 9 localPosition = 1 localX = 5 localY = 6 localZ = 7 position = 0 scale = 8 x = 2 y = 3 z = 4"
  },
  "api/Global.LeanSmooth.html": {
    "href": "api/Global.LeanSmooth.html",
    "title": "Class LeanSmooth | |",
    "keywords": "Class LeanSmooth Namespace Global public class LeanSmooth Inheritance object LeanSmooth Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods bounceOut(Color, Color, ref Color, float, float, float, float, float, float) public static Color bounceOut(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1, float friction = 2, float accelRate = 0.5, float hitDamping = 0.9) Parameters current Color target Color currentVelocity Color smoothTime float maxSpeed float deltaTime float friction float accelRate float hitDamping float Returns Color bounceOut(float, float, ref float, float, float, float, float, float, float) Moves one value towards another (with an ease that bounces back some when it reaches it's destination) public static float bounceOut(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1, float friction = 2, float accelRate = 0.5, float hitDamping = 0.9) Parameters current float target float currentVelocity float smoothTime float maxSpeed float deltaTime float friction float accelRate float hitDamping float Returns float bounceOut(Vector3, Vector3, ref Vector3, float, float, float, float, float, float) Moves one value towards another (with an ease that bounces back some when it reaches it's destination) public static Vector3 bounceOut(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1, float friction = 2, float accelRate = 0.5, float hitDamping = 0.9) Parameters current Vector3 target Vector3 currentVelocity Vector3 smoothTime float maxSpeed float deltaTime float friction float accelRate float hitDamping float Returns Vector3 damp(Color, Color, ref Color, float, float, float) public static Color damp(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1) Parameters current Color target Color currentVelocity Color smoothTime float maxSpeed float deltaTime float Returns Color damp(float, float, ref float, float, float, float) Moves one value towards another (eases in and out to destination with no overshoot) public static float damp(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1) Parameters current float target float currentVelocity float smoothTime float maxSpeed float deltaTime float Returns float damp(Vector3, Vector3, ref Vector3, float, float, float) Moves one value towards another (eases in and out to destination with no overshoot) public static Vector3 damp(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1) Parameters current Vector3 target Vector3 currentVelocity Vector3 smoothTime float maxSpeed float deltaTime float Returns Vector3 linear(Color, Color, float) public static Color linear(Color current, Color target, float moveSpeed) Parameters current Color target Color moveSpeed float Returns Color linear(float, float, float, float) Moves one value towards another (at a constant speed) public static float linear(float current, float target, float moveSpeed, float deltaTime = -1) Parameters current float target float moveSpeed float deltaTime float Returns float linear(Vector3, Vector3, float, float) Moves one value towards another (at a constant speed) public static Vector3 linear(Vector3 current, Vector3 target, float moveSpeed, float deltaTime = -1) Parameters current Vector3 target Vector3 moveSpeed float deltaTime float Returns Vector3 spring(Color, Color, ref Color, float, float, float, float, float) public static Color spring(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1, float friction = 2, float accelRate = 0.5) Parameters current Color target Color currentVelocity Color smoothTime float maxSpeed float deltaTime float friction float accelRate float Returns Color spring(float, float, ref float, float, float, float, float, float) Moves one value towards another (eases in and out to destination with possible overshoot bounciness) public static float spring(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1, float friction = 2, float accelRate = 0.5) Parameters current float target float currentVelocity float smoothTime float maxSpeed float deltaTime float friction float accelRate float Returns float spring(Vector3, Vector3, ref Vector3, float, float, float, float, float) Moves one value towards another (eases in and out to destination with possible overshoot bounciness) public static Vector3 spring(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1, float friction = 2, float accelRate = 0.5) Parameters current Vector3 target Vector3 currentVelocity Vector3 smoothTime float maxSpeed float deltaTime float friction float accelRate float Returns Vector3"
  },
  "api/Global.LeanTest.html": {
    "href": "api/Global.LeanTest.html",
    "title": "Class LeanTest | |",
    "keywords": "Class LeanTest Namespace Global public class LeanTest Inheritance object LeanTest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields expected public static int expected Field Value int testsFinished public static bool testsFinished Field Value bool timeout public static float timeout Field Value float timeoutStarted public static bool timeoutStarted Field Value bool Methods debug(string, bool, string) public static void debug(string name, bool didPass, string failExplaination = null) Parameters name string didPass bool failExplaination string expect(bool, string, string) public static void expect(bool didPass, string definition, string failExplaination = null) Parameters didPass bool definition string failExplaination string formatB(string) public static string formatB(string str) Parameters str string Returns string formatBC(string, string) public static string formatBC(string str, string color) Parameters str string color string Returns string formatC(string, string) public static string formatC(string str, string color) Parameters str string color string Returns string overview() public static void overview() padRight(int) public static string padRight(int len) Parameters len int Returns string printOutLength(string) public static float printOutLength(string str) Parameters str string Returns float"
  },
  "api/Global.LeanTester.html": {
    "href": "api/Global.LeanTester.html",
    "title": "Class LeanTester | |",
    "keywords": "Class LeanTester Namespace Global public class LeanTester : MonoBehaviour Inheritance object LeanTester Fields timeout public float timeout Field Value float Methods Start() public void Start()"
  },
  "api/Global.LeanTween.html": {
    "href": "api/Global.LeanTween.html",
    "title": "Class LeanTween | |",
    "keywords": "Class LeanTween Namespace Global public class LeanTween : MonoBehaviour Inheritance object LeanTween Fields EVENTS_MAX public static int EVENTS_MAX Field Value int LISTENERS_MAX public static int LISTENERS_MAX Field Value int PI_DIV2 public static float PI_DIV2 Field Value float d public static LTDescr d Field Value LTDescr dtActual public static float dtActual Field Value float dtEstimated public static float dtEstimated Field Value float dtManual public static float dtManual Field Value float punch public static AnimationCurve punch Field Value AnimationCurve shake public static AnimationCurve shake Field Value AnimationCurve startSearch public static int startSearch Field Value int tau public static float tau Field Value float throwErrors public static bool throwErrors Field Value bool Properties maxSearch public static int maxSearch { get; } Property Value int maxSimulataneousTweens public static int maxSimulataneousTweens { get; } Property Value int tweenEmpty public static GameObject tweenEmpty { get; } Property Value GameObject tweensRunning Find out how many tweens you have animating at a given time public static int tweensRunning { get; } Property Value int Methods OnLevelWasLoaded(int) public void OnLevelWasLoaded(int lvl) Parameters lvl int Update() public void Update() add(Vector3[], Vector3) public static Vector3[] add(Vector3[] a, Vector3 b) Parameters a Vector3[] b Vector3 Returns Vector3[] addListener(GameObject, int, Action<LTEvent>) public static void addListener(GameObject caller, int eventId, Action<LTEvent> callback) Parameters caller GameObject eventId int callback Action<LTEvent> addListener(int, Action<LTEvent>) public static void addListener(int eventId, Action<LTEvent> callback) Parameters eventId int callback Action<LTEvent> alpha(GameObject, float, float) Fade a gameobject's material to a certain alpha value. public static LTDescr alpha(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr alpha(LTRect, float, float) Fade a GUI Object public static LTDescr alpha(LTRect ltRect, float to, float time) Parameters ltRect LTRect to float time float Returns LTDescr alpha(RectTransform, float, float) Alpha an Image Component attached to a RectTransform (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr alpha(RectTransform rectTrans, float to, float time) Parameters rectTrans RectTransform to float time float Returns LTDescr alphaCanvas(CanvasGroup, float, float) Fade a Unity UI Canvas Group public static LTDescr alphaCanvas(CanvasGroup canvasGroup, float to, float time) Parameters canvasGroup CanvasGroup to float time float Returns LTDescr alphaText(RectTransform, float, float) public static LTDescr alphaText(RectTransform rectTransform, float to, float time) Parameters rectTransform RectTransform to float time float Returns LTDescr alphaVertex(GameObject, float, float) This works by tweening the vertex colors directly public static LTDescr alphaVertex(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr cancel(GameObject) Cancel all tweens that are currently targeting the gameObject public static void cancel(GameObject gameObject) Parameters gameObject GameObject cancel(GameObject, bool, TweenAction) public static void cancel(GameObject gameObject, bool callOnComplete, TweenAction matchType = TweenAction.NONE) Parameters gameObject GameObject callOnComplete bool matchType TweenAction cancel(GameObject, int, bool) public static void cancel(GameObject gameObject, int uniqueId, bool callOnComplete = false) Parameters gameObject GameObject uniqueId int callOnComplete bool cancel(LTRect, int) public static void cancel(LTRect ltRect, int uniqueId) Parameters ltRect LTRect uniqueId int cancel(RectTransform) public static void cancel(RectTransform rect) Parameters rect RectTransform cancel(int) Cancel a specific tween with the provided id public static void cancel(int uniqueId) Parameters uniqueId int cancel(int, bool) public static void cancel(int uniqueId, bool callOnComplete) Parameters uniqueId int callOnComplete bool cancelAll() Cancels all tweens public static void cancelAll() cancelAll(bool) public static void cancelAll(bool callComplete) Parameters callComplete bool clerp(float, float, float) public static float clerp(float start, float end, float val) Parameters start float end float val float Returns float closestRot(float, float) public static float closestRot(float from, float to) Parameters from float to float Returns float color(GameObject, Color, float) Change a gameobject's material to a certain color value public static LTDescr color(GameObject gameObject, Color to, float time) Parameters gameObject GameObject to Color time float Returns LTDescr color(RectTransform, Color, float) Change the Color of an Image Component attached to a RectTransform (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr color(RectTransform rectTrans, Color to, float time) Parameters rectTrans RectTransform to Color time float Returns LTDescr colorText(RectTransform, Color, float) public static LTDescr colorText(RectTransform rectTransform, Color to, float time) Parameters rectTransform RectTransform to Color time float Returns LTDescr delayedCall(GameObject, float, Action) public static LTDescr delayedCall(GameObject gameObject, float delayTime, Action callback) Parameters gameObject GameObject delayTime float callback Action Returns LTDescr delayedCall(GameObject, float, Action<object>) public static LTDescr delayedCall(GameObject gameObject, float delayTime, Action<object> callback) Parameters gameObject GameObject delayTime float callback Action<object> Returns LTDescr delayedCall(float, Action) Call a method after a specified amount of time public static LTDescr delayedCall(float delayTime, Action callback) Parameters delayTime float callback Action Returns LTDescr delayedCall(float, Action<object>) public static LTDescr delayedCall(float delayTime, Action<object> callback) Parameters delayTime float callback Action<object> Returns LTDescr delayedSound(AudioClip, Vector3, float) public static LTDescr delayedSound(AudioClip audio, Vector3 pos, float volume) Parameters audio AudioClip pos Vector3 volume float Returns LTDescr delayedSound(GameObject, AudioClip, Vector3, float) public static LTDescr delayedSound(GameObject gameObject, AudioClip audio, Vector3 pos, float volume) Parameters gameObject GameObject audio AudioClip pos Vector3 volume float Returns LTDescr descr(int) Retrieve a tweens LTDescr object to modify public static LTDescr descr(int uniqueId) Parameters uniqueId int Returns LTDescr description(int) public static LTDescr description(int uniqueId) Parameters uniqueId int Returns LTDescr descriptions(GameObject) Retrieve a tweens LTDescr object(s) to modify public static LTDescr[] descriptions(GameObject gameObject = null) Parameters gameObject GameObject Returns LTDescr[] destroyAfter(LTRect, float) public static LTDescr destroyAfter(LTRect rect, float delayTime) Parameters rect LTRect delayTime float Returns LTDescr dispatchEvent(int) public static void dispatchEvent(int eventId) Parameters eventId int dispatchEvent(int, object) public static void dispatchEvent(int eventId, object data) Parameters eventId int data object drawBezierPath(Vector3, Vector3, Vector3, Vector3, float, Transform) public static void drawBezierPath(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float arrowSize = 0, Transform arrowTransform = null) Parameters a Vector3 b Vector3 c Vector3 d Vector3 arrowSize float arrowTransform Transform easeInBack(float, float, float, float) public static float easeInBack(float start, float end, float val, float overshoot = 1) Parameters start float end float val float overshoot float Returns float easeInBounce(float, float, float) public static float easeInBounce(float start, float end, float val) Parameters start float end float val float Returns float easeInCirc(float, float, float) public static float easeInCirc(float start, float end, float val) Parameters start float end float val float Returns float easeInCubic(float, float, float) public static float easeInCubic(float start, float end, float val) Parameters start float end float val float Returns float easeInElastic(float, float, float, float, float) public static float easeInElastic(float start, float end, float val, float overshoot = 1, float period = 0.3) Parameters start float end float val float overshoot float period float Returns float easeInExpo(float, float, float) public static float easeInExpo(float start, float end, float val) Parameters start float end float val float Returns float easeInOutBack(float, float, float, float) public static float easeInOutBack(float start, float end, float val, float overshoot = 1) Parameters start float end float val float overshoot float Returns float easeInOutBounce(float, float, float) public static float easeInOutBounce(float start, float end, float val) Parameters start float end float val float Returns float easeInOutCirc(float, float, float) public static float easeInOutCirc(float start, float end, float val) Parameters start float end float val float Returns float easeInOutCubic(float, float, float) public static float easeInOutCubic(float start, float end, float val) Parameters start float end float val float Returns float easeInOutElastic(float, float, float, float, float) public static float easeInOutElastic(float start, float end, float val, float overshoot = 1, float period = 0.3) Parameters start float end float val float overshoot float period float Returns float easeInOutExpo(float, float, float) public static float easeInOutExpo(float start, float end, float val) Parameters start float end float val float Returns float easeInOutQuad(float, float, float) public static float easeInOutQuad(float start, float end, float val) Parameters start float end float val float Returns float easeInOutQuadOpt(float, float, float) public static float easeInOutQuadOpt(float start, float diff, float ratioPassed) Parameters start float diff float ratioPassed float Returns float easeInOutQuadOpt(Vector3, Vector3, float) public static Vector3 easeInOutQuadOpt(Vector3 start, Vector3 diff, float ratioPassed) Parameters start Vector3 diff Vector3 ratioPassed float Returns Vector3 easeInOutQuadOpt2(float, float, float, float) public static float easeInOutQuadOpt2(float start, float diffBy2, float val, float val2) Parameters start float diffBy2 float val float val2 float Returns float easeInOutQuart(float, float, float) public static float easeInOutQuart(float start, float end, float val) Parameters start float end float val float Returns float easeInOutQuint(float, float, float) public static float easeInOutQuint(float start, float end, float val) Parameters start float end float val float Returns float easeInOutSine(float, float, float) public static float easeInOutSine(float start, float end, float val) Parameters start float end float val float Returns float easeInQuad(float, float, float) public static float easeInQuad(float start, float end, float val) Parameters start float end float val float Returns float easeInQuadOpt(float, float, float) public static float easeInQuadOpt(float start, float diff, float ratioPassed) Parameters start float diff float ratioPassed float Returns float easeInQuart(float, float, float) public static float easeInQuart(float start, float end, float val) Parameters start float end float val float Returns float easeInQuint(float, float, float) public static float easeInQuint(float start, float end, float val) Parameters start float end float val float Returns float easeInSine(float, float, float) public static float easeInSine(float start, float end, float val) Parameters start float end float val float Returns float easeOutBack(float, float, float, float) public static float easeOutBack(float start, float end, float val, float overshoot = 1) Parameters start float end float val float overshoot float Returns float easeOutBounce(float, float, float) public static float easeOutBounce(float start, float end, float val) Parameters start float end float val float Returns float easeOutCirc(float, float, float) public static float easeOutCirc(float start, float end, float val) Parameters start float end float val float Returns float easeOutCubic(float, float, float) public static float easeOutCubic(float start, float end, float val) Parameters start float end float val float Returns float easeOutElastic(float, float, float, float, float) public static float easeOutElastic(float start, float end, float val, float overshoot = 1, float period = 0.3) Parameters start float end float val float overshoot float period float Returns float easeOutExpo(float, float, float) public static float easeOutExpo(float start, float end, float val) Parameters start float end float val float Returns float easeOutQuad(float, float, float) public static float easeOutQuad(float start, float end, float val) Parameters start float end float val float Returns float easeOutQuadOpt(float, float, float) public static float easeOutQuadOpt(float start, float diff, float ratioPassed) Parameters start float diff float ratioPassed float Returns float easeOutQuart(float, float, float) public static float easeOutQuart(float start, float end, float val) Parameters start float end float val float Returns float easeOutQuint(float, float, float) public static float easeOutQuint(float start, float end, float val) Parameters start float end float val float Returns float easeOutSine(float, float, float) public static float easeOutSine(float start, float end, float val) Parameters start float end float val float Returns float followBounceOut(Transform, Transform, LeanProp, float, float, float, float, float) Follow another transforms position/scale/color (with an ease that bounces back some when it reaches it's destination) public static LTDescr followBounceOut(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1, float friction = 2, float accelRate = 0.5, float hitDamping = 0.9) Parameters trans Transform target Transform prop LeanProp smoothTime float maxSpeed float friction float accelRate float hitDamping float Returns LTDescr followDamp(Transform, Transform, LeanProp, float, float) Follow another transforms position/scale/color with a damp transition (eases in and out to destination with no overshoot) public static LTDescr followDamp(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1) Parameters trans Transform target Transform prop LeanProp smoothTime float maxSpeed float Returns LTDescr followLinear(Transform, Transform, LeanProp, float) Follow another transforms position/scale/color with a constant speed public static LTDescr followLinear(Transform trans, Transform target, LeanProp prop, float moveSpeed) Parameters trans Transform target Transform prop LeanProp moveSpeed float Returns LTDescr followSpring(Transform, Transform, LeanProp, float, float, float, float) Follow another transforms position/scale/color with a springy transition (eases in and out to destination with possible overshoot bounciness) public static LTDescr followSpring(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1, float friction = 2, float accelRate = 0.5) Parameters trans Transform target Transform prop LeanProp smoothTime float maxSpeed float friction float accelRate float Returns LTDescr init() public static void init() init(int) This line is optional. Here you can specify the maximum number of tweens you will use (the default is 400). This must be called before any use of LeanTween is made for it to be effective. public static void init(int maxSimultaneousTweens) Parameters maxSimultaneousTweens int init(int, int) public static void init(int maxSimultaneousTweens, int maxSimultaneousSequences) Parameters maxSimultaneousTweens int maxSimultaneousSequences int isPaused(GameObject) Test whether or not a tween is paused on a GameObject public static bool isPaused(GameObject gameObject = null) Parameters gameObject GameObject Returns bool isPaused(RectTransform) public static bool isPaused(RectTransform rect) Parameters rect RectTransform Returns bool isPaused(int) Test whether or not a tween is paused or not public static bool isPaused(int uniqueId) Parameters uniqueId int Returns bool isTweening(GameObject) Test whether or not a tween is active on a GameObject public static bool isTweening(GameObject gameObject = null) Parameters gameObject GameObject Returns bool isTweening(LTRect) public static bool isTweening(LTRect ltRect) Parameters ltRect LTRect Returns bool isTweening(RectTransform) public static bool isTweening(RectTransform rect) Parameters rect RectTransform Returns bool isTweening(int) Test whether or not a tween is active or not public static bool isTweening(int uniqueId) Parameters uniqueId int Returns bool linear(float, float, float) public static float linear(float start, float end, float val) Parameters start float end float val float Returns float logError(string) public static object logError(string error) Parameters error string Returns object move(GameObject, LTBezierPath, float) public static LTDescr move(GameObject gameObject, LTBezierPath to, float time) Parameters gameObject GameObject to LTBezierPath time float Returns LTDescr move(GameObject, LTSpline, float) public static LTDescr move(GameObject gameObject, LTSpline to, float time) Parameters gameObject GameObject to LTSpline time float Returns LTDescr move(GameObject, Transform, float) Move a GameObject to another transform public static LTDescr move(GameObject gameObject, Transform to, float time) Parameters gameObject GameObject to Transform time float Returns LTDescr move(GameObject, Vector2, float) public static LTDescr move(GameObject gameObject, Vector2 to, float time) Parameters gameObject GameObject to Vector2 time float Returns LTDescr move(GameObject, Vector3, float) Move a GameObject to a certain location public static LTDescr move(GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr move(GameObject, Vector3[], float) Move a GameObject along a set of bezier curves public static LTDescr move(GameObject gameObject, Vector3[] to, float time) Parameters gameObject GameObject to Vector3[] time float Returns LTDescr move(LTRect, Vector2, float) Move a GUI Element to a certain location public static LTDescr move(LTRect ltRect, Vector2 to, float time) Parameters ltRect LTRect to Vector2 time float Returns LTDescr move(RectTransform, Vector3, float) Move a RectTransform object (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr move(RectTransform rectTrans, Vector3 to, float time) Parameters rectTrans RectTransform to Vector3 time float Returns LTDescr moveLocal(GameObject, LTBezierPath, float) public static LTDescr moveLocal(GameObject gameObject, LTBezierPath to, float time) Parameters gameObject GameObject to LTBezierPath time float Returns LTDescr moveLocal(GameObject, LTSpline, float) public static LTDescr moveLocal(GameObject gameObject, LTSpline to, float time) Parameters gameObject GameObject to LTSpline time float Returns LTDescr moveLocal(GameObject, Vector3, float) Move a GameObject to a certain location relative to the parent transform. public static LTDescr moveLocal(GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr moveLocal(GameObject, Vector3[], float) Move a GameObject along a set of bezier curves, in local space public static LTDescr moveLocal(GameObject gameObject, Vector3[] to, float time) Parameters gameObject GameObject to Vector3[] time float Returns LTDescr moveLocalX(GameObject, float, float) public static LTDescr moveLocalX(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr moveLocalY(GameObject, float, float) public static LTDescr moveLocalY(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr moveLocalZ(GameObject, float, float) public static LTDescr moveLocalZ(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr moveMargin(LTRect, Vector2, float) public static LTDescr moveMargin(LTRect ltRect, Vector2 to, float time) Parameters ltRect LTRect to Vector2 time float Returns LTDescr moveSpline(GameObject, LTSpline, float) Move a GameObject through a set of points public static LTDescr moveSpline(GameObject gameObject, LTSpline to, float time) Parameters gameObject GameObject to LTSpline time float Returns LTDescr moveSpline(GameObject, Vector3[], float) Move a GameObject through a set of points public static LTDescr moveSpline(GameObject gameObject, Vector3[] to, float time) Parameters gameObject GameObject to Vector3[] time float Returns LTDescr moveSplineLocal(GameObject, Vector3[], float) Move a GameObject through a set of points, in local space public static LTDescr moveSplineLocal(GameObject gameObject, Vector3[] to, float time) Parameters gameObject GameObject to Vector3[] time float Returns LTDescr moveX(GameObject, float, float) Move a GameObject along the x-axis public static LTDescr moveX(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr moveX(RectTransform, float, float) Move a RectTransform object affecting x-axis only (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr moveX(RectTransform rectTrans, float to, float time) Parameters rectTrans RectTransform to float time float Returns LTDescr moveY(GameObject, float, float) Move a GameObject along the y-axis public static LTDescr moveY(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr moveY(RectTransform, float, float) Move a RectTransform object affecting y-axis only (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr moveY(RectTransform rectTrans, float to, float time) Parameters rectTrans RectTransform to float time float Returns LTDescr moveZ(GameObject, float, float) Move a GameObject along the z-axis public static LTDescr moveZ(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr moveZ(RectTransform, float, float) Move a RectTransform object affecting z-axis only (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...)n public static LTDescr moveZ(RectTransform rectTrans, float to, float time) Parameters rectTrans RectTransform to float time float Returns LTDescr options() public static LTDescr options() Returns LTDescr options(LTDescr) public static LTDescr options(LTDescr seed) Parameters seed LTDescr Returns LTDescr pause(GameObject) Pause all tweens for a GameObject public static void pause(GameObject gameObject) Parameters gameObject GameObject pause(GameObject, int) [Obsolete(\"Use 'pause( id )' instead\")] public static void pause(GameObject gameObject, int uniqueId) Parameters gameObject GameObject uniqueId int pause(int) Pause all tweens for a GameObject public static void pause(int uniqueId) Parameters uniqueId int pauseAll() Pause all active tweens public static void pauseAll() play(RectTransform, Sprite[]) Play a sequence of images on a Unity UI Object public static LTDescr play(RectTransform rectTransform, UnityEngine.Sprite[] sprites) Parameters rectTransform RectTransform sprites Sprite[] Returns LTDescr removeListener(GameObject, int, Action<LTEvent>) public static bool removeListener(GameObject caller, int eventId, Action<LTEvent> callback) Parameters caller GameObject eventId int callback Action<LTEvent> Returns bool removeListener(int) public static bool removeListener(int eventId) Parameters eventId int Returns bool removeListener(int, Action<LTEvent>) public static bool removeListener(int eventId, Action<LTEvent> callback) Parameters eventId int callback Action<LTEvent> Returns bool removeTween(int, bool) public static void removeTween(int i, bool shouldReset = true) Parameters i int shouldReset bool removeTween(int, int) public static void removeTween(int i, int uniqueId) Parameters i int uniqueId int reset() public static void reset() resume(GameObject) Resume all the tweens on a GameObject public static void resume(GameObject gameObject) Parameters gameObject GameObject resume(GameObject, int) [Obsolete(\"Use 'resume( id )' instead\")] public static void resume(GameObject gameObject, int uniqueId) Parameters gameObject GameObject uniqueId int resume(int) Resume a specific tween public static void resume(int uniqueId) Parameters uniqueId int resumeAll() Resume all active tweens public static void resumeAll() rotate(GameObject, Vector3, float) Rotate a GameObject, to values are in passed in degrees public static LTDescr rotate(GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr rotate(LTRect, float, float) Rotate a GUI element (using an LTRect object), to a value that is in degrees public static LTDescr rotate(LTRect ltRect, float to, float time) Parameters ltRect LTRect to float time float Returns LTDescr rotate(RectTransform, float, float) Rotate a RectTransform object (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr rotate(RectTransform rectTrans, float to, float time) Parameters rectTrans RectTransform to float time float Returns LTDescr rotate(RectTransform, Vector3, float) public static LTDescr rotate(RectTransform rectTrans, Vector3 to, float time) Parameters rectTrans RectTransform to Vector3 time float Returns LTDescr rotateAround(GameObject, Vector3, float, float) Rotate a GameObject around a certain Axis (the best method to use when you want to rotate beyond 180 degrees) public static LTDescr rotateAround(GameObject gameObject, Vector3 axis, float add, float time) Parameters gameObject GameObject axis Vector3 add float time float Returns LTDescr rotateAround(RectTransform, Vector3, float, float) Rotate a RectTransform object (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr rotateAround(RectTransform rectTrans, Vector3 axis, float to, float time) Parameters rectTrans RectTransform axis Vector3 to float time float Returns LTDescr rotateAroundLocal(GameObject, Vector3, float, float) Rotate a GameObject around a certain Axis in Local Space (the best method to use when you want to rotate beyond 180 degrees) public static LTDescr rotateAroundLocal(GameObject gameObject, Vector3 axis, float add, float time) Parameters gameObject GameObject axis Vector3 add float time float Returns LTDescr rotateAroundLocal(RectTransform, Vector3, float, float) Rotate a RectTransform object around it's local axis (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr rotateAroundLocal(RectTransform rectTrans, Vector3 axis, float to, float time) Parameters rectTrans RectTransform axis Vector3 to float time float Returns LTDescr rotateLocal(GameObject, Vector3, float) Rotate a GameObject in the objects local space (on the transforms localEulerAngles object) public static LTDescr rotateLocal(GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr rotateX(GameObject, float, float) Rotate a GameObject only on the X axis public static LTDescr rotateX(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr rotateY(GameObject, float, float) Rotate a GameObject only on the Y axis public static LTDescr rotateY(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr rotateZ(GameObject, float, float) Rotate a GameObject only on the Z axis public static LTDescr rotateZ(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr scale(GameObject, Vector3, float) Scale a GameObject to a certain size public static LTDescr scale(GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr scale(LTRect, Vector2, float) Scale a GUI Element to a certain width and height public static LTDescr scale(LTRect ltRect, Vector2 to, float time) Parameters ltRect LTRect to Vector2 time float Returns LTDescr scale(RectTransform, Vector3, float) Scale a RectTransform object (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr scale(RectTransform rectTrans, Vector3 to, float time) Parameters rectTrans RectTransform to Vector3 time float Returns LTDescr scaleX(GameObject, float, float) Scale a GameObject to a certain size along the x-axis only public static LTDescr scaleX(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr scaleY(GameObject, float, float) Scale a GameObject to a certain size along the y-axis only public static LTDescr scaleY(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr scaleZ(GameObject, float, float) Scale a GameObject to a certain size along the z-axis only public static LTDescr scaleZ(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr sequence(bool) Retrieve a sequencer object where you can easily chain together tweens and methods one after another public static LTSeq sequence(bool initSequence = true) Parameters initSequence bool Returns LTSeq size(RectTransform, Vector2, float) Change the sizeDelta of a RectTransform object (used in Unity Canvas, for Buttons, Panel, Scrollbar, etc...) public static LTDescr size(RectTransform rectTrans, Vector2 to, float time) Parameters rectTrans RectTransform to Vector2 time float Returns LTDescr spring(float, float, float) public static float spring(float start, float end, float val) Parameters start float end float val float Returns float textAlpha(RectTransform, float, float) Fade a Unity UI Object public static LTDescr textAlpha(RectTransform rectTransform, float to, float time) Parameters rectTransform RectTransform to float time float Returns LTDescr textColor(RectTransform, Color, float) Change the color a Unity UI Object public static LTDescr textColor(RectTransform rectTransform, Color to, float time) Parameters rectTransform RectTransform to Color time float Returns LTDescr tweenOnCurve(LTDescr, float) public static float tweenOnCurve(LTDescr tweenDescr, float ratioPassed) Parameters tweenDescr LTDescr ratioPassed float Returns float tweenOnCurveVector(LTDescr, float) public static Vector3 tweenOnCurveVector(LTDescr tweenDescr, float ratioPassed) Parameters tweenDescr LTDescr ratioPassed float Returns Vector3 update() public static void update() value(GameObject, Color, Color, float) public static LTDescr value(GameObject gameObject, Color from, Color to, float time) Parameters gameObject GameObject from Color to Color time float Returns LTDescr value(GameObject, Action<Color, object>, Color, Color, float) public static LTDescr value(GameObject gameObject, Action<Color, object> callOnUpdate, Color from, Color to, float time) Parameters gameObject GameObject callOnUpdate Action<Color, object> from Color to Color time float Returns LTDescr value(GameObject, Action<Color>, Color, Color, float) public static LTDescr value(GameObject gameObject, Action<Color> callOnUpdate, Color from, Color to, float time) Parameters gameObject GameObject callOnUpdate Action<Color> from Color to Color time float Returns LTDescr value(GameObject, Action<float, object>, float, float, float) public static LTDescr value(GameObject gameObject, Action<float, object> callOnUpdate, float from, float to, float time) Parameters gameObject GameObject callOnUpdate Action<float, object> from float to float time float Returns LTDescr value(GameObject, Action<float, float>, float, float, float) public static LTDescr value(GameObject gameObject, Action<float, float> callOnUpdateRatio, float from, float to, float time) Parameters gameObject GameObject callOnUpdateRatio Action<float, float> from float to float time float Returns LTDescr value(GameObject, Action<float>, float, float, float) public static LTDescr value(GameObject gameObject, Action<float> callOnUpdate, float from, float to, float time) Parameters gameObject GameObject callOnUpdate Action<float> from float to float time float Returns LTDescr value(GameObject, Action<Vector2>, Vector2, Vector2, float) public static LTDescr value(GameObject gameObject, Action<Vector2> callOnUpdate, Vector2 from, Vector2 to, float time) Parameters gameObject GameObject callOnUpdate Action<Vector2> from Vector2 to Vector2 time float Returns LTDescr value(GameObject, Action<Vector3>, Vector3, Vector3, float) public static LTDescr value(GameObject gameObject, Action<Vector3> callOnUpdate, Vector3 from, Vector3 to, float time) Parameters gameObject GameObject callOnUpdate Action<Vector3> from Vector3 to Vector3 time float Returns LTDescr value(GameObject, float, float, float) Tween any particular value (float) public static LTDescr value(GameObject gameObject, float from, float to, float time) Parameters gameObject GameObject from float to float time float Returns LTDescr value(GameObject, Vector2, Vector2, float) Tween any particular value (Vector2) public static LTDescr value(GameObject gameObject, Vector2 from, Vector2 to, float time) Parameters gameObject GameObject from Vector2 to Vector2 time float Returns LTDescr value(GameObject, Vector3, Vector3, float) Tween any particular value (Vector3) public static LTDescr value(GameObject gameObject, Vector3 from, Vector3 to, float time) Parameters gameObject GameObject from Vector3 to Vector3 time float Returns LTDescr value(float, float, float) public static LTDescr value(float from, float to, float time) Parameters from float to float time float Returns LTDescr"
  },
  "api/Global.LeanTweenExt.html": {
    "href": "api/Global.LeanTweenExt.html",
    "title": "Class LeanTweenExt | |",
    "keywords": "Class LeanTweenExt Namespace Global public static class LeanTweenExt Inheritance object LeanTweenExt Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods LeanAlpha(CanvasGroup, float, float) public static LTDescr LeanAlpha(this CanvasGroup canvas, float to, float time) Parameters canvas CanvasGroup to float time float Returns LTDescr LeanAlpha(GameObject, float, float) public static LTDescr LeanAlpha(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanAlpha(RectTransform, float, float) public static LTDescr LeanAlpha(this RectTransform rectTransform, float to, float time) Parameters rectTransform RectTransform to float time float Returns LTDescr LeanAlphaText(RectTransform, float, float) public static LTDescr LeanAlphaText(this RectTransform rectTransform, float to, float time) Parameters rectTransform RectTransform to float time float Returns LTDescr LeanAlphaVertex(GameObject, float, float) public static LTDescr LeanAlphaVertex(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanCancel(GameObject) public static void LeanCancel(this GameObject gameObject) Parameters gameObject GameObject LeanCancel(GameObject, bool) public static void LeanCancel(this GameObject gameObject, bool callOnComplete) Parameters gameObject GameObject callOnComplete bool LeanCancel(GameObject, int, bool) public static void LeanCancel(this GameObject gameObject, int uniqueId, bool callOnComplete = false) Parameters gameObject GameObject uniqueId int callOnComplete bool LeanCancel(RectTransform) public static void LeanCancel(this RectTransform rectTransform) Parameters rectTransform RectTransform LeanColor(GameObject, Color, float) public static LTDescr LeanColor(this GameObject gameObject, Color to, float time) Parameters gameObject GameObject to Color time float Returns LTDescr LeanColor(Transform) public static Color LeanColor(this Transform transform) Parameters transform Transform Returns Color LeanColorText(RectTransform, Color, float) public static LTDescr LeanColorText(this RectTransform rectTransform, Color to, float time) Parameters rectTransform RectTransform to Color time float Returns LTDescr LeanDelayedCall(GameObject, float, Action) public static LTDescr LeanDelayedCall(this GameObject gameObject, float delayTime, Action callback) Parameters gameObject GameObject delayTime float callback Action Returns LTDescr LeanDelayedCall(GameObject, float, Action<object>) public static LTDescr LeanDelayedCall(this GameObject gameObject, float delayTime, Action<object> callback) Parameters gameObject GameObject delayTime float callback Action<object> Returns LTDescr LeanIsPaused(GameObject) public static bool LeanIsPaused(this GameObject gameObject) Parameters gameObject GameObject Returns bool LeanIsPaused(RectTransform) public static bool LeanIsPaused(this RectTransform rectTransform) Parameters rectTransform RectTransform Returns bool LeanIsTweening(GameObject) public static bool LeanIsTweening(this GameObject gameObject) Parameters gameObject GameObject Returns bool LeanMove(GameObject, LTBezierPath, float) public static LTDescr LeanMove(this GameObject gameObject, LTBezierPath to, float time) Parameters gameObject GameObject to LTBezierPath time float Returns LTDescr LeanMove(GameObject, LTSpline, float) public static LTDescr LeanMove(this GameObject gameObject, LTSpline to, float time) Parameters gameObject GameObject to LTSpline time float Returns LTDescr LeanMove(GameObject, Vector2, float) public static LTDescr LeanMove(this GameObject gameObject, Vector2 to, float time) Parameters gameObject GameObject to Vector2 time float Returns LTDescr LeanMove(GameObject, Vector3, float) public static LTDescr LeanMove(this GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr LeanMove(GameObject, Vector3[], float) public static LTDescr LeanMove(this GameObject gameObject, Vector3[] to, float time) Parameters gameObject GameObject to Vector3[] time float Returns LTDescr LeanMove(RectTransform, Vector3, float) public static LTDescr LeanMove(this RectTransform rectTransform, Vector3 to, float time) Parameters rectTransform RectTransform to Vector3 time float Returns LTDescr LeanMove(Transform, LTBezierPath, float) public static LTDescr LeanMove(this Transform transform, LTBezierPath to, float time) Parameters transform Transform to LTBezierPath time float Returns LTDescr LeanMove(Transform, LTSpline, float) public static LTDescr LeanMove(this Transform transform, LTSpline to, float time) Parameters transform Transform to LTSpline time float Returns LTDescr LeanMove(Transform, Vector2, float) public static LTDescr LeanMove(this Transform transform, Vector2 to, float time) Parameters transform Transform to Vector2 time float Returns LTDescr LeanMove(Transform, Vector3, float) public static LTDescr LeanMove(this Transform transform, Vector3 to, float time) Parameters transform Transform to Vector3 time float Returns LTDescr LeanMove(Transform, Vector3[], float) public static LTDescr LeanMove(this Transform transform, Vector3[] to, float time) Parameters transform Transform to Vector3[] time float Returns LTDescr LeanMoveLocal(GameObject, LTBezierPath, float) public static LTDescr LeanMoveLocal(this GameObject gameObject, LTBezierPath to, float time) Parameters gameObject GameObject to LTBezierPath time float Returns LTDescr LeanMoveLocal(GameObject, LTSpline, float) public static LTDescr LeanMoveLocal(this GameObject gameObject, LTSpline to, float time) Parameters gameObject GameObject to LTSpline time float Returns LTDescr LeanMoveLocal(GameObject, Vector3, float) public static LTDescr LeanMoveLocal(this GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr LeanMoveLocal(Transform, LTBezierPath, float) public static LTDescr LeanMoveLocal(this Transform transform, LTBezierPath to, float time) Parameters transform Transform to LTBezierPath time float Returns LTDescr LeanMoveLocal(Transform, LTSpline, float) public static LTDescr LeanMoveLocal(this Transform transform, LTSpline to, float time) Parameters transform Transform to LTSpline time float Returns LTDescr LeanMoveLocal(Transform, Vector3, float) public static LTDescr LeanMoveLocal(this Transform transform, Vector3 to, float time) Parameters transform Transform to Vector3 time float Returns LTDescr LeanMoveLocalX(GameObject, float, float) public static LTDescr LeanMoveLocalX(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanMoveLocalX(Transform, float, float) public static LTDescr LeanMoveLocalX(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanMoveLocalY(GameObject, float, float) public static LTDescr LeanMoveLocalY(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanMoveLocalY(Transform, float, float) public static LTDescr LeanMoveLocalY(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanMoveLocalZ(GameObject, float, float) public static LTDescr LeanMoveLocalZ(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanMoveLocalZ(Transform, float, float) public static LTDescr LeanMoveLocalZ(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanMoveSpline(GameObject, LTSpline, float) public static LTDescr LeanMoveSpline(this GameObject gameObject, LTSpline to, float time) Parameters gameObject GameObject to LTSpline time float Returns LTDescr LeanMoveSpline(GameObject, Vector3[], float) public static LTDescr LeanMoveSpline(this GameObject gameObject, Vector3[] to, float time) Parameters gameObject GameObject to Vector3[] time float Returns LTDescr LeanMoveSpline(Transform, LTSpline, float) public static LTDescr LeanMoveSpline(this Transform transform, LTSpline to, float time) Parameters transform Transform to LTSpline time float Returns LTDescr LeanMoveSpline(Transform, Vector3[], float) public static LTDescr LeanMoveSpline(this Transform transform, Vector3[] to, float time) Parameters transform Transform to Vector3[] time float Returns LTDescr LeanMoveSplineLocal(GameObject, Vector3[], float) public static LTDescr LeanMoveSplineLocal(this GameObject gameObject, Vector3[] to, float time) Parameters gameObject GameObject to Vector3[] time float Returns LTDescr LeanMoveSplineLocal(Transform, Vector3[], float) public static LTDescr LeanMoveSplineLocal(this Transform transform, Vector3[] to, float time) Parameters transform Transform to Vector3[] time float Returns LTDescr LeanMoveX(GameObject, float, float) public static LTDescr LeanMoveX(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanMoveX(RectTransform, float, float) public static LTDescr LeanMoveX(this RectTransform rectTransform, float to, float time) Parameters rectTransform RectTransform to float time float Returns LTDescr LeanMoveX(Transform, float, float) public static LTDescr LeanMoveX(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanMoveY(GameObject, float, float) public static LTDescr LeanMoveY(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanMoveY(RectTransform, float, float) public static LTDescr LeanMoveY(this RectTransform rectTransform, float to, float time) Parameters rectTransform RectTransform to float time float Returns LTDescr LeanMoveY(Transform, float, float) public static LTDescr LeanMoveY(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanMoveZ(GameObject, float, float) public static LTDescr LeanMoveZ(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanMoveZ(RectTransform, float, float) public static LTDescr LeanMoveZ(this RectTransform rectTransform, float to, float time) Parameters rectTransform RectTransform to float time float Returns LTDescr LeanMoveZ(Transform, float, float) public static LTDescr LeanMoveZ(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanPause(GameObject) public static void LeanPause(this GameObject gameObject) Parameters gameObject GameObject LeanPlay(RectTransform, Sprite[]) public static LTDescr LeanPlay(this RectTransform rectTransform, UnityEngine.Sprite[] sprites) Parameters rectTransform RectTransform sprites Sprite[] Returns LTDescr LeanResume(GameObject) public static void LeanResume(this GameObject gameObject) Parameters gameObject GameObject LeanRotate(GameObject, Vector3, float) public static LTDescr LeanRotate(this GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr LeanRotate(RectTransform, Vector3, float) public static LTDescr LeanRotate(this RectTransform rectTransform, Vector3 to, float time) Parameters rectTransform RectTransform to Vector3 time float Returns LTDescr LeanRotate(Transform, Vector3, float) public static LTDescr LeanRotate(this Transform transform, Vector3 to, float time) Parameters transform Transform to Vector3 time float Returns LTDescr LeanRotateAround(GameObject, Vector3, float, float) public static LTDescr LeanRotateAround(this GameObject gameObject, Vector3 axis, float add, float time) Parameters gameObject GameObject axis Vector3 add float time float Returns LTDescr LeanRotateAround(RectTransform, Vector3, float, float) public static LTDescr LeanRotateAround(this RectTransform rectTransform, Vector3 axis, float add, float time) Parameters rectTransform RectTransform axis Vector3 add float time float Returns LTDescr LeanRotateAround(Transform, Vector3, float, float) public static LTDescr LeanRotateAround(this Transform transform, Vector3 axis, float add, float time) Parameters transform Transform axis Vector3 add float time float Returns LTDescr LeanRotateAroundLocal(GameObject, Vector3, float, float) public static LTDescr LeanRotateAroundLocal(this GameObject gameObject, Vector3 axis, float add, float time) Parameters gameObject GameObject axis Vector3 add float time float Returns LTDescr LeanRotateAroundLocal(RectTransform, Vector3, float, float) public static LTDescr LeanRotateAroundLocal(this RectTransform rectTransform, Vector3 axis, float add, float time) Parameters rectTransform RectTransform axis Vector3 add float time float Returns LTDescr LeanRotateAroundLocal(Transform, Vector3, float, float) public static LTDescr LeanRotateAroundLocal(this Transform transform, Vector3 axis, float add, float time) Parameters transform Transform axis Vector3 add float time float Returns LTDescr LeanRotateX(GameObject, float, float) public static LTDescr LeanRotateX(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanRotateX(Transform, float, float) public static LTDescr LeanRotateX(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanRotateY(GameObject, float, float) public static LTDescr LeanRotateY(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanRotateY(Transform, float, float) public static LTDescr LeanRotateY(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanRotateZ(GameObject, float, float) public static LTDescr LeanRotateZ(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanRotateZ(Transform, float, float) public static LTDescr LeanRotateZ(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanScale(GameObject, Vector3, float) public static LTDescr LeanScale(this GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr LeanScale(RectTransform, Vector3, float) public static LTDescr LeanScale(this RectTransform rectTransform, Vector3 to, float time) Parameters rectTransform RectTransform to Vector3 time float Returns LTDescr LeanScale(Transform, Vector3, float) public static LTDescr LeanScale(this Transform transform, Vector3 to, float time) Parameters transform Transform to Vector3 time float Returns LTDescr LeanScaleX(GameObject, float, float) public static LTDescr LeanScaleX(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanScaleX(Transform, float, float) public static LTDescr LeanScaleX(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanScaleY(GameObject, float, float) public static LTDescr LeanScaleY(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanScaleY(Transform, float, float) public static LTDescr LeanScaleY(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanScaleZ(GameObject, float, float) public static LTDescr LeanScaleZ(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanScaleZ(Transform, float, float) public static LTDescr LeanScaleZ(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanSetLocalPosX(Transform, float) public static void LeanSetLocalPosX(this Transform transform, float val) Parameters transform Transform val float LeanSetLocalPosY(Transform, float) public static void LeanSetLocalPosY(this Transform transform, float val) Parameters transform Transform val float LeanSetLocalPosZ(Transform, float) public static void LeanSetLocalPosZ(this Transform transform, float val) Parameters transform Transform val float LeanSetPosX(Transform, float) public static void LeanSetPosX(this Transform transform, float val) Parameters transform Transform val float LeanSetPosY(Transform, float) public static void LeanSetPosY(this Transform transform, float val) Parameters transform Transform val float LeanSetPosZ(Transform, float) public static void LeanSetPosZ(this Transform transform, float val) Parameters transform Transform val float LeanSize(RectTransform, Vector2, float) public static LTDescr LeanSize(this RectTransform rectTransform, Vector2 to, float time) Parameters rectTransform RectTransform to Vector2 time float Returns LTDescr LeanValue(GameObject, Color, Color, float) public static LTDescr LeanValue(this GameObject gameObject, Color from, Color to, float time) Parameters gameObject GameObject from Color to Color time float Returns LTDescr LeanValue(GameObject, Action<Color>, Color, Color, float) public static LTDescr LeanValue(this GameObject gameObject, Action<Color> callOnUpdate, Color from, Color to, float time) Parameters gameObject GameObject callOnUpdate Action<Color> from Color to Color time float Returns LTDescr LeanValue(GameObject, Action<float, object>, float, float, float) public static LTDescr LeanValue(this GameObject gameObject, Action<float, object> callOnUpdate, float from, float to, float time) Parameters gameObject GameObject callOnUpdate Action<float, object> from float to float time float Returns LTDescr LeanValue(GameObject, Action<float, float>, float, float, float) public static LTDescr LeanValue(this GameObject gameObject, Action<float, float> callOnUpdate, float from, float to, float time) Parameters gameObject GameObject callOnUpdate Action<float, float> from float to float time float Returns LTDescr LeanValue(GameObject, Action<float>, float, float, float) public static LTDescr LeanValue(this GameObject gameObject, Action<float> callOnUpdate, float from, float to, float time) Parameters gameObject GameObject callOnUpdate Action<float> from float to float time float Returns LTDescr LeanValue(GameObject, Action<Vector2>, Vector2, Vector2, float) public static LTDescr LeanValue(this GameObject gameObject, Action<Vector2> callOnUpdate, Vector2 from, Vector2 to, float time) Parameters gameObject GameObject callOnUpdate Action<Vector2> from Vector2 to Vector2 time float Returns LTDescr LeanValue(GameObject, Action<Vector3>, Vector3, Vector3, float) public static LTDescr LeanValue(this GameObject gameObject, Action<Vector3> callOnUpdate, Vector3 from, Vector3 to, float time) Parameters gameObject GameObject callOnUpdate Action<Vector3> from Vector3 to Vector3 time float Returns LTDescr LeanValue(GameObject, float, float, float) public static LTDescr LeanValue(this GameObject gameObject, float from, float to, float time) Parameters gameObject GameObject from float to float time float Returns LTDescr LeanValue(GameObject, Vector2, Vector2, float) public static LTDescr LeanValue(this GameObject gameObject, Vector2 from, Vector2 to, float time) Parameters gameObject GameObject from Vector2 to Vector2 time float Returns LTDescr LeanValue(GameObject, Vector3, Vector3, float) public static LTDescr LeanValue(this GameObject gameObject, Vector3 from, Vector3 to, float time) Parameters gameObject GameObject from Vector3 to Vector3 time float Returns LTDescr"
  },
  "api/Global.LeanTweenType.html": {
    "href": "api/Global.LeanTweenType.html",
    "title": "Enum LeanTweenType | |",
    "keywords": "Enum LeanTweenType Namespace Global public enum LeanTweenType Fields animationCurve = 38 clamp = 36 easeInBack = 26 easeInBounce = 23 easeInCirc = 20 easeInCubic = 5 easeInElastic = 29 easeInExpo = 17 easeInOutBack = 28 easeInOutBounce = 25 easeInOutCirc = 22 easeInOutCubic = 7 easeInOutElastic = 31 easeInOutExpo = 19 easeInOutQuad = 4 easeInOutQuart = 10 easeInOutQuint = 13 easeInOutSine = 16 easeInQuad = 3 easeInQuart = 8 easeInQuint = 11 easeInSine = 14 easeOutBack = 27 easeOutBounce = 24 easeOutCirc = 21 easeOutCubic = 6 easeOutElastic = 30 easeOutExpo = 18 easeOutQuad = 2 easeOutQuart = 9 easeOutQuint = 12 easeOutSine = 15 easeShake = 33 easeSpring = 32 linear = 1 notUsed = 0 once = 35 pingPong = 37 punch = 34"
  },
  "api/Global.LogoCinematic.html": {
    "href": "api/Global.LogoCinematic.html",
    "title": "Class LogoCinematic | |",
    "keywords": "Class LogoCinematic Namespace Global public class LogoCinematic : MonoBehaviour Inheritance object LogoCinematic Fields lean public GameObject lean Field Value GameObject tween public GameObject tween Field Value GameObject"
  },
  "api/Global.PathBezier2d.html": {
    "href": "api/Global.PathBezier2d.html",
    "title": "Class PathBezier2d | |",
    "keywords": "Class PathBezier2d Namespace Global public class PathBezier2d : MonoBehaviour Inheritance object PathBezier2d Fields cubes public Transform[] cubes Field Value Transform[] dude1 public GameObject dude1 Field Value GameObject dude2 public GameObject dude2 Field Value GameObject"
  },
  "api/Global.PathSpline2d.html": {
    "href": "api/Global.PathSpline2d.html",
    "title": "Class PathSpline2d | |",
    "keywords": "Class PathSpline2d Namespace Global public class PathSpline2d : MonoBehaviour Inheritance object PathSpline2d Fields cubes public Transform[] cubes Field Value Transform[] dude1 public GameObject dude1 Field Value GameObject dude2 public GameObject dude2 Field Value GameObject"
  },
  "api/Global.PathSplineEndless.html": {
    "href": "api/Global.PathSplineEndless.html",
    "title": "Class PathSplineEndless | |",
    "keywords": "Class PathSplineEndless Namespace Global public class PathSplineEndless : MonoBehaviour Inheritance object PathSplineEndless Fields car public GameObject car Field Value GameObject carInternal public GameObject carInternal Field Value GameObject cubes public GameObject[] cubes Field Value GameObject[] randomIterWidth public float randomIterWidth Field Value float trackTrailRenderers public GameObject trackTrailRenderers Field Value GameObject trees public GameObject[] trees Field Value GameObject[]"
  },
  "api/Global.PathSplinePerformance.html": {
    "href": "api/Global.PathSplinePerformance.html",
    "title": "Class PathSplinePerformance | |",
    "keywords": "Class PathSplinePerformance Namespace Global public class PathSplinePerformance : MonoBehaviour Inheritance object PathSplinePerformance Fields car public GameObject car Field Value GameObject carInternal public GameObject carInternal Field Value GameObject carSpeed public float carSpeed Field Value float circleLength public float circleLength Field Value float randomRange public float randomRange Field Value float tracerSpeed public float tracerSpeed Field Value float trackNodes public int trackNodes Field Value int trackTrailRenderers public GameObject trackTrailRenderers Field Value GameObject"
  },
  "api/Global.PathSplineTrack.html": {
    "href": "api/Global.PathSplineTrack.html",
    "title": "Class PathSplineTrack | |",
    "keywords": "Class PathSplineTrack Namespace Global public class PathSplineTrack : MonoBehaviour Inheritance object PathSplineTrack Fields car public GameObject car Field Value GameObject carInternal public GameObject carInternal Field Value GameObject trackOnePoints public Transform[] trackOnePoints Field Value Transform[] trackTrailRenderers public GameObject trackTrailRenderers Field Value GameObject"
  },
  "api/Global.PathSplines.html": {
    "href": "api/Global.PathSplines.html",
    "title": "Class PathSplines | |",
    "keywords": "Class PathSplines Namespace Global public class PathSplines : MonoBehaviour Inheritance object PathSplines Fields trans public Transform[] trans Field Value Transform[]"
  },
  "api/Global.PerformanceTests.html": {
    "href": "api/Global.PerformanceTests.html",
    "title": "Class PerformanceTests | |",
    "keywords": "Class PerformanceTests Namespace Global public class PerformanceTests : MonoBehaviour Inheritance object PerformanceTests Fields bulletPrefab public GameObject bulletPrefab Field Value GameObject debug public bool debug Field Value bool shipSpeed public float shipSpeed Field Value float"
  },
  "api/Global.Testing240.html": {
    "href": "api/Global.Testing240.html",
    "title": "Class Testing240 | |",
    "keywords": "Class Testing240 Namespace Global public class Testing240 : MonoBehaviour Inheritance object Testing240 Fields cube1 public GameObject cube1 Field Value GameObject cube2 public GameObject cube2 Field Value GameObject rect1 public RectTransform rect1 Field Value RectTransform sprite2 public GameObject sprite2 Field Value GameObject Methods ScaleGroundColor(Color) public static void ScaleGroundColor(Color to) Parameters to Color"
  },
  "api/Global.Testing243.html": {
    "href": "api/Global.Testing243.html",
    "title": "Class Testing243 | |",
    "keywords": "Class Testing243 Namespace Global public class Testing243 : MonoBehaviour Inheritance object Testing243 Fields cube1 public GameObject cube1 Field Value GameObject imageRectTransform public RectTransform imageRectTransform Field Value RectTransform lightInScene public Light lightInScene Field Value Light"
  },
  "api/Global.Testing246.html": {
    "href": "api/Global.Testing246.html",
    "title": "Class Testing246 | |",
    "keywords": "Class Testing246 Namespace Global public class Testing246 : MonoBehaviour Inheritance object Testing246 Fields gameScale public float gameScale Field Value float tweenAlpha public GameObject tweenAlpha Field Value GameObject"
  },
  "api/Global.Testing248.html": {
    "href": "api/Global.Testing248.html",
    "title": "Class Testing248 | |",
    "keywords": "Class Testing248 Namespace Global public class Testing248 : MonoBehaviour Inheritance object Testing248 Fields dude1 public GameObject dude1 Field Value GameObject"
  },
  "api/Global.TestingColorTweening.html": {
    "href": "api/Global.TestingColorTweening.html",
    "title": "Class TestingColorTweening | |",
    "keywords": "Class TestingColorTweening Namespace Global public class TestingColorTweening : MonoBehaviour Inheritance object TestingColorTweening"
  },
  "api/Global.TestingDescr.html": {
    "href": "api/Global.TestingDescr.html",
    "title": "Class TestingDescr | |",
    "keywords": "Class TestingDescr Namespace Global public class TestingDescr : MonoBehaviour Inheritance object TestingDescr Fields go public GameObject go Field Value GameObject Methods checkTweenDescr() public void checkTweenDescr() startTween() public void startTween()"
  },
  "api/Global.TestingIssue.html": {
    "href": "api/Global.TestingIssue.html",
    "title": "Class TestingIssue | |",
    "keywords": "Class TestingIssue Namespace Global public class TestingIssue : MonoBehaviour Inheritance object TestingIssue"
  },
  "api/Global.TestingIssue2.html": {
    "href": "api/Global.TestingIssue2.html",
    "title": "Class TestingIssue2 | |",
    "keywords": "Class TestingIssue2 Namespace Global public class TestingIssue2 : MonoBehaviour Inheritance object TestingIssue2 Fields go public GameObject go Field Value GameObject go2 public GameObject go2 Field Value GameObject rect public RectTransform rect Field Value RectTransform"
  },
  "api/Global.TestingMaxTweens.html": {
    "href": "api/Global.TestingMaxTweens.html",
    "title": "Class TestingMaxTweens | |",
    "keywords": "Class TestingMaxTweens Namespace Global public class TestingMaxTweens : MonoBehaviour Inheritance object TestingMaxTweens"
  },
  "api/Global.TestingOptionalCancel.html": {
    "href": "api/Global.TestingOptionalCancel.html",
    "title": "Class TestingOptionalCancel | |",
    "keywords": "Class TestingOptionalCancel Namespace Global public class TestingOptionalCancel : MonoBehaviour Inheritance object TestingOptionalCancel Fields cube1 public GameObject cube1 Field Value GameObject"
  },
  "api/Global.TestingRotate.html": {
    "href": "api/Global.TestingRotate.html",
    "title": "Class TestingRotate | |",
    "keywords": "Class TestingRotate Namespace Global public class TestingRotate : MonoBehaviour Inheritance object TestingRotate Fields earth public GameObject earth Field Value GameObject earth2 public GameObject earth2 Field Value GameObject earth3 public GameObject earth3 Field Value GameObject sun public GameObject sun Field Value GameObject sun2 public GameObject sun2 Field Value GameObject sun3 public GameObject sun3 Field Value GameObject"
  },
  "api/Global.TestingSceneSwitching.html": {
    "href": "api/Global.TestingSceneSwitching.html",
    "title": "Class TestingSceneSwitching | |",
    "keywords": "Class TestingSceneSwitching Namespace Global public class TestingSceneSwitching : MonoBehaviour Inheritance object TestingSceneSwitching Fields cube public GameObject cube Field Value GameObject"
  },
  "api/Global.TestingSequencer.html": {
    "href": "api/Global.TestingSequencer.html",
    "title": "Class TestingSequencer | |",
    "keywords": "Class TestingSequencer Namespace Global public class TestingSequencer : MonoBehaviour Inheritance object TestingSequencer Fields cube1 public GameObject cube1 Field Value GameObject Methods Start() public void Start()"
  },
  "api/Global.TestingZLegacy.NextFunc.html": {
    "href": "api/Global.TestingZLegacy.NextFunc.html",
    "title": "Delegate TestingZLegacy.NextFunc | |",
    "keywords": "Delegate TestingZLegacy.NextFunc Namespace Global public delegate void TestingZLegacy.NextFunc()"
  },
  "api/Global.TestingZLegacy.TimingType.html": {
    "href": "api/Global.TestingZLegacy.TimingType.html",
    "title": "Enum TestingZLegacy.TimingType | |",
    "keywords": "Enum TestingZLegacy.TimingType Namespace Global public enum TestingZLegacy.TimingType Fields HalfTimeScale = 2 IgnoreTimeScale = 1 Length = 4 SteadyNormalTime = 0 VariableTimeScale = 3"
  },
  "api/Global.TestingZLegacy.html": {
    "href": "api/Global.TestingZLegacy.html",
    "title": "Class TestingZLegacy | |",
    "keywords": "Class TestingZLegacy Namespace Global public class TestingZLegacy : MonoBehaviour Inheritance object TestingZLegacy Fields customAnimationCurve public AnimationCurve customAnimationCurve Field Value AnimationCurve pt1 public Transform pt1 Field Value Transform pt2 public Transform pt2 Field Value Transform pt3 public Transform pt3 Field Value Transform pt4 public Transform pt4 Field Value Transform pt5 public Transform pt5 Field Value Transform useEstimatedTime public bool useEstimatedTime Field Value bool Methods alphaExample() public void alphaExample() colorExample() public void colorExample() customTweenExample() public void customTweenExample() delayedCallExample() public void delayedCallExample() delayedCallExampleCallback() public void delayedCallExampleCallback() loopPause() public void loopPause() loopResume() public void loopResume() loopTestClamp() public void loopTestClamp() loopTestPingPong() public void loopTestPingPong() moveExample() public void moveExample() moveLocalExample() public void moveLocalExample() moveOnACurveExample() public void moveOnACurveExample() punchTest() public void punchTest() rotateAroundExample() public void rotateAroundExample() rotateExample() public void rotateExample() rotateFinished(object) public void rotateFinished(object hash) Parameters hash object rotateOnUpdate(float) public void rotateOnUpdate(float val) Parameters val float scaleExample() public void scaleExample() updateValue3Example() public void updateValue3Example() updateValue3ExampleCallback(Vector3) public void updateValue3ExampleCallback(Vector3 val) Parameters val Vector3 updateValue3ExampleUpdate(Vector3) public void updateValue3ExampleUpdate(Vector3 val) Parameters val Vector3 updateValueExample() public void updateValueExample() updateValueExampleCallback(float, object) public void updateValueExampleCallback(float val, object hash) Parameters val float hash object"
  },
  "api/Global.TestingZLegacyExt.NextFunc.html": {
    "href": "api/Global.TestingZLegacyExt.NextFunc.html",
    "title": "Delegate TestingZLegacyExt.NextFunc | |",
    "keywords": "Delegate TestingZLegacyExt.NextFunc Namespace Global public delegate void TestingZLegacyExt.NextFunc()"
  },
  "api/Global.TestingZLegacyExt.TimingType.html": {
    "href": "api/Global.TestingZLegacyExt.TimingType.html",
    "title": "Enum TestingZLegacyExt.TimingType | |",
    "keywords": "Enum TestingZLegacyExt.TimingType Namespace Global public enum TestingZLegacyExt.TimingType Fields HalfTimeScale = 2 IgnoreTimeScale = 1 Length = 4 SteadyNormalTime = 0 VariableTimeScale = 3"
  },
  "api/Global.TestingZLegacyExt.html": {
    "href": "api/Global.TestingZLegacyExt.html",
    "title": "Class TestingZLegacyExt | |",
    "keywords": "Class TestingZLegacyExt Namespace Global public class TestingZLegacyExt : MonoBehaviour Inheritance object TestingZLegacyExt Fields customAnimationCurve public AnimationCurve customAnimationCurve Field Value AnimationCurve pt1 public Transform pt1 Field Value Transform pt2 public Transform pt2 Field Value Transform pt3 public Transform pt3 Field Value Transform pt4 public Transform pt4 Field Value Transform pt5 public Transform pt5 Field Value Transform useEstimatedTime public bool useEstimatedTime Field Value bool Methods alphaExample() public void alphaExample() colorExample() public void colorExample() customTweenExample() public void customTweenExample() delayedCallExample() public void delayedCallExample() delayedCallExampleCallback() public void delayedCallExampleCallback() loopPause() public void loopPause() loopResume() public void loopResume() loopTestClamp() public void loopTestClamp() loopTestPingPong() public void loopTestPingPong() moveExample() public void moveExample() moveLocalExample() public void moveLocalExample() moveOnACurveExample() public void moveOnACurveExample() punchTest() public void punchTest() rotateAroundExample() public void rotateAroundExample() rotateExample() public void rotateExample() rotateFinished(object) public void rotateFinished(object hash) Parameters hash object rotateOnUpdate(float) public void rotateOnUpdate(float val) Parameters val float scaleExample() public void scaleExample() updateValue3Example() public void updateValue3Example() updateValue3ExampleCallback(Vector3) public void updateValue3ExampleCallback(Vector3 val) Parameters val Vector3 updateValue3ExampleUpdate(Vector3) public void updateValue3ExampleUpdate(Vector3 val) Parameters val Vector3 updateValueExample() public void updateValueExample() updateValueExampleCallback(float, object) public void updateValueExampleCallback(float val, object hash) Parameters val float hash object"
  },
  "api/Global.TweenAction.html": {
    "href": "api/Global.TweenAction.html",
    "title": "Enum TweenAction | |",
    "keywords": "Enum TweenAction Namespace Global public enum TweenAction Fields ALPHA = 21 ALPHA_VERTEX = 25 CALLBACK = 33 CALLBACK_COLOR = 27 CANVASGROUP_ALPHA = 24 CANVAS_ALPHA = 23 CANVAS_COLOR = 29 CANVAS_MOVE = 47 CANVAS_MOVE_X = 30 CANVAS_MOVE_Y = 31 CANVAS_MOVE_Z = 32 CANVAS_PLAYSPRITE = 20 CANVAS_ROTATEAROUND = 18 CANVAS_ROTATEAROUND_LOCAL = 19 CANVAS_SCALE = 48 CANVAS_SIZEDELTA = 49 COLOR = 26 DELAYED_SOUND = 46 FOLLOW = 50 GUI_ALPHA = 44 GUI_MOVE = 41 GUI_MOVE_MARGIN = 42 GUI_ROTATE = 45 GUI_SCALE = 43 MOVE = 34 MOVE_CURVED = 6 MOVE_CURVED_LOCAL = 7 MOVE_LOCAL = 35 MOVE_LOCAL_X = 3 MOVE_LOCAL_Y = 4 MOVE_LOCAL_Z = 5 MOVE_SPLINE = 8 MOVE_SPLINE_LOCAL = 9 MOVE_TO_TRANSFORM = 36 MOVE_X = 0 MOVE_Y = 1 MOVE_Z = 2 NONE = 51 ROTATE = 37 ROTATE_AROUND = 16 ROTATE_AROUND_LOCAL = 17 ROTATE_LOCAL = 38 ROTATE_X = 13 ROTATE_Y = 14 ROTATE_Z = 15 SCALE = 39 SCALE_X = 10 SCALE_Y = 11 SCALE_Z = 12 TEXT_ALPHA = 22 TEXT_COLOR = 28 VALUE3 = 40"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace | |",
    "keywords": "Namespace Classes BasicSample CanvasSampleOpenFileImage CanvasSampleOpenFileText CanvasSampleOpenFileTextMultiple CanvasSampleSaveFileImage CanvasSampleSaveFileText ExampleSpline Following FollowingTests GeneralAdvancedTechniques GeneralBasic GeneralBasics2d GeneralCameraShake GeneralEasingTypes GeneralEventsListeners GeneralSequencer GeneralSimpleUI GeneralUISpace LTBezier LTBezierPath LTDescr LTDescrOptional LTEvent LTGUI LTRect LTSeq LTSpline Move a GameObject to a certain location LTUtility LeanAudio LeanAudioOptions LeanAudioStream LeanSmooth LeanTest LeanTester LeanTween LeanTweenExt LogoCinematic PathBezier2d PathSpline2d PathSplineEndless PathSplinePerformance PathSplineTrack PathSplines PerformanceTests Testing240 Testing243 Testing246 Testing248 TestingColorTweening TestingDescr TestingIssue TestingIssue2 TestingMaxTweens TestingOptionalCancel TestingRotate TestingSceneSwitching TestingSequencer TestingZLegacy TestingZLegacyExt test Enums GeneralEventsListeners.MyEvents LTGUI.Element_Type LeanAudioOptions.LeanAudioWaveStyle LeanProp LeanTweenType TestingZLegacy.TimingType TestingZLegacyExt.TimingType TweenAction Delegates LTDescr.ActionMethodDelegate LTDescr.EaseTypeDelegate TestingZLegacy.NextFunc TestingZLegacyExt.NextFunc"
  },
  "api/Global.test.html": {
    "href": "api/Global.test.html",
    "title": "Class test | |",
    "keywords": "Class test Namespace Global public class test : MonoBehaviour Inheritance object test Fields columns public int columns Field Value int rows public int rows Field Value int testPrefab public GameObject testPrefab Field Value GameObject"
  },
  "api/PAC.Animation.AnimationKeyFrame.html": {
    "href": "api/PAC.Animation.AnimationKeyFrame.html",
    "title": "Class AnimationKeyFrame | |",
    "keywords": "Class AnimationKeyFrame Namespace PAC.Animation A class representing a single keyframe for a layer. public class AnimationKeyFrame : IJSONable Inheritance object AnimationKeyFrame Implements IJSONable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AnimationKeyFrame(AnimationKeyFrame) Creates a deep copy of the AnimationKeyFrame. public AnimationKeyFrame(AnimationKeyFrame animationKeyFrame) Parameters animationKeyFrame AnimationKeyFrame AnimationKeyFrame(int, Texture2D) public AnimationKeyFrame(int frame, Texture2D texture) Parameters frame int texture Texture2D Fields frame The number of the frame this keyframe is on. public int frame Field Value int texture The texture displayed at this keyframe. public Texture2D texture Field Value Texture2D Methods DeepCopy() Creates a deep copy of the AnimationKeyFrame. public AnimationKeyFrame DeepCopy() Returns AnimationKeyFrame FromJSON(JSON) public static AnimationKeyFrame FromJSON(JSON json) Parameters json JSON Returns AnimationKeyFrame ToJSON() public JSON ToJSON() Returns JSON"
  },
  "api/PAC.Animation.AnimationManager.html": {
    "href": "api/PAC.Animation.AnimationManager.html",
    "title": "Class AnimationManager | |",
    "keywords": "Class AnimationManager Namespace PAC.Animation Handles the animation timeline and playback of animations. The animation system is still a work in progress. public class AnimationManager : MonoBehaviour Inheritance object AnimationManager Fields framerate public int framerate Field Value int onionSkinColour public Color onionSkinColour Field Value Color showOnionSkin public bool showOnionSkin Field Value bool Properties currentFrameIndex The number of the frame currently being displayed. public int currentFrameIndex { get; set; } Property Value int Methods AddKeyFrame() Extends the length of the animation by adding one frame to the end. public void AddKeyFrame() DebugLogKeyFrames() For debugging purposes. Prints the current frame number and the frame numbers of each keyframe. public void DebugLogKeyFrames() DeleteSelectedKeyFrame() Deletes the selected key frame. public void DeleteSelectedKeyFrame() Pause() Pauses the animation playback. public void Pause() Play() Starts/resumes the animation playback. public void Play() RemoveKeyFrame() Reduces the length of the animation by removing the final frame. public void RemoveKeyFrame() Stop() Stops the animation playback and resets the current frame number back to the start. public void Stop() SubscribeToOnCurrentFrameIndexChange(UnityAction) Event is invoked when the current frame number changes. public void SubscribeToOnCurrentFrameIndexChange(UnityAction call) Parameters call UnityAction SubscribeToOnKeyFrameAdded(UnityAction) Event is invoked when a keyframe is added. public void SubscribeToOnKeyFrameAdded(UnityAction call) Parameters call UnityAction SubscribeToOnKeyFrameDeleted(UnityAction) Event is invoked when a keyframe is deleted. public void SubscribeToOnKeyFrameDeleted(UnityAction call) Parameters call UnityAction"
  },
  "api/PAC.Animation.FrameNotch.html": {
    "href": "api/PAC.Animation.FrameNotch.html",
    "title": "Class FrameNotch | |",
    "keywords": "Class FrameNotch Namespace PAC.Animation A class for the frame number markers on the animation timeline. public class FrameNotch : MonoBehaviour Inheritance object FrameNotch Properties frameNum public int frameNum { get; set; } Property Value int Methods SetFrameNumber(int) public void SetFrameNumber(int num) Parameters num int"
  },
  "api/PAC.Animation.KeyFrameIcon.html": {
    "href": "api/PAC.Animation.KeyFrameIcon.html",
    "title": "Class KeyFrameIcon | |",
    "keywords": "Class KeyFrameIcon Namespace PAC.Animation Stores the data about a keyframe icon on the animation timeline. public class KeyFrameIcon : MonoBehaviour Inheritance object KeyFrameIcon Fields frameIndex The frame number this keyframe is on. public int frameIndex Field Value int layerIndex The layer index this keyframe is on. public int layerIndex Field Value int"
  },
  "api/PAC.Animation.LayerAnimation.html": {
    "href": "api/PAC.Animation.LayerAnimation.html",
    "title": "Class LayerAnimation | |",
    "keywords": "Class LayerAnimation Namespace PAC.Animation [Serializable] [Obsolete(\"LayerAnimation has now been moved directly into the Layer class.\")] public class LayerAnimation Inheritance object LayerAnimation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LayerAnimation(LayerAnimation) Creates a deep copy of the given layer animation, including deep copies of the key frames. public LayerAnimation(LayerAnimation layerAnimation) Parameters layerAnimation LayerAnimation LayerAnimation(int, int) Create an animation with a blank starting key frame. public LayerAnimation(int width, int height) Parameters width int The width of the frames. height int The height of the frames. LayerAnimation(Texture2D) Create an animation with the given texture as the starting key frame. public LayerAnimation(Texture2D texture) Parameters texture Texture2D The texture for the starting key frame. Properties this[int] Returns the most recent key frame before or at frame frame - i.e. the frame the animation will play at frame frame. Same as GetKeyFrame(i). public AnimationKeyFrame this[int i] { get; } Parameters i int Property Value AnimationKeyFrame height public int height { get; } Property Value int keyFrameCount The number of key frames in the animation. public int keyFrameCount { get; } Property Value int keyFrameIndices The frame indices of the key frames in the animation. public int[] keyFrameIndices { get; } Property Value int[] keyFrames The key frames of the animation, in order of frame number. public List<AnimationKeyFrame> keyFrames { get; } Property Value List<AnimationKeyFrame> numOfFrames public int numOfFrames { get; } Property Value int width public int width { get; } Property Value int Methods AddKeyFrame(AnimationKeyFrame) Adds the given key frame. Returns true if it replaces an existing key frame, and false otherwise. public bool AddKeyFrame(AnimationKeyFrame keyFrame) Parameters keyFrame AnimationKeyFrame Returns bool AddKeyFrame(int) Adds a key frame at frame frame. The texture will be that of the most recent key frame. Returns true if it replaces an existing key frame, and false otherwise. public bool AddKeyFrame(int frame) Parameters frame int Returns bool AddKeyFrame(int, Texture2D) Adds a key frame with the given texture at frame frame. Returns true if it replaces an existing key frame, and false otherwise. public bool AddKeyFrame(int frame, Texture2D texture) Parameters frame int texture Texture2D Returns bool Clear() Deletes all key frames. public void Clear() DeleteKeyFrame(AnimationKeyFrame) Deletes the given key frame, if it's in the animation, in which case it returns true. Otherwise it returns false. public bool DeleteKeyFrame(AnimationKeyFrame keyFrame) Parameters keyFrame AnimationKeyFrame Returns bool DeleteKeyFrame(int) Deletes the key frame at the given frame index, if there is one, in which case it returns that key frame. Otherwise it returns null. public AnimationKeyFrame DeleteKeyFrame(int keyframe) Parameters keyframe int Returns AnimationKeyFrame DeleteMostRecentKeyFrame(int) Deletes the most recent key frame before or at the given frame index and returns that key frame. public AnimationKeyFrame DeleteMostRecentKeyFrame(int frame) Parameters frame int Returns AnimationKeyFrame FromJSON(JSON) public static LayerAnimation FromJSON(JSON json) Parameters json JSON Returns LayerAnimation GetKeyFrame(int) Returns the most recent key frame before or at frame frame - i.e. the frame the animation will play at frame frame. public AnimationKeyFrame GetKeyFrame(int frame) Parameters frame int Returns AnimationKeyFrame HasKeyFrameAt(int) Returns whether or not there is a key frame at the given frame index. public bool HasKeyFrameAt(int frame) Parameters frame int Returns bool ToJSON() public JSON ToJSON() Returns JSON"
  },
  "api/PAC.Animation.html": {
    "href": "api/PAC.Animation.html",
    "title": "Namespace PAC.Animation | |",
    "keywords": "Namespace PAC.Animation Classes AnimationKeyFrame A class representing a single keyframe for a layer. AnimationManager Handles the animation timeline and playback of animations. The animation system is still a work in progress. FrameNotch A class for the frame number markers on the animation timeline. KeyFrameIcon Stores the data about a keyframe icon on the animation timeline. LayerAnimation"
  },
  "api/PAC.Clipboard.Clipboard.html": {
    "href": "api/PAC.Clipboard.Clipboard.html",
    "title": "Class Clipboard | |",
    "keywords": "Class Clipboard Namespace PAC.Clipboard A class to handle copy/paste functionality. Not yet properly implemented. public class Clipboard : MonoBehaviour Inheritance object Clipboard Methods Copy() public void Copy() Cut() public void Cut() Paste() public void Paste()"
  },
  "api/PAC.Clipboard.html": {
    "href": "api/PAC.Clipboard.html",
    "title": "Namespace PAC.Clipboard | |",
    "keywords": "Namespace PAC.Clipboard Classes Clipboard A class to handle copy/paste functionality. Not yet properly implemented."
  },
  "api/PAC.Colour.BlendMode.html": {
    "href": "api/PAC.Colour.BlendMode.html",
    "title": "Class BlendMode | |",
    "keywords": "Class BlendMode Namespace PAC.Colour A class for blend modes. public class BlendMode Inheritance object BlendMode Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields Add Add blend mode. public static readonly BlendMode Add Field Value BlendMode Multiply Multiply blend mode. public static readonly BlendMode Multiply Field Value BlendMode Normal Normal blend mode. public static readonly BlendMode Normal Field Value BlendMode Overlay Overlay blend mode. public static readonly BlendMode Overlay Field Value BlendMode Replace Replace blend mode. public static readonly BlendMode Replace Field Value BlendMode Screen Screen blend mode. public static readonly BlendMode Screen Field Value BlendMode Subtract Subtract blend mode. public static readonly BlendMode Subtract Field Value BlendMode blendModes All implemented blend modes. public static readonly BlendMode[] blendModes Field Value BlendMode[] Methods Blend(Color, Color) Blend the two colours using the blend mode's blend function. public Color Blend(Color topColour, Color bottomColour) Parameters topColour Color bottomColour Color Returns Color Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MultiplyColours(Color, Color) Multiplies the colours component-wise. public static Color MultiplyColours(Color colour1, Color colour2) Parameters colour1 Color colour2 Color Returns Color StringToBlendMode(string) Returns the blend mode with that name (case-insensitive). public static BlendMode StringToBlendMode(string blendModeName) Parameters blendModeName string Returns BlendMode ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Operators operator ==(BlendMode, BlendMode) public static bool operator ==(BlendMode a, BlendMode b) Parameters a BlendMode b BlendMode Returns bool operator !=(BlendMode, BlendMode) public static bool operator !=(BlendMode a, BlendMode b) Parameters a BlendMode b BlendMode Returns bool"
  },
  "api/PAC.Colour.ColorExtensions.html": {
    "href": "api/PAC.Colour.ColorExtensions.html",
    "title": "Class ColorExtensions | |",
    "keywords": "Class ColorExtensions Namespace PAC.Colour public static class ColorExtensions Inheritance object ColorExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Invert(Color, bool) Inverts the colour, i.e. does 1 - value for each component. public static Color Invert(this Color colour, bool invertAlpha = false) Parameters colour Color invertAlpha bool Whether to invert the alpha value as well. Returns Color ToHSL(Color) public static HSL ToHSL(this Color color) Parameters color Color Returns HSL ToHSV(Color) public static HSV ToHSV(this Color color) Parameters color Color Returns HSV"
  },
  "api/PAC.Colour.HSL.html": {
    "href": "api/PAC.Colour.HSL.html",
    "title": "Struct HSL | |",
    "keywords": "Struct HSL Namespace PAC.Colour Represents a colour in HSL form. public struct HSL Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors HSL(Color) public HSL(Color rgb) Parameters rgb Color HSL(float, float, float) public HSL(float hue, float saturation, float lightness) Parameters hue float saturation float lightness float HSL(float, float, float, float) public HSL(float hue, float saturation, float lightness, float alpha) Parameters hue float saturation float lightness float alpha float Properties a Alpha. public float a { readonly get; set; } Property Value float color public Color color { get; } Property Value Color h Hue. public float h { readonly get; set; } Property Value float hsv public HSV hsv { get; } Property Value HSV l Lightness. public float l { readonly get; set; } Property Value float s Saturation. public float s { readonly get; set; } Property Value float Methods ToColor() public Color ToColor() Returns Color ToHSV() public HSV ToHSV() Returns HSV ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. ToString(int) public string ToString(int decimalPlaces) Parameters decimalPlaces int Returns string Operators explicit operator Color(HSL) public static explicit operator Color(HSL hsl) Parameters hsl HSL Returns Color explicit operator HSV(HSL) public static explicit operator HSV(HSL hsl) Parameters hsl HSL Returns HSV"
  },
  "api/PAC.Colour.HSV.html": {
    "href": "api/PAC.Colour.HSV.html",
    "title": "Struct HSV | |",
    "keywords": "Struct HSV Namespace PAC.Colour Represents a colour in HSV form. public struct HSV Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors HSV(Color) public HSV(Color rgb) Parameters rgb Color HSV(float, float, float) public HSV(float hue, float saturation, float value) Parameters hue float saturation float value float HSV(float, float, float, float) public HSV(float hue, float saturation, float value, float alpha) Parameters hue float saturation float value float alpha float Properties a Alpha. public float a { readonly get; set; } Property Value float color public Color color { get; } Property Value Color h Hue. public float h { readonly get; set; } Property Value float hsl public HSL hsl { get; } Property Value HSL s Saturation. public float s { readonly get; set; } Property Value float v Value. public float v { readonly get; set; } Property Value float Methods ToColor() public Color ToColor() Returns Color ToHSL() public HSL ToHSL() Returns HSL ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. ToString(int) public string ToString(int decimalPlaces) Parameters decimalPlaces int Returns string Operators explicit operator Color(HSV) public static explicit operator Color(HSV hsv) Parameters hsv HSV Returns Color explicit operator HSL(HSV) public static explicit operator HSL(HSV hsv) Parameters hsv HSV Returns HSL"
  },
  "api/PAC.Colour.html": {
    "href": "api/PAC.Colour.html",
    "title": "Namespace PAC.Colour | |",
    "keywords": "Namespace PAC.Colour Classes BlendMode A class for blend modes. ColorExtensions Structs HSL Represents a colour in HSL form. HSV Represents a colour in HSV form."
  },
  "api/PAC.ColourPicker.ColourPreview.html": {
    "href": "api/PAC.ColourPicker.ColourPreview.html",
    "title": "Class ColourPreview | |",
    "keywords": "Class ColourPreview Namespace PAC.ColourPicker A class to represent colour previews - the boxes on colour pickers that show what colours you have selected. public class ColourPreview : MonoBehaviour Inheritance object ColourPreview Properties colour The colour displayed in the colour preview. public Color colour { get; } Property Value Color outlineThickness public float outlineThickness { get; } Property Value float Methods SetColour(Color) public void SetColour(Color colour) Parameters colour Color SubscribeToOnDeselect(UnityAction) Event invoked when colour preview is deselected. public void SubscribeToOnDeselect(UnityAction call) Parameters call UnityAction SubscribeToOnSelect(UnityAction) Event invoked when colour preview is selected. public void SubscribeToOnSelect(UnityAction call) Parameters call UnityAction SubscribeToOnToggle(UnityAction) Event invoked when colour preview is selected or deselected. public void SubscribeToOnToggle(UnityAction call) Parameters call UnityAction"
  },
  "api/PAC.ColourPicker.GlobalColourPicker.html": {
    "href": "api/PAC.ColourPicker.GlobalColourPicker.html",
    "title": "Class GlobalColourPicker | |",
    "keywords": "Class GlobalColourPicker Namespace PAC.ColourPicker A class for the main colour picker in the program - the one that appears in the main view. public class GlobalColourPicker : MonoBehaviour Inheritance object GlobalColourPicker Properties colour The currenty-selected colour. public Color colour { get; } Property Value Color numOfColourPreviews public int numOfColourPreviews { get; } Property Value int primaryColour The current primary colour. public Color primaryColour { get; } Property Value Color secondaryColour The current secondary colour. public Color secondaryColour { get; } Property Value Color Methods GetColour(int) Gets the chosen colour at the given index: 0 - primary; 1 - secondary. public Color GetColour(int colourPreviewIndex) Parameters colourPreviewIndex int Returns Color SetColour(Color) Sets the current colour. public void SetColour(Color colour) Parameters colour Color SubscribeToOnColourChange(UnityAction) Event is invoked when the selected colour changes. public void SubscribeToOnColourChange(UnityAction call) Parameters call UnityAction"
  },
  "api/PAC.ColourPicker.HSLColourPicker.html": {
    "href": "api/PAC.ColourPicker.HSLColourPicker.html",
    "title": "Class HSLColourPicker | |",
    "keywords": "Class HSLColourPicker Namespace PAC.ColourPicker A class for the HSL colour picker. public class HSLColourPicker : MonoBehaviour Inheritance object HSLColourPicker Properties alpha public float alpha { get; } Property Value float color public Color color { get; } Property Value Color hsl public HSL hsl { get; } Property Value HSL hue public float hue { get; } Property Value float lightness public float lightness { get; } Property Value float mouseSensitivity public float mouseSensitivity { get; } Property Value float saturation public float saturation { get; } Property Value float slowSensitivityScalar The sensitivity of the mouse when holding the modifier keyboard shortcut to reduce the sensitivity. public float slowSensitivityScalar { get; } Property Value float Methods SetColour(Color) public void SetColour(Color colour) Parameters colour Color SubscribeToOnColourChange(UnityAction) Event invoked when the selected colour changes. public void SubscribeToOnColourChange(UnityAction call) Parameters call UnityAction UpdateColour() public void UpdateColour()"
  },
  "api/PAC.ColourPicker.HSLHueSaturationBox.html": {
    "href": "api/PAC.ColourPicker.HSLHueSaturationBox.html",
    "title": "Class HSLHueSaturationBox | |",
    "keywords": "Class HSLHueSaturationBox Namespace PAC.ColourPicker A class for the hue/saturation box of the HSL colour picker. public class HSLHueSaturationBox : MonoBehaviour Inheritance object HSLHueSaturationBox Properties hue public float hue { get; } Property Value float saturation public float saturation { get; } Property Value float Methods SetHue(float) public void SetHue(float hue) Parameters hue float SetSaturation(float) public void SetSaturation(float saturation) Parameters saturation float"
  },
  "api/PAC.ColourPicker.HSLLightnessSlider.html": {
    "href": "api/PAC.ColourPicker.HSLLightnessSlider.html",
    "title": "Class HSLLightnessSlider | |",
    "keywords": "Class HSLLightnessSlider Namespace PAC.ColourPicker A class for the lightness slider of the HSL colour picker. public class HSLLightnessSlider : MonoBehaviour Inheritance object HSLLightnessSlider Properties lightness public float lightness { get; } Property Value float Methods SetDisplayHueSaturation(float, float) Sets the hue/saturation to use for displaying the lightness gradient. public void SetDisplayHueSaturation(float hue, float saturation) Parameters hue float saturation float SetLightness(float) public void SetLightness(float lightness) Parameters lightness float"
  },
  "api/PAC.ColourPicker.html": {
    "href": "api/PAC.ColourPicker.html",
    "title": "Namespace PAC.ColourPicker | |",
    "keywords": "Namespace PAC.ColourPicker Classes ColourPreview A class to represent colour previews - the boxes on colour pickers that show what colours you have selected. GlobalColourPicker A class for the main colour picker in the program - the one that appears in the main view. HSLColourPicker A class for the HSL colour picker. HSLHueSaturationBox A class for the hue/saturation box of the HSL colour picker. HSLLightnessSlider A class for the lightness slider of the HSL colour picker."
  },
  "api/PAC.DataStructures.CustomStack-1.html": {
    "href": "api/PAC.DataStructures.CustomStack-1.html",
    "title": "Class CustomStack<T> | |",
    "keywords": "Class CustomStack<T> Namespace PAC.DataStructures A custom implementation of a stack to allow removal of items at a specific index. public class CustomStack<T> Type Parameters T Inheritance object CustomStack<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Count public int Count { get; } Property Value int Methods Clear() Removes all items from the stack. public void Clear() Peek() Returns the item on top of the stack. public T Peek() Returns T Pop() Removes and returns the item on top of the stack. public T Pop() Returns T Push(T) Adds the item to the top of the stack. public void Push(T item) Parameters item T Remove(T) Removes the first occurrence (starting from the top) of the item in the stack. public bool Remove(T item) Parameters item T Returns bool true if the item is successfully removed. RemoveAll(T) Removes all occurrences of the item in the stack. public void RemoveAll(T item) Parameters item T RemoveAt(int) Removes the item at the given index and returns it. public T RemoveAt(int index) Parameters index int Returns T ToArray() public T[] ToArray() Returns T[] ToList() public List<T> ToList() Returns List<T>"
  },
  "api/PAC.DataStructures.IntRect.html": {
    "href": "api/PAC.DataStructures.IntRect.html",
    "title": "Struct IntRect | |",
    "keywords": "Struct IntRect Namespace PAC.DataStructures A struct to represent a rectangular region of integer coordinates. public struct IntRect : IEnumerable Implements IEnumerable Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors IntRect(IntVector2, IntVector2) public IntRect(IntVector2 corner, IntVector2 oppositeCorner) Parameters corner IntVector2 oppositeCorner IntVector2 Properties area public int area { get; } Property Value int bottomLeft public IntVector2 bottomLeft { get; set; } Property Value IntVector2 bottomRight public IntVector2 bottomRight { get; set; } Property Value IntVector2 centre public Vector2 centre { get; } Property Value Vector2 height public int height { get; } Property Value int isSquare True if the rect is a square. public bool isSquare { get; } Property Value bool points The points in the rect, starting with the bottom row, read left to right, then the next row, etc. public readonly IntVector2[] points { get; } Property Value IntVector2[] topLeft public IntVector2 topLeft { get; set; } Property Value IntVector2 topRight public IntVector2 topRight { get; set; } Property Value IntVector2 width public int width { get; } Property Value int Methods Area(IntRect) public static int Area(IntRect rect) Parameters rect IntRect Returns int Clamp(IntRect) Shifts the given rect so it is (weakly) contained within the rect. public IntRect Clamp(IntRect intRect) Parameters intRect IntRect Returns IntRect Clamp(IntVector2) Clamps the vector component-wise so its coordinates are within the rect. public IntVector2 Clamp(IntVector2 intVector) Parameters intVector IntVector2 Returns IntVector2 Contains(IntRect) Returns true if the given rect is (weakly) contained in this rect. public bool Contains(IntRect intRect) Parameters intRect IntRect Returns bool Contains(IntVector2) Returns true if the point is in the rect. public bool Contains(IntVector2 point) Parameters point IntVector2 Returns bool Contains(int, int) Returns true if the point is in the rect. public bool Contains(int x, int y) Parameters x int y int Returns bool Contains(float, float) public bool Contains(float x, float y) Parameters x float y float Returns bool Contains(Vector2) public bool Contains(Vector2 point) Parameters point Vector2 Returns bool Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. FilterPointsInside(IntVector2[]) Removes all IntVector2s outside the rect. public IntVector2[] FilterPointsInside(IntVector2[] intVectors) Parameters intVectors IntVector2[] Returns IntVector2[] FilterPointsOutside(IntVector2[]) Removes all IntVector2s inside the rect. public IntVector2[] FilterPointsOutside(IntVector2[] intVectors) Parameters intVectors IntVector2[] Returns IntVector2[] GetEnumerator() Enumerates the points in the rect, starting with the bottom row, read left to right, then the next row, etc. public IEnumerator GetEnumerator() Returns IEnumerator GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. IsContainedIn(IntRect) Returns true if this rect is (weakly) contained in the given rect. public bool IsContainedIn(IntRect intRect) Parameters intRect IntRect Returns bool IsSquare(IntRect) Returns true if the rect is a square. public static bool IsSquare(IntRect intRect) Parameters intRect IntRect Returns bool Overlap(IntRect, IntRect) Returns true if the two rects overlap at all. public static bool Overlap(IntRect rect1, IntRect rect2) Parameters rect1 IntRect rect2 IntRect Returns bool Overlaps(IntRect) Returns true if this rect overlaps the given rect at all. public bool Overlaps(IntRect intRect) Parameters intRect IntRect Returns bool ToRect() Cast to Unity Rect. public Rect ToRect() Returns Rect ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. Operators operator +(IntRect, IntVector2) Shifts the whole rect by the given vector. public static IntRect operator +(IntRect intRect, IntVector2 intVector) Parameters intRect IntRect intVector IntVector2 Returns IntRect operator +(IntVector2, IntRect) Shifts the whole rect by the given vector. public static IntRect operator +(IntVector2 intVector, IntRect intRect) Parameters intVector IntVector2 intRect IntRect Returns IntRect operator ==(IntRect, IntRect) public static bool operator ==(IntRect rect1, IntRect rect2) Parameters rect1 IntRect rect2 IntRect Returns bool explicit operator Rect(IntRect) Cast to Unity Rect. public static explicit operator Rect(IntRect intRect) Parameters intRect IntRect Returns Rect operator !=(IntRect, IntRect) public static bool operator !=(IntRect a, IntRect b) Parameters a IntRect b IntRect Returns bool operator -(IntRect, IntVector2) Shifts the whole rect by the given vector. public static IntRect operator -(IntRect intRect, IntVector2 intVector) Parameters intRect IntRect intVector IntVector2 Returns IntRect"
  },
  "api/PAC.DataStructures.IntVector2.html": {
    "href": "api/PAC.DataStructures.IntVector2.html",
    "title": "Struct IntVector2 | |",
    "keywords": "Struct IntVector2 Namespace PAC.DataStructures A struct to represent a 2-dimensional vector with integer coordinates. public struct IntVector2 Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors IntVector2(int, int) public IntVector2(int x, int y) Parameters x int y int IntVector2(float, float) Rounds the coords towards zero. public IntVector2(float x, float y) Parameters x float y float IntVector2(Vector2) Rounds the coords towards zero. public IntVector2(Vector2 vector2) Parameters vector2 Vector2 Fields down The vector (0, -1). public static IntVector2 down Field Value IntVector2 left The vector (-1, 0). public static IntVector2 left Field Value IntVector2 one The vector (1, 1). public static IntVector2 one Field Value IntVector2 right The vector (1, 0). public static IntVector2 right Field Value IntVector2 up The vector (0, 1). public static IntVector2 up Field Value IntVector2 x public int x Field Value int y public int y Field Value int zero The vector (0, 0). public static IntVector2 zero Field Value IntVector2 Properties magnitude public float magnitude { get; } Property Value float squaredMagnitude public float squaredMagnitude { get; } Property Value float Methods CeilToIntVector2(Vector2) Ceils component-wise. public static IntVector2 CeilToIntVector2(Vector2 vector2) Parameters vector2 Vector2 Returns IntVector2 Distance(IntVector2, IntVector2) Computes the Euclidean distance between the vectors. public static float Distance(IntVector2 a, IntVector2 b) Parameters a IntVector2 b IntVector2 Returns float Dot(IntVector2, IntVector2) Computes the dot product. public static int Dot(IntVector2 a, IntVector2 b) Parameters a IntVector2 b IntVector2 Returns int Equals(object) Indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. FloorToIntVector2(Vector2) Floors component-wise. public static IntVector2 FloorToIntVector2(Vector2 vector2) Parameters vector2 Vector2 Returns IntVector2 GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. Magnitude(IntVector2) public static float Magnitude(IntVector2 a) Parameters a IntVector2 Returns float Max(IntVector2, IntVector2) Takes the maximum of a and b component-wise. public static IntVector2 Max(IntVector2 a, IntVector2 b) Parameters a IntVector2 b IntVector2 Returns IntVector2 Max(params IntVector2[]) Takes the maximum of the vectors component-wise. public static IntVector2 Max(params IntVector2[] intVectors) Parameters intVectors IntVector2[] Returns IntVector2 Min(IntVector2, IntVector2) Takes the minimum of a and b component-wise. public static IntVector2 Min(IntVector2 a, IntVector2 b) Parameters a IntVector2 b IntVector2 Returns IntVector2 Min(params IntVector2[]) Takes the minimum of the vectors component-wise. public static IntVector2 Min(params IntVector2[] intVectors) Parameters intVectors IntVector2[] Returns IntVector2 RoundToIntVector2(Vector2) Rounds component-wise. public static IntVector2 RoundToIntVector2(Vector2 vector2) Parameters vector2 Vector2 Returns IntVector2 SqrDistance(IntVector2, IntVector2) public static float SqrDistance(IntVector2 a, IntVector2 b) Parameters a IntVector2 b IntVector2 Returns float SqrMagnitude(IntVector2) public static float SqrMagnitude(IntVector2 a) Parameters a IntVector2 Returns float ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name. ToVector2() Cast to Unity Vector2. public Vector2 ToVector2() Returns Vector2 ToVector3() Cast to Unity Vector3, with a 0 in the z-coord. public Vector3 ToVector3() Returns Vector3 Operators operator +(IntVector2, IntVector2) Adds component-wise. public static IntVector2 operator +(IntVector2 a, IntVector2 b) Parameters a IntVector2 b IntVector2 Returns IntVector2 operator +(IntVector2, IntVector2[]) Adds the vector to each element of the array. public static IntVector2[] operator +(IntVector2 intVector, IntVector2[] intVectorArray) Parameters intVector IntVector2 intVectorArray IntVector2[] Returns IntVector2[] operator +(IntVector2[], IntVector2) Adds the vector to each element of the array. public static IntVector2[] operator +(IntVector2[] intVectorArray, IntVector2 intVector) Parameters intVectorArray IntVector2[] intVector IntVector2 Returns IntVector2[] operator /(IntVector2, IntVector2) Divides (integer division) component-wise. public static IntVector2 operator /(IntVector2 a, IntVector2 b) Parameters a IntVector2 b IntVector2 Returns IntVector2 operator /(IntVector2, IntVector2[]) Divides the vector by each element of the array. public static IntVector2[] operator /(IntVector2 intVector, IntVector2[] intVectorArray) Parameters intVector IntVector2 intVectorArray IntVector2[] Returns IntVector2[] operator /(IntVector2, int) Divides (integer division) component-wise. public static IntVector2 operator /(IntVector2 vector, int scalar) Parameters vector IntVector2 scalar int Returns IntVector2 operator /(IntVector2[], IntVector2) Divides each element of the array by the vector. public static IntVector2[] operator /(IntVector2[] intVectorArray, IntVector2 intVector) Parameters intVectorArray IntVector2[] intVector IntVector2 Returns IntVector2[] operator ==(IntVector2, IntVector2) public static bool operator ==(IntVector2 a, IntVector2 b) Parameters a IntVector2 b IntVector2 Returns bool operator >(IntVector2, IntVector2) Compares component-wise. public static bool operator >(IntVector2 a, IntVector2 b) Parameters a IntVector2 b IntVector2 Returns bool operator >=(IntVector2, IntVector2) Compares component-wise. public static bool operator >=(IntVector2 a, IntVector2 b) Parameters a IntVector2 b IntVector2 Returns bool implicit operator Vector2(IntVector2) Cast to Unity Vector2. public static implicit operator Vector2(IntVector2 intVector) Parameters intVector IntVector2 Returns Vector2 implicit operator Vector3(IntVector2) Cast to Unity Vector3, with a 0 in the z-coord. public static implicit operator Vector3(IntVector2 intVector) Parameters intVector IntVector2 Returns Vector3 operator !=(IntVector2, IntVector2) public static bool operator !=(IntVector2 a, IntVector2 b) Parameters a IntVector2 b IntVector2 Returns bool operator <(IntVector2, IntVector2) Compares component-wise. public static bool operator <(IntVector2 a, IntVector2 b) Parameters a IntVector2 b IntVector2 Returns bool operator <=(IntVector2, IntVector2) Compares component-wise. public static bool operator <=(IntVector2 a, IntVector2 b) Parameters a IntVector2 b IntVector2 Returns bool operator *(IntVector2, IntVector2) Multiplies component-wise. public static IntVector2 operator *(IntVector2 a, IntVector2 b) Parameters a IntVector2 b IntVector2 Returns IntVector2 operator *(IntVector2, IntVector2[]) Multiplies each element of the array by the vector. public static IntVector2[] operator *(IntVector2 intVector, IntVector2[] intVectorArray) Parameters intVector IntVector2 intVectorArray IntVector2[] Returns IntVector2[] operator *(IntVector2, int) Multiplies component-wise. public static IntVector2 operator *(IntVector2 vector, int scalar) Parameters vector IntVector2 scalar int Returns IntVector2 operator *(IntVector2[], IntVector2) Multiplies each element of the array by the vector. public static IntVector2[] operator *(IntVector2[] intVectorArray, IntVector2 intVector) Parameters intVectorArray IntVector2[] intVector IntVector2 Returns IntVector2[] operator *(int, IntVector2) Multiplies component-wise. public static IntVector2 operator *(int scalar, IntVector2 vector) Parameters scalar int vector IntVector2 Returns IntVector2 operator -(IntVector2, IntVector2) Subtracts component-wise. public static IntVector2 operator -(IntVector2 a, IntVector2 b) Parameters a IntVector2 b IntVector2 Returns IntVector2 operator -(IntVector2, IntVector2[]) Subtracts each element of the array from the vector. public static IntVector2[] operator -(IntVector2 intVector, IntVector2[] intVectorArray) Parameters intVector IntVector2 intVectorArray IntVector2[] Returns IntVector2[] operator -(IntVector2[], IntVector2) Subtracts the vector from each element of the array. public static IntVector2[] operator -(IntVector2[] intVectorArray, IntVector2 intVector) Parameters intVectorArray IntVector2[] intVector IntVector2 Returns IntVector2[] operator -(IntVector2) Negates component-wise. public static IntVector2 operator -(IntVector2 a) Parameters a IntVector2 Returns IntVector2"
  },
  "api/PAC.DataStructures.html": {
    "href": "api/PAC.DataStructures.html",
    "title": "Namespace PAC.DataStructures | |",
    "keywords": "Namespace PAC.DataStructures Classes CustomStack<T> A custom implementation of a stack to allow removal of items at a specific index. Structs IntRect A struct to represent a rectangular region of integer coordinates. IntVector2 A struct to represent a 2-dimensional vector with integer coordinates."
  },
  "api/PAC.Drawing.BrushShape.html": {
    "href": "api/PAC.Drawing.BrushShape.html",
    "title": "Enum BrushShape | |",
    "keywords": "Enum BrushShape Namespace PAC.Drawing public enum BrushShape Fields Circle = 0 Custom = -1 Diamond = 2 Square = 1"
  },
  "api/PAC.Drawing.DrawingArea.html": {
    "href": "api/PAC.Drawing.DrawingArea.html",
    "title": "Class DrawingArea | |",
    "keywords": "Class DrawingArea Namespace PAC.Drawing public class DrawingArea : MonoBehaviour Inheritance object DrawingArea Properties file public File file { get; } Property Value File hasSelection public bool hasSelection { get; } Property Value bool pixelsPerUnit public float pixelsPerUnit { get; } Property Value float scrollSpeed public float scrollSpeed { get; } Property Value float selectionMask public Texture2D selectionMask { get; } Property Value Texture2D selectionRect public IntRect selectionRect { get; } Property Value IntRect zoomScrollSpeed public float zoomScrollSpeed { get; } Property Value float Methods DeleteSelection() public void DeleteSelection() PixelsToWorldPos(IntVector2) Turns the pixel coordinate in the drawing into a world coordinate (the resulting coord is the centre of the pixel in the world). public Vector2 PixelsToWorldPos(IntVector2 pixel) Parameters pixel IntVector2 Returns Vector2 PixelsToWorldPos(int, int) Turns the pixel coordinate in the drawing into a world coordinate (the resulting coord is the centre of the pixel in the world). public Vector2 PixelsToWorldPos(int x, int y) Parameters x int y int Returns Vector2 PixelsToWorldPos(float, float) Turns the pixel coordinate in the drawing into a world coordinate. public Vector2 PixelsToWorldPos(float x, float y) Parameters x float y float Returns Vector2 PixelsToWorldPos(Vector2) Turns the pixel coordinate in the drawing into a world coordinate. public Vector2 PixelsToWorldPos(Vector2 pixel) Parameters pixel Vector2 Returns Vector2 PreviewGradient(IntVector2, IntVector2, Color, Color, GradientMode) public void PreviewGradient(IntVector2 start, IntVector2 end, Color startColour, Color endColour, GradientMode gradientMode) Parameters start IntVector2 end IntVector2 startColour Color endColour Color gradientMode GradientMode UpdateDrawing() Makes any changes to the file visible on the drawing area. public void UpdateDrawing() WorldPosToPixel(Vector2) Turns the world coord into a pixel coord in the drawing. public IntVector2 WorldPosToPixel(Vector2 worldPos) Parameters worldPos Vector2 Returns IntVector2 WorldPosToPixels(float, float) Turns the world coord into a pixel coord in the drawing. public IntVector2 WorldPosToPixels(float x, float y) Parameters x float y float Returns IntVector2"
  },
  "api/PAC.Drawing.GradientMode.html": {
    "href": "api/PAC.Drawing.GradientMode.html",
    "title": "Enum GradientMode | |",
    "keywords": "Enum GradientMode Namespace PAC.Drawing public enum GradientMode Fields Linear = 0 Radial = 1"
  },
  "api/PAC.Drawing.GridManager.html": {
    "href": "api/PAC.Drawing.GridManager.html",
    "title": "Class GridManager | |",
    "keywords": "Class GridManager Namespace PAC.Drawing Handles drawing a grid over the image when the grid is enabled. public class GridManager : MonoBehaviour Inheritance object GridManager Fields lineThickness public float lineThickness Field Value float Properties height public int height { get; } Property Value int on public bool on { get; } Property Value bool width public int width { get; } Property Value int xOffset public int xOffset { get; } Property Value int yOffset public int yOffset { get; } Property Value int Methods SetGrid(int, int, int, int) public void SetGrid(int width, int height, int xOffset, int yOffset) Parameters width int height int xOffset int yOffset int SetOnOff(bool) public void SetOnOff(bool on) Parameters on bool SetOnOffNoDisplayUpdate(bool) public void SetOnOffNoDisplayUpdate(bool on) Parameters on bool"
  },
  "api/PAC.Drawing.SelectionMode.html": {
    "href": "api/PAC.Drawing.SelectionMode.html",
    "title": "Enum SelectionMode | |",
    "keywords": "Enum SelectionMode Namespace PAC.Drawing public enum SelectionMode Fields Draw = 0 Ellipse = 11 MagicWand = 1 Rectangle = 10"
  },
  "api/PAC.Drawing.Shape.html": {
    "href": "api/PAC.Drawing.Shape.html",
    "title": "Enum Shape | |",
    "keywords": "Enum Shape Namespace PAC.Drawing public enum Shape Fields Ellipse = 1 Rectangle = 0 Triangle = 2"
  },
  "api/PAC.Drawing.Shapes.html": {
    "href": "api/PAC.Drawing.Shapes.html",
    "title": "Class Shapes | |",
    "keywords": "Class Shapes Namespace PAC.Drawing A class to define how different shapes are drawn. public static class Shapes Inheritance object Shapes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Circle(int, int, IntVector2, IntVector2, Color, bool, bool) public static Texture2D Circle(int texWidth, int texHeight, IntVector2 start, IntVector2 end, Color colour, bool filled, bool stayWithinImageBounds) Parameters texWidth int texHeight int start IntVector2 end IntVector2 colour Color filled bool stayWithinImageBounds bool Returns Texture2D Diamond(int, int, IntVector2, IntVector2, Color, bool) public static Texture2D Diamond(int texWidth, int texHeight, IntVector2 start, IntVector2 end, Color colour, bool filled) Parameters texWidth int texHeight int start IntVector2 end IntVector2 colour Color filled bool Returns Texture2D Ellipse(int, int, IntVector2, IntVector2, Color, bool) public static Texture2D Ellipse(int texWidth, int texHeight, IntVector2 start, IntVector2 end, Color colour, bool filled) Parameters texWidth int texHeight int start IntVector2 end IntVector2 colour Color filled bool Returns Texture2D Gradient(int, int, IntVector2, IntVector2, Color, Color, GradientMode) public static Texture2D Gradient(int texWidth, int texHeight, IntVector2 start, IntVector2 end, Color startColour, Color endColour, GradientMode gradientMode) Parameters texWidth int texHeight int start IntVector2 end IntVector2 startColour Color endColour Color gradientMode GradientMode Returns Texture2D GradientLinear(int, int, IntVector2, IntVector2, Color, Color) public static Texture2D GradientLinear(int texWidth, int texHeight, IntVector2 start, IntVector2 end, Color startColour, Color endColour) Parameters texWidth int texHeight int start IntVector2 end IntVector2 startColour Color endColour Color Returns Texture2D GradientRadial(int, int, IntVector2, IntVector2, Color, Color) public static Texture2D GradientRadial(int texWidth, int texHeight, IntVector2 start, IntVector2 end, Color startColour, Color endColour) Parameters texWidth int texHeight int start IntVector2 end IntVector2 startColour Color endColour Color Returns Texture2D IsoBox(int, int, IntVector2, IntVector2, IntVector2, Color, bool) public static Texture2D IsoBox(int texWidth, int texHeight, IntVector2 baseStart, IntVector2 baseEnd, IntVector2 heightEnd, Color colour, bool filled) Parameters texWidth int texHeight int baseStart IntVector2 baseEnd IntVector2 heightEnd IntVector2 colour Color filled bool Returns Texture2D IsoRectangle(int, int, IntVector2, IntVector2, Color, bool) public static Texture2D IsoRectangle(int texWidth, int texHeight, IntVector2 start, IntVector2 end, Color colour, bool filled) Parameters texWidth int texHeight int start IntVector2 end IntVector2 colour Color filled bool Returns Texture2D Line(int, int, IntVector2, IntVector2, Color) public static Texture2D Line(int texWidth, int texHeight, IntVector2 start, IntVector2 end, Color colour) Parameters texWidth int texHeight int start IntVector2 end IntVector2 colour Color Returns Texture2D LineCoords(IntVector2, IntVector2) Gets the coords of a pixel-perfect line between two points, ordered from start to end. public static IntVector2[] LineCoords(IntVector2 start, IntVector2 end) Parameters start IntVector2 end IntVector2 Returns IntVector2[] Rectangle(int, int, IntVector2, IntVector2, Color, bool) public static Texture2D Rectangle(int texWidth, int texHeight, IntVector2 start, IntVector2 end, Color colour, bool filled) Parameters texWidth int texHeight int start IntVector2 end IntVector2 colour Color filled bool Returns Texture2D RightTriangle(int, int, IntVector2, IntVector2, Color, bool, bool) public static Texture2D RightTriangle(int texWidth, int texHeight, IntVector2 start, IntVector2 end, Color colour, bool rightAngleOnBottom, bool filled) Parameters texWidth int texHeight int start IntVector2 end IntVector2 colour Color rightAngleOnBottom bool filled bool Returns Texture2D SnapEndCoordToSquare(IntVector2, IntVector2) Snaps the end coord so that the rect it forms with the start coord is a square. public static IntVector2 SnapEndCoordToSquare(IntVector2 start, IntVector2 end) Parameters start IntVector2 end IntVector2 Returns IntVector2 SnapEndCoordToSquare(int, int, IntVector2, IntVector2, bool) Snaps the end coord so that the rect it forms with the start coord is a square. public static IntVector2 SnapEndCoordToSquare(int texWidth, int texHeight, IntVector2 start, IntVector2 end, bool stayWithinImageBounds) Parameters texWidth int texHeight int start IntVector2 end IntVector2 stayWithinImageBounds bool Returns IntVector2 Square(int, int, IntVector2, IntVector2, Color, bool, bool) public static Texture2D Square(int texWidth, int texHeight, IntVector2 start, IntVector2 end, Color colour, bool filled, bool stayWithinImageBounds) Parameters texWidth int texHeight int start IntVector2 end IntVector2 colour Color filled bool stayWithinImageBounds bool Returns Texture2D"
  },
  "api/PAC.Drawing.Tool.html": {
    "href": "api/PAC.Drawing.Tool.html",
    "title": "Class Tool | |",
    "keywords": "Class Tool Namespace PAC.Drawing Defines the tools available to use and their properties. public class Tool Inheritance object Tool Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Brush public static Tool Brush Field Value Tool EyeDropper public static Tool EyeDropper Field Value Tool Fill public static Tool Fill Field Value Tool GlobalEyeDropper public static Tool GlobalEyeDropper Field Value Tool Gradient public static Tool Gradient Field Value Tool IsoBox public static Tool IsoBox Field Value Tool Line public static Tool Line Field Value Tool Move public static Tool Move Field Value Tool None public static Tool None Field Value Tool Pencil public static Tool Pencil Field Value Tool Rubber public static Tool Rubber Field Value Tool Selection public static Tool Selection Field Value Tool Shape public static Tool Shape Field Value Tool canBeCancelled public bool canBeCancelled Field Value bool tools All implemented tools. public static readonly Tool[] tools Field Value Tool[] Properties finishMode What action causes a use of the tool to be ended. public MouseTargetDeselectMode finishMode { get; } Property Value MouseTargetDeselectMode name public string name { get; } Property Value string showBrushBorder Whether the outline of the brush shape should be shown. public bool showBrushBorder { get; } Property Value bool useMovementInterpolation When the mouse position jumps between frames: true - the tool should be applied to each coord the mouse moved through; false - just applied to the ending coord. public bool useMovementInterpolation { get; } Property Value bool Methods StringToTool(string) Gets the tool with that name. public static Tool StringToTool(string toolName) Parameters toolName string Returns Tool"
  },
  "api/PAC.Drawing.Toolbar.html": {
    "href": "api/PAC.Drawing.Toolbar.html",
    "title": "Class Toolbar | |",
    "keywords": "Class Toolbar Namespace PAC.Drawing Handles selecting tools, brush size, etc. public class Toolbar : MonoBehaviour Inheritance object Toolbar Properties brushPixels The pixels, given relative to the position of the mouse, that will be affected by the current brush. public IntVector2[] brushPixels { get; } Property Value IntVector2[] brushPixelsHeight public int brushPixelsHeight { get; } Property Value int brushPixelsIsEmpty public bool brushPixelsIsEmpty { get; } Property Value bool brushPixelsIsSingleCentralPixel public bool brushPixelsIsSingleCentralPixel { get; } Property Value bool brushPixelsWidth public int brushPixelsWidth { get; } Property Value int brushShape public BrushShape brushShape { get; set; } Property Value BrushShape brushSize public int brushSize { get; } Property Value int brushTexture public Texture2D brushTexture { get; } Property Value Texture2D gradientMode public GradientMode gradientMode { get; } Property Value GradientMode lineSmoothingTime The amount of time you have to draw a new pixel in for an old one to be potentially smoothed. public float lineSmoothingTime { get; } Property Value float maxBrushSize public int maxBrushSize { get; } Property Value int previousTool public Tool previousTool { get; } Property Value Tool selectedTool public Tool selectedTool { get; } Property Value Tool selectionMode public SelectionMode selectionMode { get; } Property Value SelectionMode shapeToolShape public Shape shapeToolShape { get; } Property Value Shape Methods DeselectGlobalEyeDropper() public void DeselectGlobalEyeDropper() LoadCustomBrush(Texture2D) Turns the given texture into a brush shape by taking any pixels with non-zero alpha. public void LoadCustomBrush(Texture2D brushShape) Parameters brushShape Texture2D SelectGlobalEyeDropper() public void SelectGlobalEyeDropper() SetBrushSize(int) public bool SetBrushSize(int brushSize) Parameters brushSize int Returns bool SubscribeToOnBrushPixelsChanged(UnityAction) Event invoked when brush pixels change. public void SubscribeToOnBrushPixelsChanged(UnityAction call) Parameters call UnityAction SubscribeToOnBrushSizeChanged(UnityAction) Event invoked when brush size changes. public void SubscribeToOnBrushSizeChanged(UnityAction call) Parameters call UnityAction SubscribeToOnToolChanged(UnityAction) Event invoked when selected tool changes. public void SubscribeToOnToolChanged(UnityAction call) Parameters call UnityAction"
  },
  "api/PAC.Drawing.Tools.html": {
    "href": "api/PAC.Drawing.Tools.html",
    "title": "Class Tools | |",
    "keywords": "Class Tools Namespace PAC.Drawing Defines how different tools act. I may rework this to be more like the BlendMode class where each Tool instance defines how it acts. Then to use a tool you would just do tool.Use(pixel) or similar. public static class Tools Inheritance object Tools Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods PencilLineSmoothing(File, int, int, IntVector2[], IntVector2[], Color) Smooth the meeting point of the two lines (given as coords) so it is pixel-perfect - i.e. no hard 90-degree corner. public static bool PencilLineSmoothing(File file, int layer, int frame, IntVector2[] line, IntVector2[] previousLine, Color colourLineMeetingPoint) Parameters file File layer int frame int line IntVector2[] previousLine IntVector2[] colourLineMeetingPoint Color Returns bool UseBrush(File, int, int, IntVector2, IntVector2[], Color) public static void UseBrush(File file, int layer, int frame, IntVector2 pixel, IntVector2[] brushBorderMaskPixels, Color colour) Parameters file File layer int frame int pixel IntVector2 brushBorderMaskPixels IntVector2[] colour Color UseBrush(File, int, int, int, int, IntVector2[], Color) public static void UseBrush(File file, int layer, int frame, int x, int y, IntVector2[] brushBorderMaskPixels, Color colour) Parameters file File layer int frame int x int y int brushBorderMaskPixels IntVector2[] colour Color UseCircle(File, int, int, IntVector2, IntVector2, Color, bool, bool) public static void UseCircle(File file, int layer, int frame, IntVector2 start, IntVector2 end, Color colour, bool filled, bool stayWithinImageBounds) Parameters file File layer int frame int start IntVector2 end IntVector2 colour Color filled bool stayWithinImageBounds bool UseEllipse(File, int, int, IntVector2, IntVector2, Color, bool) public static void UseEllipse(File file, int layer, int frame, IntVector2 start, IntVector2 end, Color colour, bool filled) Parameters file File layer int frame int start IntVector2 end IntVector2 colour Color filled bool UseEyeDropper(File, int, int, IntVector2) public static Color UseEyeDropper(File file, int layer, int frame, IntVector2 pixel) Parameters file File layer int frame int pixel IntVector2 Returns Color UseEyeDropper(File, int, int, int, int) public static Color UseEyeDropper(File file, int layer, int frame, int x, int y) Parameters file File layer int frame int x int y int Returns Color UseFill(File, int, int, IntVector2, Color, int) public static void UseFill(File file, int layer, int frame, IntVector2 pixel, Color colour, int maxNumOfIterations = 100000) Parameters file File layer int frame int pixel IntVector2 colour Color maxNumOfIterations int UseFill(File, int, int, int, int, Color, int) public static void UseFill(File file, int layer, int frame, int x, int y, Color colour, int maxNumOfIterations = 100000) Parameters file File layer int frame int x int y int colour Color maxNumOfIterations int UseGradient(File, int, int, IntVector2, IntVector2, Color, Color, GradientMode) public static void UseGradient(File file, int layer, int frame, IntVector2 start, IntVector2 end, Color startColour, Color endColour, GradientMode gradientMode) Parameters file File layer int frame int start IntVector2 end IntVector2 startColour Color endColour Color gradientMode GradientMode UseGradient(File, int, int, IntVector2, IntVector2, Color, Color, GradientMode, IntVector2[]) public static void UseGradient(File file, int layer, int frame, IntVector2 start, IntVector2 end, Color startColour, Color endColour, GradientMode gradientMode, IntVector2[] mask) Parameters file File layer int frame int start IntVector2 end IntVector2 startColour Color endColour Color gradientMode GradientMode mask IntVector2[] UseGradient(File, int, int, IntVector2, IntVector2, Color, Color, GradientMode, Texture2D) public static void UseGradient(File file, int layer, int frame, IntVector2 start, IntVector2 end, Color startColour, Color endColour, GradientMode gradientMode, Texture2D mask) Parameters file File layer int frame int start IntVector2 end IntVector2 startColour Color endColour Color gradientMode GradientMode mask Texture2D UseGradientLinear(File, int, int, IntVector2, IntVector2, Color, Color) public static void UseGradientLinear(File file, int layer, int frame, IntVector2 start, IntVector2 end, Color startColour, Color endColour) Parameters file File layer int frame int start IntVector2 end IntVector2 startColour Color endColour Color UseGradientLinear(File, int, int, IntVector2, IntVector2, Color, Color, IntVector2[]) public static void UseGradientLinear(File file, int layer, int frame, IntVector2 start, IntVector2 end, Color startColour, Color endColour, IntVector2[] mask) Parameters file File layer int frame int start IntVector2 end IntVector2 startColour Color endColour Color mask IntVector2[] UseGradientLinear(File, int, int, IntVector2, IntVector2, Color, Color, Texture2D) public static void UseGradientLinear(File file, int layer, int frame, IntVector2 start, IntVector2 end, Color startColour, Color endColour, Texture2D mask) Parameters file File layer int frame int start IntVector2 end IntVector2 startColour Color endColour Color mask Texture2D UseGradientRadial(File, int, int, IntVector2, IntVector2, Color, Color) public static void UseGradientRadial(File file, int layer, int frame, IntVector2 start, IntVector2 end, Color startColour, Color endColour) Parameters file File layer int frame int start IntVector2 end IntVector2 startColour Color endColour Color UseGradientRadial(File, int, int, IntVector2, IntVector2, Color, Color, IntVector2[]) public static void UseGradientRadial(File file, int layer, int frame, IntVector2 start, IntVector2 end, Color startColour, Color endColour, IntVector2[] mask) Parameters file File layer int frame int start IntVector2 end IntVector2 startColour Color endColour Color mask IntVector2[] UseGradientRadial(File, int, int, IntVector2, IntVector2, Color, Color, Texture2D) public static void UseGradientRadial(File file, int layer, int frame, IntVector2 start, IntVector2 end, Color startColour, Color endColour, Texture2D mask) Parameters file File layer int frame int start IntVector2 end IntVector2 startColour Color endColour Color mask Texture2D UseIsoBox(File, int, int, IntVector2, IntVector2, IntVector2, Color, bool) public static void UseIsoBox(File file, int layer, int frame, IntVector2 baseStart, IntVector2 baseEnd, IntVector2 heightEnd, Color colour, bool filled) Parameters file File layer int frame int baseStart IntVector2 baseEnd IntVector2 heightEnd IntVector2 colour Color filled bool UseIsoRectangle(File, int, int, IntVector2, IntVector2, Color, bool) public static void UseIsoRectangle(File file, int layer, int frame, IntVector2 start, IntVector2 end, Color colour, bool filled) Parameters file File layer int frame int start IntVector2 end IntVector2 colour Color filled bool UseLine(File, int, int, IntVector2, IntVector2, Color) public static void UseLine(File file, int layer, int frame, IntVector2 start, IntVector2 end, Color colour) Parameters file File layer int frame int start IntVector2 end IntVector2 colour Color UsePencil(File, int, int, IntVector2, Color) public static void UsePencil(File file, int layer, int frame, IntVector2 pixel, Color colour) Parameters file File layer int frame int pixel IntVector2 colour Color UsePencil(File, int, int, int, int, Color) public static void UsePencil(File file, int layer, int frame, int x, int y, Color colour) Parameters file File layer int frame int x int y int colour Color UseRectangle(File, int, int, IntVector2, IntVector2, Color, bool) public static void UseRectangle(File file, int layer, int frame, IntVector2 start, IntVector2 end, Color colour, bool filled) Parameters file File layer int frame int start IntVector2 end IntVector2 colour Color filled bool UseRightTriangle(File, int, int, IntVector2, IntVector2, Color, bool, bool) public static void UseRightTriangle(File file, int layer, int frame, IntVector2 start, IntVector2 end, Color colour, bool rightAngleOnBottom, bool filled) Parameters file File layer int frame int start IntVector2 end IntVector2 colour Color rightAngleOnBottom bool filled bool UseRubber(File, int, int, IntVector2) public static void UseRubber(File file, int layer, int frame, IntVector2 pixel) Parameters file File layer int frame int pixel IntVector2 UseRubber(File, int, int, IntVector2, IntVector2[]) public static void UseRubber(File file, int layer, int frame, IntVector2 pixel, IntVector2[] brushBorderMaskPixels) Parameters file File layer int frame int pixel IntVector2 brushBorderMaskPixels IntVector2[] UseRubber(File, int, int, int, int) public static void UseRubber(File file, int layer, int frame, int x, int y) Parameters file File layer int frame int x int y int UseRubber(File, int, int, int, int, IntVector2[]) public static void UseRubber(File file, int layer, int frame, int x, int y, IntVector2[] brushBorderMaskPixels) Parameters file File layer int frame int x int y int brushBorderMaskPixels IntVector2[] UseSquare(File, int, int, IntVector2, IntVector2, Color, bool, bool) public static void UseSquare(File file, int layer, int frame, IntVector2 start, IntVector2 end, Color colour, bool filled, bool stayWithinImageBounds) Parameters file File layer int frame int start IntVector2 end IntVector2 colour Color filled bool stayWithinImageBounds bool"
  },
  "api/PAC.Drawing.html": {
    "href": "api/PAC.Drawing.html",
    "title": "Namespace PAC.Drawing | |",
    "keywords": "Namespace PAC.Drawing Classes DrawingArea GridManager Handles drawing a grid over the image when the grid is enabled. Shapes A class to define how different shapes are drawn. Tool Defines the tools available to use and their properties. Toolbar Handles selecting tools, brush size, etc. Tools Defines how different tools act. I may rework this to be more like the BlendMode class where each Tool instance defines how it acts. Then to use a tool you would just do tool.Use(pixel) or similar. Enums BrushShape GradientMode SelectionMode Shape"
  },
  "api/PAC.EffectPanels.BlurPanel.html": {
    "href": "api/PAC.EffectPanels.BlurPanel.html",
    "title": "Class BlurPanel | |",
    "keywords": "Class BlurPanel Namespace PAC.EffectPanels A panel that blurs the view behind it. public class BlurPanel : MonoBehaviour Inheritance object BlurPanel Properties blurEnabled public bool blurEnabled { get; } Property Value bool Methods EnableDisable(bool) public void EnableDisable(bool enabled) Parameters enabled bool"
  },
  "api/PAC.EffectPanels.EffectPanel.html": {
    "href": "api/PAC.EffectPanels.EffectPanel.html",
    "title": "Class EffectPanel | |",
    "keywords": "Class EffectPanel Namespace PAC.EffectPanels A class to represent a type of panel that applies an effect to the view behind it - e.g. a blur panel or a pixellate panel. public class EffectPanel : MonoBehaviour Inheritance object EffectPanel Methods EnableDisable(bool) public void EnableDisable(bool enabled) Parameters enabled bool"
  },
  "api/PAC.EffectPanels.PixellatePanel.html": {
    "href": "api/PAC.EffectPanels.PixellatePanel.html",
    "title": "Class PixellatePanel | |",
    "keywords": "Class PixellatePanel Namespace PAC.EffectPanels A panel that pixellates the view behind it. public class PixellatePanel : MonoBehaviour Inheritance object PixellatePanel Properties pixellateOn public bool pixellateOn { get; } Property Value bool"
  },
  "api/PAC.EffectPanels.html": {
    "href": "api/PAC.EffectPanels.html",
    "title": "Namespace PAC.EffectPanels | |",
    "keywords": "Namespace PAC.EffectPanels Classes BlurPanel A panel that blurs the view behind it. EffectPanel A class to represent a type of panel that applies an effect to the view behind it - e.g. a blur panel or a pixellate panel. PixellatePanel A panel that pixellates the view behind it."
  },
  "api/PAC.Files.File.html": {
    "href": "api/PAC.Files.File.html",
    "title": "Class File | |",
    "keywords": "Class File Namespace PAC.Files A class to represent a single Pixel Art Creator file. public class File : IJSONable Inheritance object File Implements IJSONable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors File(File) Creates a deep copy of the File. public File(File file) Parameters file File File(string, int, int) Creates a blank file. public File(string name, int width, int height) Parameters name string width int height int Properties height public int height { get; } Property Value int keyFrameIndices The frame indices at which some layer has a key frame. public int[] keyFrameIndices { get; } Property Value int[] layers public List<Layer> layers { get; } Property Value List<Layer> liveRender public Texture2D liveRender { get; } Property Value Texture2D mostRecentSavePath public string mostRecentSavePath { get; } Property Value string name public string name { get; set; } Property Value string numOfFrames The number of frames the animation lasts for. public int numOfFrames { get; set; } Property Value int rect public IntRect rect { get; } Property Value IntRect savedSinceLastEdit public bool savedSinceLastEdit { get; } Property Value bool tiles All the tile objects currently in the file. public Tile[] tiles { get; } Property Value Tile[] width public int width { get; } Property Value int Methods AddLayer(Layer) Adds the given layer on top of all existing layers. public void AddLayer(Layer layer) Parameters layer Layer AddLayer(Layer, int) Adds the given layer at the given index. Throws an error if the layer is already in the file. public void AddLayer(Layer layer, int index) Parameters layer Layer index int AddLayers(params Layer[]) Adds the layers on top of all existing layers, retaining the order they have in the array - i.e. first layer in the array is the one on top, etc. public void AddLayers(params Layer[] layers) Parameters layers Layer[] AddNormalLayer() Adds a blank normal layer on top of all existing layers. public void AddNormalLayer() AddNormalLayer(int) Adds a blank normal layer at the given index. public void AddNormalLayer(int index) Parameters index int AddNormalLayer(Texture2D, int) Adds a normal layer at the given index with the given texture. public void AddNormalLayer(Texture2D texture, int index = 0) Parameters texture Texture2D index int AddTile(File, IntVector2, int) Adds the given file as a tile. public void AddTile(File file, IntVector2 bottomLeft, int lowestLayer) Parameters file File bottomLeft IntVector2 lowestLayer int AddTile(Tile) Adds the tile to the file. public void AddTile(Tile tile) Parameters tile Tile AddTileLayer() Adds a blank tile layer on top of all existing layers. public void AddTileLayer() AddTileLayer(int) Adds a blank tile layer at the given index. public void AddTileLayer(int index) Parameters index int ContainsTile(Tile) public bool ContainsTile(Tile tile) Parameters tile Tile Returns bool DeepCopy() Creates a deep copy of the File. public File DeepCopy() Returns File ExportAnimation(string) Exports each frame of the animation and puts them in a folder. The file path specifies the folder name and location, and the file extension to export each frame as. public bool ExportAnimation(string filePath) Parameters filePath string Returns bool ExportFrame(int, string) Exports the frame to the file path, according to the file extension. public bool ExportFrame(int frame, string filePath) Parameters frame int filePath string Returns bool Extend(int, int, int, int) Extends the dimensions of the file in each direction by the given amounts. public void Extend(int left, int right, int up, int down) Parameters left int right int up int down int Flip(FlipDirection) Flips the file. public void Flip(FlipDirection direction) Parameters direction FlipDirection FromJSON(JSON) Gets a file from its JSON representation. public static File FromJSON(JSON json) Parameters json JSON Returns File ImportImage(string) Adds the image at the file path as a new layer. public void ImportImage(string filePath) Parameters filePath string ImportLayers(params Layer[]) Adds deep copies of the layers on top of all existing layers, retaining the order they have in the array - i.e. first layer in the array is the one on top, etc. public void ImportLayers(params Layer[] layers) Parameters layers Layer[] IndexOfLayer(Layer) Gets the index of the layer within the file. public int IndexOfLayer(Layer layer) Parameters layer Layer Returns int The index of the layer, or -1 if the layer is not in the file. IsBlank() Returns true if and only if all pixels on all layers are completely transparent. public bool IsBlank() Returns bool MoveLayer(Layer, int) Moves the layer to indexToMoveTo. Throws an error if the layer is not in the file. public void MoveLayer(Layer layerToMove, int indexToMoveTo) Parameters layerToMove Layer indexToMoveTo int MoveLayer(int, int) Moves the layer at indexToMove to indexToMoveTo. public void MoveLayer(int layerToMove, int indexToMoveTo) Parameters layerToMove int indexToMoveTo int OpenFile(string) Opens the file according to its file extension. public static File OpenFile(string filePath) Parameters filePath string Returns File OpenImage(string) Opens the file at the file path if it is an image file type, e.g. PNG or JPEG. public static File OpenImage(string filePath) Parameters filePath string Returns File OpenJPEG(string) Opens the JPEG/JPG file. Throws an error if the file is not a JPEG/JPG file. public static File OpenJPEG(string filePath) Parameters filePath string Returns File OpenPAC(string) Opens the PAC file. Throws an error if the file is not a PAC file. public static File OpenPAC(string filePath) Parameters filePath string Returns File OpenPNG(string) Opens the PNG file. Throws an error if the file is not a PNG file. public static File OpenPNG(string filePath) Parameters filePath string Returns File RemoveAllLayers() Removes all layers, then adds a blank normal layer. public void RemoveAllLayers() RemoveLayer(Layer) Removes the layer from the file. Throws an error if the layer is not in the file. public void RemoveLayer(Layer layer) Parameters layer Layer RemoveLayer(int) Removes the layer at the given index. public void RemoveLayer(int layer) Parameters layer int RemoveLayers(Layer[]) Removes the given layers from the file. Throws an error if a layer is not in the file. public void RemoveLayers(Layer[] layers) Parameters layers Layer[] RemoveLayers(int[]) Removes the layers at the given indices. public void RemoveLayers(int[] layers) Parameters layers int[] RemoveTile(Tile) Removes the tile. Throws an error if the tile is not in the file. public void RemoveTile(Tile tile) Parameters tile Tile Render(int) Renders all layers down to a Texture2D. Does not apply the texture. public Texture2D Render(int frame) Parameters frame int Returns Texture2D RenderLayers(int, int, int, bool) Renders all the layers with index between lowestLayer and highestLayer (inclusive iff inclusive == true) down to a Texture2D. highestLayer and lowestLayer are automatically clamped to be in the valid range of layers. Does not apply the texture. public Texture2D RenderLayers(int highestLayer, int lowestLayer, int frame, bool inclusive = true) Parameters highestLayer int The higher layer (so lower index). lowestLayer int The lower layer (so higher index). frame int inclusive bool Returns Texture2D RenderLayers(int[], int) Renders the layers at the given layer indices down to a Texture2D. Does not apply the texture. public Texture2D RenderLayers(int[] layerIndices, int frame) Parameters layerIndices int[] The layer indices in the order you want them to be rendered, from highest layer (so lowest index) to lowest. frame int Returns Texture2D RenderLayersAbove(int, int, bool) Renders all layers that appear above the given layer (includes the layer iff inclusive == true) down to a Texture2D. Returns a blank texture if there are none. Does not apply the texture. public Texture2D RenderLayersAbove(int layer, int frame, bool inclusive = false) Parameters layer int frame int inclusive bool Returns Texture2D RenderLayersBelow(int, int, bool) Renders all layers that appear strictly beneath the given layer (includes the layer iff inclusive == true) down to a Texture2D. Returns a blank texture if there are none. Does not apply the texture. public Texture2D RenderLayersBelow(int layer, int frame, bool inclusive = false) Parameters layer int frame int inclusive bool Returns Texture2D RenderPixel(IntVector2, int) Renders the colour of the given pixel. public Color RenderPixel(IntVector2 pixel, int frame) Parameters pixel IntVector2 frame int Returns Color RenderPixel(IntVector2, int, int, int, bool) public Color RenderPixel(IntVector2 pixel, int highestLayer, int lowestLayer, int frame, bool inclusive = true) Parameters pixel IntVector2 highestLayer int lowestLayer int frame int inclusive bool Returns Color RenderPixel(IntVector2, int[], int) Renders the colour of the pixel on the layers at the given layer indices. Throws an error if there are no layer indices. public Color RenderPixel(IntVector2 pixel, int[] layerIndices, int frame) Parameters pixel IntVector2 layerIndices int[] frame int Returns Color RenderPixel(int, int, int) Renders the colour of the given pixel. public Color RenderPixel(int x, int y, int frame) Parameters x int y int frame int Returns Color RenderPixel(int, int, int, int, int, bool) public Color RenderPixel(int x, int y, int highestLayer, int lowestLayer, int frame, bool inclusive = true) Parameters x int y int highestLayer int lowestLayer int frame int inclusive bool Returns Color RenderPixel(int, int, int[], int) Renders the colour of pixel (x, y) on the layers at the given layer indices. Throws an error if there are no layer indices. public Color RenderPixel(int x, int y, int[] layerIndices, int frame) Parameters x int y int layerIndices int[] frame int Returns Color ReplaceLayer(Layer, Layer) Replaces the layer with the given layer. Throws an error if the layer to replace is not in the file, or if the layer to replace with is already in the file. public void ReplaceLayer(Layer layerToReplace, Layer layerToReplaceWith) Parameters layerToReplace Layer layerToReplaceWith Layer ReplaceLayer(int, Layer) Replaces the layer at the given index with the given layer. Throws an error if the layer to replace with is already in the file. public void ReplaceLayer(int layerToReplace, Layer layerToReplaceWith) Parameters layerToReplace int layerToReplaceWith Layer Rotate(RotationAngle) Rotates the file. Rotation is clockwise. public void Rotate(RotationAngle angle) Parameters angle RotationAngle SaveAsPAC(string) Saves the file as a PAC file at the given file path. Throws an error if the file is not a PAC file. public void SaveAsPAC(string filePath) Parameters filePath string SavePAC() Saves the file as a PAC file at the location it was most recently saved at. Throws an error if the file hasn't been saved before. public void SavePAC() Scale(int, int) Resizes the file to the new width and height. public void Scale(int newWidth, int newHeight) Parameters newWidth int newHeight int Scale(float) Resizes the dimensions of the file by the scale factor. public void Scale(float scaleFactor) Parameters scaleFactor float Scale(float, float) Resizes the dimensions of the file by the scale factors. public void Scale(float xScaleFactor, float yScaleFactor) Parameters xScaleFactor float yScaleFactor float SetLiveRenderFrame(int) Sets the frame that the live render will be for. public void SetLiveRenderFrame(int frame) Parameters frame int SubscribeToOnPixelsChanged(UnityAction<IntVector2[], Layer[], int[]>) Event invoked when some pixels have been changed on a layer. Passes the pixels, layers and frames that were affected. public void SubscribeToOnPixelsChanged(UnityAction<IntVector2[], Layer[], int[]> call) Parameters call UnityAction<IntVector2[], Layer[], int[]> SubscribeToOnSavedSinceEditChanged(UnityAction) Event invoked when the a change to file is made or when the file is saved. public void SubscribeToOnSavedSinceEditChanged(UnityAction call) Parameters call UnityAction SubscribeToOnTileAdded(UnityAction) Event invoked when a tile is added to the file. public void SubscribeToOnTileAdded(UnityAction call) Parameters call UnityAction SubscribeToOnTileRemoved(UnityAction) Event invoked when a tile is removed from the file. public void SubscribeToOnTileRemoved(UnityAction call) Parameters call UnityAction ToJSON() Gets a JSON representation of the file. public JSON ToJSON() Returns JSON"
  },
  "api/PAC.Files.FileManager.html": {
    "href": "api/PAC.Files.FileManager.html",
    "title": "Class FileManager | |",
    "keywords": "Class FileManager Namespace PAC.Files public class FileManager : MonoBehaviour Inheritance object FileManager Fields defaultFileName public const string defaultFileName = \"Untitled Image\" Field Value string previousFile public File previousFile Field Value File Properties currentFile public File currentFile { get; } Property Value File currentFileIndex public int currentFileIndex { get; } Property Value int files public List<File> files { get; } Property Value List<File> Methods AddFile(File) public bool AddFile(File file) Parameters file File Returns bool CloseFile(File) Closes the file, with no checks for unsaved changes. public bool CloseFile(File file) Parameters file File Returns bool CloseFile(int) Closes the file, with no checks for unsaved changes. public File CloseFile(int fileIndex) Parameters fileIndex int Returns File ExportAnimation(int, string) public bool ExportAnimation(int fileIndex, string filePath) Parameters fileIndex int filePath string Returns bool ExportCurrentAnimation(string) public bool ExportCurrentAnimation(string filePath) Parameters filePath string Returns bool ExportCurrentAnimationDialog() public void ExportCurrentAnimationDialog() ExportCurrentFrame(int, string) public bool ExportCurrentFrame(int frameIndex, string filePath) Parameters frameIndex int filePath string Returns bool ExportCurrentFrameDialog() public void ExportCurrentFrameDialog() ExportFrame(int, int, string) public bool ExportFrame(int frameIndex, int fileIndex, string filePath) Parameters frameIndex int fileIndex int filePath string Returns bool ImportDialog() public void ImportDialog() NewFile(int, int) public void NewFile(int width, int height) Parameters width int height int OpenFile(File) public bool OpenFile(File file) Parameters file File Returns bool OpenFile(string) public bool OpenFile(string filePath) Parameters filePath string Returns bool OpenFileDialog() public void OpenFileDialog() ReloadFile() public void ReloadFile() SaveAsCurrentFile(string) public void SaveAsCurrentFile(string filePath) Parameters filePath string SaveAsCurrentFileDialog() public void SaveAsCurrentFileDialog() SaveAsFile(File, string) public void SaveAsFile(File file, string filePath) Parameters file File filePath string SaveAsFile(int, string) public void SaveAsFile(int fileIndex, string filePath) Parameters fileIndex int filePath string SaveAsFileDialog(File) public void SaveAsFileDialog(File file) Parameters file File SaveCurrentFileDialog() public void SaveCurrentFileDialog() SaveFileDialog(File) public void SaveFileDialog(File file) Parameters file File SubscribeToFileSwitched(UnityAction) public void SubscribeToFileSwitched(UnityAction call) Parameters call UnityAction SubscribeToFilesChanged(UnityAction) public void SubscribeToFilesChanged(UnityAction call) Parameters call UnityAction SwitchToFile(int) public void SwitchToFile(int fileIndex) Parameters fileIndex int TryCloseFile(File) Will close the file if there are no unsaved changes. Otherwise it will open a dialog box asking if you want to save. public bool TryCloseFile(File file) Parameters file File Returns bool TryCloseFile(int) Will close the file if there are no unsaved changes. Otherwise it will open a dialog box asking if you want to save. public bool TryCloseFile(int fileIndex) Parameters fileIndex int Returns bool"
  },
  "api/PAC.Files.FileTab.html": {
    "href": "api/PAC.Files.FileTab.html",
    "title": "Class FileTab | |",
    "keywords": "Class FileTab Namespace PAC.Files public class FileTab : MonoBehaviour Inheritance object FileTab Properties closed public bool closed { get; set; } Property Value bool file public File file { get; } Property Value File selected public bool selected { get; } Property Value bool tileToggle public UIToggleButton tileToggle { get; } Property Value UIToggleButton Methods SetFile(File) public void SetFile(File file) Parameters file File SubscribeToClose(UnityAction) public void SubscribeToClose(UnityAction call) Parameters call UnityAction SubscribeToNameChange(UnityAction) public void SubscribeToNameChange(UnityAction call) Parameters call UnityAction SubscribeToSelect(UnityAction) public void SubscribeToSelect(UnityAction call) Parameters call UnityAction"
  },
  "api/PAC.Files.FileTabsManager.html": {
    "href": "api/PAC.Files.FileTabsManager.html",
    "title": "Class FileTabsManager | |",
    "keywords": "Class FileTabsManager Namespace PAC.Files public class FileTabsManager : MonoBehaviour Inheritance object FileTabsManager Properties selectedFile public File selectedFile { get; } Property Value File selectedFileIndex public int selectedFileIndex { get; } Property Value int Methods CloseFile() public void CloseFile() OnFilesChanged() public void OnFilesChanged() SelectFile() public void SelectFile() SubscribeToOnFilesChanged(UnityAction) public void SubscribeToOnFilesChanged(UnityAction call) Parameters call UnityAction"
  },
  "api/PAC.Files.ImageEditManager.html": {
    "href": "api/PAC.Files.ImageEditManager.html",
    "title": "Class ImageEditManager | |",
    "keywords": "Class ImageEditManager Namespace PAC.Files public class ImageEditManager : MonoBehaviour Inheritance object ImageEditManager Methods ExtendFile(int, int, int, int) public void ExtendFile(int left, int right, int up, int down) Parameters left int right int up int down int ExtendFileDown(int) public void ExtendFileDown(int amount) Parameters amount int ExtendFileLeft(int) public void ExtendFileLeft(int amount) Parameters amount int ExtendFileRight(int) public void ExtendFileRight(int amount) Parameters amount int ExtendFileUp(int) public void ExtendFileUp(int amount) Parameters amount int FlipFile(FlipDirection) public void FlipFile(FlipDirection direction) Parameters direction FlipDirection FlipFileX() public void FlipFileX() FlipFileY() public void FlipFileY() FlipSelectedLayers(FlipDirection) public void FlipSelectedLayers(FlipDirection direction) Parameters direction FlipDirection FlipSelectedLayersX() public void FlipSelectedLayersX() FlipSelectedLayersY() public void FlipSelectedLayersY() RotateFile(RotationAngle) public void RotateFile(RotationAngle angle) Parameters angle RotationAngle RotateSelectedLayers(RotationAngle) public void RotateSelectedLayers(RotationAngle angle) Parameters angle RotationAngle RotateSelectedLayers180() public void RotateSelectedLayers180() RotateSelectedLayers90() public void RotateSelectedLayers90() RotateSelectedLayersMinus90() public void RotateSelectedLayersMinus90() ScaleFile(int, int) public void ScaleFile(int newWidth, int newHeight) Parameters newWidth int newHeight int ScaleFile(float) public void ScaleFile(float scaleFactor) Parameters scaleFactor float ScaleFile(float, float) public void ScaleFile(float xScaleFactor, float yScaleFactor) Parameters xScaleFactor float yScaleFactor float SubscribeToEdit(UnityAction) public void SubscribeToEdit(UnityAction call) Parameters call UnityAction SubscribeToImageSizeChanged(UnityAction) public void SubscribeToImageSizeChanged(UnityAction call) Parameters call UnityAction"
  },
  "api/PAC.Files.html": {
    "href": "api/PAC.Files.html",
    "title": "Namespace PAC.Files | |",
    "keywords": "Namespace PAC.Files Classes File A class to represent a single Pixel Art Creator file. FileManager FileTab FileTabsManager ImageEditManager"
  },
  "api/PAC.Finder.html": {
    "href": "api/PAC.Finder.html",
    "title": "Class Finder | |",
    "keywords": "Class Finder Namespace PAC public class Finder Inheritance object Finder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties animationManager public static AnimationManager animationManager { get; } Property Value AnimationManager clipboard public static Clipboard clipboard { get; } Property Value Clipboard colourPicker public static GlobalColourPicker colourPicker { get; } Property Value GlobalColourPicker drawingArea public static DrawingArea drawingArea { get; } Property Value DrawingArea fileManager public static FileManager fileManager { get; } Property Value FileManager fileTabsManager public static FileTabsManager fileTabsManager { get; } Property Value FileTabsManager gridManager public static GridManager gridManager { get; } Property Value GridManager imageEditManager public static ImageEditManager imageEditManager { get; } Property Value ImageEditManager inputSystem public static InputSystem inputSystem { get; } Property Value InputSystem keyboard public static Keyboard keyboard { get; } Property Value Keyboard layerManager public static LayerManager layerManager { get; } Property Value LayerManager mouse public static Mouse mouse { get; } Property Value Mouse themeManager public static ThemeManager themeManager { get; } Property Value ThemeManager tileOutlineManager public static TileOutlineManager tileOutlineManager { get; } Property Value TileOutlineManager tilesetManager public static TilesetManager tilesetManager { get; } Property Value TilesetManager toolbar public static Toolbar toolbar { get; } Property Value Toolbar uiManager public static UIManager uiManager { get; } Property Value UIManager undoRedoManager public static UndoRedoManager undoRedoManager { get; } Property Value UndoRedoManager"
  },
  "api/PAC.FlipDirection.html": {
    "href": "api/PAC.FlipDirection.html",
    "title": "Enum FlipDirection | |",
    "keywords": "Enum FlipDirection Namespace PAC public enum FlipDirection Fields None = 0 X = 1 Y = 2"
  },
  "api/PAC.Functions.html": {
    "href": "api/PAC.Functions.html",
    "title": "Class Functions | |",
    "keywords": "Class Functions Namespace PAC public static class Functions Inheritance object Functions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ArrayToString<T>(T[]) public static string ArrayToString<T>(T[] array) Parameters array T[] Returns string Type Parameters T CeilToMultiple(float, int) public static int CeilToMultiple(float toRound, int multipleOf) Parameters toRound float multipleOf int Returns int CeilToMultiple(float, float) public static float CeilToMultiple(float toRound, float multipleOf) Parameters toRound float multipleOf float Returns float CompareArrays<T>(T[], T[]) public static bool CompareArrays<T>(T[] array1, T[] array2) Parameters array1 T[] array2 T[] Returns bool Type Parameters T ConcatArrays<T>(T[], T[]) public static T[] ConcatArrays<T>(T[] array1, T[] array2) Parameters array1 T[] array2 T[] Returns T[] Type Parameters T CopyArray<T>(T[]) public static T[] CopyArray<T>(T[] array) Parameters array T[] Returns T[] Type Parameters T FirstNChars(string, int) public static string FirstNChars(string str, int numOfChars) Parameters str string numOfChars int Returns string FloorToMultiple(float, int) public static int FloorToMultiple(float toRound, int multipleOf) Parameters toRound float multipleOf int Returns int FloorToMultiple(float, float) public static float FloorToMultiple(float toRound, float multipleOf) Parameters toRound float multipleOf float Returns float Mod(int, int) Returns a mod b, giving a non-negative result. public static int Mod(int a, int b) Parameters a int b int Returns int Range(int, int) public static int[] Range(int start, int end) Parameters start int end int Returns int[] RoundDecimalPlaces(float, int) public static float RoundDecimalPlaces(float f, int decimalPlaces) Parameters f float decimalPlaces int Returns float RoundToMultiple(float, int) public static int RoundToMultiple(float toRound, int multipleOf) Parameters toRound float multipleOf int Returns int RoundToMultiple(float, float) public static float RoundToMultiple(float toRound, float multipleOf) Parameters toRound float multipleOf float Returns float SymmetricCeil(float) public static float SymmetricCeil(float f) Parameters f float Returns float SymmetricCeilToInt(float) public static int SymmetricCeilToInt(float f) Parameters f float Returns int SymmetricFloor(float) public static float SymmetricFloor(float f) Parameters f float Returns float SymmetricFloorToInt(float) public static int SymmetricFloorToInt(float f) Parameters f float Returns int ToArray<T>(HashSet<T>) public static T[] ToArray<T>(this HashSet<T> hashSet) Parameters hashSet HashSet<T> Returns T[] Type Parameters T TruncateDecimalPlaces(float, int) public static float TruncateDecimalPlaces(float f, int decimalPlaces) Parameters f float decimalPlaces int Returns float Vector2ToVector3(Vector3) public static Vector3 Vector2ToVector3(Vector3 vector2) Parameters vector2 Vector3 Returns Vector3 Vector3ToVector2(Vector3) public static Vector2 Vector3ToVector2(Vector3 vector3) Parameters vector3 Vector3 Returns Vector2"
  },
  "api/PAC.ImageConverter.html": {
    "href": "api/PAC.ImageConverter.html",
    "title": "Class ImageConverter | |",
    "keywords": "Class ImageConverter Namespace PAC public static class ImageConverter Inheritance object ImageConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/PAC.Input.CursorState.html": {
    "href": "api/PAC.Input.CursorState.html",
    "title": "Enum CursorState | |",
    "keywords": "Enum CursorState Namespace PAC.Input public enum CursorState Fields CrossArrows = 7 CurrentTool = -1 EyeDropper = 5 Grab = 12 Hover = 2 Invisible = 4 LeftRightArrow = 9 LinearGradient = 30 MagicWand = 11 MagnifyingGlass = 10 Normal = 1 Press = 3 RadialGradient = 31 SelectionEllipse = 101 SelectionRectangle = 100 Text = 6 Unspecified = 0 UpDownArrow = 8"
  },
  "api/PAC.Input.InputSystem.html": {
    "href": "api/PAC.Input.InputSystem.html",
    "title": "Class InputSystem | |",
    "keywords": "Class InputSystem Namespace PAC.Input public class InputSystem : MonoBehaviour Inheritance object InputSystem Fields timeBetweenKeySpam public float timeBetweenKeySpam Field Value float timeUntilKeySpam public float timeUntilKeySpam Field Value float Properties globalInputTarget public InputTarget globalInputTarget { get; } Property Value InputTarget globalKeyboardTarget public KeyboardTarget globalKeyboardTarget { get; } Property Value KeyboardTarget globalMouseTarget public MouseTarget globalMouseTarget { get; } Property Value MouseTarget hasInputTarget public bool hasInputTarget { get; } Property Value bool inputTarget public InputTarget inputTarget { get; } Property Value InputTarget keyboard public Keyboard keyboard { get; } Property Value Keyboard mouse public Mouse mouse { get; } Property Value Mouse Methods LockForAFrame() public void LockForAFrame() SubscribeToGlobalKeyboard(UnityAction) public void SubscribeToGlobalKeyboard(UnityAction call) Parameters call UnityAction SubscribeToGlobalLeftClick(UnityAction) public void SubscribeToGlobalLeftClick(UnityAction call) Parameters call UnityAction SubscribeToGlobalMouseScroll(UnityAction) public void SubscribeToGlobalMouseScroll(UnityAction call) Parameters call UnityAction Target(InputTarget) public bool Target(InputTarget newTarget) Parameters newTarget InputTarget Returns bool Untarget() public InputTarget Untarget() Returns InputTarget"
  },
  "api/PAC.Input.InputTarget.html": {
    "href": "api/PAC.Input.InputTarget.html",
    "title": "Class InputTarget | |",
    "keywords": "Class InputTarget Namespace PAC.Input public class InputTarget : MonoBehaviour Inheritance object InputTarget Fields allowHoldingKeySpam public bool allowHoldingKeySpam Field Value bool allowLeftClick public bool allowLeftClick Field Value bool allowMiddleClick public bool allowMiddleClick Field Value bool allowRightClick public bool allowRightClick Field Value bool allowScroll public bool allowScroll Field Value bool cursorHover public CursorState cursorHover Field Value CursorState cursorPress public CursorState cursorPress Field Value CursorState cursorSelected public CursorState cursorSelected Field Value CursorState disableMouseWhenSelected public bool disableMouseWhenSelected Field Value bool isHoverTrigger public bool isHoverTrigger Field Value bool keyboardInputEnabled public bool keyboardInputEnabled Field Value bool mouseDeselectMode public MouseTargetDeselectMode mouseDeselectMode Field Value MouseTargetDeselectMode mouseInputEnabled public bool mouseInputEnabled Field Value bool receiveAlreadyHeldKeys public bool receiveAlreadyHeldKeys Field Value bool uiElement public UIElement uiElement Field Value UIElement viewport public UIViewport viewport Field Value UIViewport Properties collider public Collider2D collider { get; } Property Value Collider2D cursorScroll public CursorState cursorScroll { get; set; } Property Value CursorState keyboardTarget public KeyboardTarget keyboardTarget { get; } Property Value KeyboardTarget mouseTarget public MouseTarget mouseTarget { get; } Property Value MouseTarget targetName public string targetName { get; } Property Value string targetTag public int targetTag { get; } Property Value int Methods GetUntargeted() public void GetUntargeted() SubscribeToTarget(UnityAction) public void SubscribeToTarget(UnityAction call) Parameters call UnityAction SubscribeToUntarget(UnityAction) public void SubscribeToUntarget(UnityAction call) Parameters call UnityAction Target() public void Target() Untarget() public void Untarget()"
  },
  "api/PAC.Input.Keyboard.html": {
    "href": "api/PAC.Input.Keyboard.html",
    "title": "Class Keyboard | |",
    "keywords": "Class Keyboard Namespace PAC.Input public class Keyboard : MonoBehaviour Inheritance object Keyboard Fields canInteract public bool canInteract Field Value bool"
  },
  "api/PAC.Input.KeyboardTarget.html": {
    "href": "api/PAC.Input.KeyboardTarget.html",
    "title": "Class KeyboardTarget | |",
    "keywords": "Class KeyboardTarget Namespace PAC.Input public class KeyboardTarget Inheritance object KeyboardTarget Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors KeyboardTarget() public KeyboardTarget() Fields allowHoldingKeySpam public bool allowHoldingKeySpam Field Value bool receiveAlreadyHeldKeys public bool receiveAlreadyHeldKeys Field Value bool Properties inputThisFrame public bool inputThisFrame { get; } Property Value bool keysHeld The keys that are currently held down, in order of when they were pressed (most recent first). public CustomKeyCode[] keysHeld { get; } Property Value CustomKeyCode[] keysPressed public CustomKeyCode[] keysPressed { get; } Property Value CustomKeyCode[] Methods IsHeld(CustomKeyCode) Returns true if all the given key (and potentially some other keys) is held (and is a key detectable by KeyboardTarget). public bool IsHeld(CustomKeyCode key) Parameters key CustomKeyCode Returns bool IsHeld(params CustomKeyCode[]) Returns true if all the given keys (and potentially some other keys) are held (and are keys detectable by KeyboardTarget). public bool IsHeld(params CustomKeyCode[] keys) Parameters keys CustomKeyCode[] Returns bool IsHeld(KeyboardShortcut) Returns true if all the given key (and potentially some other keys) is held (and is a key detectable by KeyboardTarget). public bool IsHeld(KeyboardShortcut shortcut) Parameters shortcut KeyboardShortcut Returns bool IsHeldExactly(params CustomKeyCode[]) Returns true if all and only the given keys are held (and are keys detectable by KeyboardTarget). public bool IsHeldExactly(params CustomKeyCode[] keys) Parameters keys CustomKeyCode[] Returns bool IsHeldExactly(KeyboardShortcut) Returns true if all and only the given keys are held (and are keys detectable by KeyboardTarget). public bool IsHeldExactly(KeyboardShortcut shortcut) Parameters shortcut KeyboardShortcut Returns bool IsPressed(CustomKeyCode) Returns true if all the given key (and potentially some other keys) has been pressed this frame (and is a key detectable by KeyboardTarget). public bool IsPressed(CustomKeyCode key) Parameters key CustomKeyCode Returns bool IsPressed(params CustomKeyCode[]) Returns true if all the given keys (and potentially some other keys) have been pressed this frame (and are keys detectable by KeyboardTarget). public bool IsPressed(params CustomKeyCode[] keys) Parameters keys CustomKeyCode[] Returns bool IsPressed(KeyboardShortcut) Returns true if all the given keys (and potentially some other keys) have been pressed this frame (and are keys detectable by KeyboardTarget). public bool IsPressed(KeyboardShortcut shortcut) Parameters shortcut KeyboardShortcut Returns bool KeyDown(CustomKeyCode) Simulates the key being pressed, if it is a key detectable by KeyboardTarget. public void KeyDown(CustomKeyCode key) Parameters key CustomKeyCode KeyDownNoSpamReset(CustomKeyCode) Simulates the key being pressed, if it is a key detectable by KeyboardTarget, without restting the timer until key spamming occurs. public void KeyDownNoSpamReset(CustomKeyCode key) Parameters key CustomKeyCode KeyUp(CustomKeyCode) Simulates the key being unpressed. public void KeyUp(CustomKeyCode key) Parameters key CustomKeyCode KeysDown(params CustomKeyCode[]) Simulates the keys being pressed, if they are keys detectable by KeyboardTarget. public void KeysDown(params CustomKeyCode[] keys) Parameters keys CustomKeyCode[] KeysDownNoSpamReset(params CustomKeyCode[]) Simulates the keys being pressed, if they are keys detectable by KeyboardTarget, without restting the timer until key spamming occurs. public void KeysDownNoSpamReset(params CustomKeyCode[] keys) Parameters keys CustomKeyCode[] KeysUp(params CustomKeyCode[]) Simulates the keys being unpressed. public void KeysUp(params CustomKeyCode[] keys) Parameters keys CustomKeyCode[] ManualUpdate() Only to be called in InputTarget's Update() method. public void ManualUpdate() OneIsHeld(IEnumerable<KeyboardShortcut>) Returns true if all the given keys (and potentially some other keys) are held (and are keys detectable by KeyboardTarget) for one of the given keyboard shortcuts. public bool OneIsHeld(IEnumerable<KeyboardShortcut> shortcuts) Parameters shortcuts IEnumerable<KeyboardShortcut> Returns bool OneIsHeldExactly(IEnumerable<KeyboardShortcut>) Returns true if all and only the given keys are held (and are keys detectable by KeyboardTarget) for one of the given keyboard shortcuts. public bool OneIsHeldExactly(IEnumerable<KeyboardShortcut> shortcuts) Parameters shortcuts IEnumerable<KeyboardShortcut> Returns bool OneIsPressed(IEnumerable<KeyboardShortcut>) Returns true if all the given keys (and potentially some other keys) have been pressed this frame (and are keys detectable by KeyboardTarget) for one of the given keyboard shortcuts. public bool OneIsPressed(IEnumerable<KeyboardShortcut> shortcuts) Parameters shortcuts IEnumerable<KeyboardShortcut> Returns bool SubscribeToOnInput(UnityAction) public void SubscribeToOnInput(UnityAction call) Parameters call UnityAction SubscribeToOnKeyDown(UnityAction<CustomKeyCode>) public void SubscribeToOnKeyDown(UnityAction<CustomKeyCode> call) Parameters call UnityAction<CustomKeyCode> SubscribeToOnKeyUp(UnityAction<CustomKeyCode>) public void SubscribeToOnKeyUp(UnityAction<CustomKeyCode> call) Parameters call UnityAction<CustomKeyCode> SubscribeToUntarget(UnityAction) public void SubscribeToUntarget(UnityAction call) Parameters call UnityAction Untarget() public void Untarget()"
  },
  "api/PAC.Input.Mouse.html": {
    "href": "api/PAC.Input.Mouse.html",
    "title": "Class Mouse | |",
    "keywords": "Class Mouse Namespace PAC.Input public class Mouse : MonoBehaviour Inheritance object Mouse Fields canInteract public bool canInteract Field Value bool lockAllUIInteractions public bool lockAllUIInteractions Field Value bool Properties click public bool click { get; } Property Value bool cursorState public CursorState cursorState { get; } Property Value CursorState hasHoverTrigger public bool hasHoverTrigger { get; } Property Value bool held public bool held { get; } Property Value bool hoverTarget public InputTarget hoverTarget { get; } Property Value InputTarget leftClick public bool leftClick { get; } Property Value bool leftHold public bool leftHold { get; } Property Value bool leftUnclick public bool leftUnclick { get; } Property Value bool middleClick public bool middleClick { get; } Property Value bool middleHold public bool middleHold { get; } Property Value bool middleUnclick public bool middleUnclick { get; } Property Value bool nothingClick public bool nothingClick { get; } Property Value bool nothingHeld public bool nothingHeld { get; } Property Value bool numButtonsHeld public int numButtonsHeld { get; } Property Value int rightClick public bool rightClick { get; } Property Value bool rightHold public bool rightHold { get; } Property Value bool rightUnclick public bool rightUnclick { get; } Property Value bool scrollCursorDisplayTime public float scrollCursorDisplayTime { get; } Property Value float scrollDelta public float scrollDelta { get; } Property Value float unclick public bool unclick { get; } Property Value bool worldPos public Vector2 worldPos { get; } Property Value Vector2 Methods IsClicked(MouseButton) public bool IsClicked(MouseButton mouseButton) Parameters mouseButton MouseButton Returns bool IsHeld(MouseButton) public bool IsHeld(MouseButton mouseButton) Parameters mouseButton MouseButton Returns bool IsUnclicked(MouseButton) public bool IsUnclicked(MouseButton mouseButton) Parameters mouseButton MouseButton Returns bool SetCursorSprite(CursorState) public void SetCursorSprite(CursorState cursorState) Parameters cursorState CursorState SetCursorState(CursorState) public void SetCursorState(CursorState cursorState) Parameters cursorState CursorState SubscribeToClick(UnityAction) public void SubscribeToClick(UnityAction call) Parameters call UnityAction SubscribeToLeftClick(UnityAction) public void SubscribeToLeftClick(UnityAction call) Parameters call UnityAction SubscribeToLeftUnclick(UnityAction) public void SubscribeToLeftUnclick(UnityAction call) Parameters call UnityAction SubscribeToMiddleClick(UnityAction) public void SubscribeToMiddleClick(UnityAction call) Parameters call UnityAction SubscribeToMiddleUnclick(UnityAction) public void SubscribeToMiddleUnclick(UnityAction call) Parameters call UnityAction SubscribeToRightClick(UnityAction) public void SubscribeToRightClick(UnityAction call) Parameters call UnityAction SubscribeToRightUnclick(UnityAction) public void SubscribeToRightUnclick(UnityAction call) Parameters call UnityAction SubscribeToScroll(UnityAction) public void SubscribeToScroll(UnityAction call) Parameters call UnityAction SubscribeToUnclick(UnityAction) public void SubscribeToUnclick(UnityAction call) Parameters call UnityAction"
  },
  "api/PAC.Input.MouseButton.html": {
    "href": "api/PAC.Input.MouseButton.html",
    "title": "Enum MouseButton | |",
    "keywords": "Enum MouseButton Namespace PAC.Input public enum MouseButton Fields Left = 0 Middle = 2 Right = 1"
  },
  "api/PAC.Input.MouseTarget.html": {
    "href": "api/PAC.Input.MouseTarget.html",
    "title": "Class MouseTarget | |",
    "keywords": "Class MouseTarget Namespace PAC.Input public class MouseTarget Inheritance object MouseTarget Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields allowLeftClick public bool allowLeftClick Field Value bool allowMiddleClick public bool allowMiddleClick Field Value bool allowRightClick public bool allowRightClick Field Value bool allowScroll public bool allowScroll Field Value bool buttonTargetedWith public MouseButton buttonTargetedWith Field Value MouseButton cursorHover public CursorState cursorHover Field Value CursorState cursorPress public CursorState cursorPress Field Value CursorState cursorScroll public CursorState cursorScroll Field Value CursorState cursorSelected public CursorState cursorSelected Field Value CursorState deselectMode public MouseTargetDeselectMode deselectMode Field Value MouseTargetDeselectMode isHoverTrigger public bool isHoverTrigger Field Value bool Properties selected public bool selected { get; } Property Value bool state public MouseTargetState state { get; } Property Value MouseTargetState timeHovered public float timeHovered { get; } Property Value float Methods Deselect() public void Deselect() Hover() public void Hover() Idle() public void Idle() Press() public void Press() Scroll() public void Scroll() Select() public void Select() SubscribeToClick(UnityAction) public void SubscribeToClick(UnityAction call) Parameters call UnityAction SubscribeToDeselect(UnityAction) public void SubscribeToDeselect(UnityAction call) Parameters call UnityAction SubscribeToHover(UnityAction) public void SubscribeToHover(UnityAction call) Parameters call UnityAction SubscribeToIdle(UnityAction) public void SubscribeToIdle(UnityAction call) Parameters call UnityAction SubscribeToLeftClick(UnityAction) public void SubscribeToLeftClick(UnityAction call) Parameters call UnityAction SubscribeToLeftUnclick(UnityAction) public void SubscribeToLeftUnclick(UnityAction call) Parameters call UnityAction SubscribeToMiddleClick(UnityAction) public void SubscribeToMiddleClick(UnityAction call) Parameters call UnityAction SubscribeToMiddleUnclick(UnityAction) public void SubscribeToMiddleUnclick(UnityAction call) Parameters call UnityAction SubscribeToPress(UnityAction) public void SubscribeToPress(UnityAction call) Parameters call UnityAction SubscribeToRightClick(UnityAction) public void SubscribeToRightClick(UnityAction call) Parameters call UnityAction SubscribeToRightUnclick(UnityAction) public void SubscribeToRightUnclick(UnityAction call) Parameters call UnityAction SubscribeToScroll(UnityAction) public void SubscribeToScroll(UnityAction call) Parameters call UnityAction SubscribeToSelect(UnityAction) public void SubscribeToSelect(UnityAction call) Parameters call UnityAction SubscribeToStateChange(UnityAction) public void SubscribeToStateChange(UnityAction call) Parameters call UnityAction SubscribeToUnclick(UnityAction) public void SubscribeToUnclick(UnityAction call) Parameters call UnityAction SubscribeToUntarget(UnityAction) public void SubscribeToUntarget(UnityAction call) Parameters call UnityAction Untarget() public void Untarget()"
  },
  "api/PAC.Input.MouseTargetDeselectMode.html": {
    "href": "api/PAC.Input.MouseTargetDeselectMode.html",
    "title": "Enum MouseTargetDeselectMode | |",
    "keywords": "Enum MouseTargetDeselectMode Namespace PAC.Input public enum MouseTargetDeselectMode Fields ClickAgain = 1 Manual = 100 Unclick = 0"
  },
  "api/PAC.Input.MouseTargetState.html": {
    "href": "api/PAC.Input.MouseTargetState.html",
    "title": "Enum MouseTargetState | |",
    "keywords": "Enum MouseTargetState Namespace PAC.Input public enum MouseTargetState Fields Hover = 1 Idle = 0 Pressed = 2"
  },
  "api/PAC.Input.Tooltip.html": {
    "href": "api/PAC.Input.Tooltip.html",
    "title": "Class Tooltip | |",
    "keywords": "Class Tooltip Namespace PAC.Input public class Tooltip : MonoBehaviour Inheritance object Tooltip Fields hoverTimeUntilTooltip public float hoverTimeUntilTooltip Field Value float padding public Vector2 padding Field Value Vector2 Properties text public string text { get; set; } Property Value string tooltipVisible public bool tooltipVisible { get; } Property Value bool Methods HideTooltip() public void HideTooltip() ShowTooltip(Vector2) public void ShowTooltip(Vector2 worldCoords) Parameters worldCoords Vector2"
  },
  "api/PAC.Input.html": {
    "href": "api/PAC.Input.html",
    "title": "Namespace PAC.Input | |",
    "keywords": "Namespace PAC.Input Classes InputSystem InputTarget Keyboard KeyboardTarget Mouse MouseTarget Tooltip Enums CursorState MouseButton MouseTargetDeselectMode MouseTargetState"
  },
  "api/PAC.JSON.IJSONable.html": {
    "href": "api/PAC.JSON.IJSONable.html",
    "title": "Interface IJSONable | |",
    "keywords": "Interface IJSONable Namespace PAC.JSON An interface for objects that can be converted to JSON. public interface IJSONable Methods ToJSON() JSON ToJSON() Returns JSON"
  },
  "api/PAC.JSON.JSON.JSONProperty.html": {
    "href": "api/PAC.JSON.JSON.JSONProperty.html",
    "title": "Class JSON.JSONProperty | |",
    "keywords": "Class JSON.JSONProperty Namespace PAC.JSON A class to store an individual piece of JSON data. public class JSON.JSONProperty Inheritance object JSON.JSONProperty Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors JSONProperty(string, bool) public JSONProperty(string data, bool addQuotationMarks) Parameters data string addQuotationMarks bool Whether quotation marks should be added around the data - e.g. if the data represents a string. Fields addQuotationMarks Whether quotation marks should be added around the data - e.g. if the data represents a string. public bool addQuotationMarks Field Value bool data The data. public string data Field Value string"
  },
  "api/PAC.JSON.JSON.html": {
    "href": "api/PAC.JSON.JSON.html",
    "title": "Class JSON | |",
    "keywords": "Class JSON Namespace PAC.JSON A class to represent data in a JSON format. public class JSON Inheritance object JSON Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors JSON() Create an empty JSON object. public JSON() JSON(string) Parse the JSON-format string into a JSON object. public JSON(string jsonToParse) Parameters jsonToParse string Properties this[string] Accesses the string form of the data for the given key - the same as Get(key) and Add(key, value). To access the JSONProperty for the key, use GetJSONProperty(key). public string this[string key] { get; set; } Parameters key string Property Value string Keys The keys appearing in the outermost scope of the JSON data. public string[] Keys { get; } Property Value string[] Methods Add(string, IJSONable) Adds the string form of the JSON of the given object to this JSON object. public void Add(string key, IJSONable jsonableObject) Parameters key string jsonableObject IJSONable Add(string, JSON) Adds the string form of the given JSON to this JSON object. public void Add(string key, JSON json) Parameters key string json JSON Add(string, JSONProperty) Adds the given data at the given key, overriding any existing data. public void Add(string key, JSON.JSONProperty data) Parameters key string data JSON.JSONProperty Add(string, bool) Adds the given bool to the JSON. public void Add(string key, bool boolean) Parameters key string boolean bool Add(string, IEnumerable<IJSONable>) Adds the string forms of the JSON of the given objects to this JSON object in the format of a JSON array. public void Add(string key, IEnumerable<IJSONable> jsonableObjects) Parameters key string jsonableObjects IEnumerable<IJSONable> Add(string, IEnumerable<string>, bool) Adds the given strings to the JSON in the format of a JSON array, adding quotation marks around each string. public void Add(string key, IEnumerable<string> strings, bool separateLines) Parameters key string strings IEnumerable<string> separateLines bool Whether to start a new line for each element of the array. Add(string, IEnumerable<string>, bool, bool) Adds the given data (given in string form) to the JSON in the format of a JSON array. public void Add(string key, IEnumerable<string> strings, bool separateLines, bool addQuotationMarks) Parameters key string strings IEnumerable<string> separateLines bool Whether to start a new line for each element of the array. addQuotationMarks bool Whether to add quotation marks around each element of the array. Add(string, IEnumerable, bool) Adds the string form of the given objects to the JSON in the format of a JSON array, adding no quotation marks. public void Add(string key, IEnumerable objects, bool separateLines) Parameters key string objects IEnumerable separateLines bool Whether to start a new line for each element of the array. Add(string, IEnumerable, bool, bool) Adds the string form of the given objects to the JSON in the format of a JSON array. public void Add(string key, IEnumerable objects, bool separateLines, bool addQuotationMarks) Parameters key string objects IEnumerable separateLines bool Whether to start a new line for each element of the array. addQuotationMarks bool Whether to add quotation marks around each element of the array. Add(string, object) Adds the string form of the given object to the JSON, adding no quotation marks. public void Add(string key, object obj) Parameters key string obj object Add(string, object, bool) Adds the string form of the given object to the JSON. public void Add(string key, object obj, bool addQuotationMarks) Parameters key string obj object addQuotationMarks bool Add(string, string) Adds the given string to the JSON, adding quotation marks around the string. public void Add(string key, string str) Parameters key string str string Add(string, string, bool) Adds the given data (given in string form) to the JSON. public void Add(string key, string str, bool addQuotationMarks) Parameters key string str string addQuotationMarks bool AddParse(string) Parses the JSON string and adds all data to this JSON object. Does not delete any existing data in this object, except when keys collide, in which case new data will override old data. public void AddParse(string jsonToParse) Parameters jsonToParse string Append(JSON) Adds the data of the given JSON object to the end of this JSON object. Throws error if they have a key in common. public void Append(JSON json) Parameters json JSON ContainsKey(string) Returns true if this JSON object has the given key. public bool ContainsKey(string key) Parameters key string Returns bool Get(string) Returns the string form of the data at the given key. public string Get(string key) Parameters key string Returns string GetJSONProperty(string) Returns the JSONProperty at the given key. public JSON.JSONProperty GetJSONProperty(string key) Parameters key string Returns JSON.JSONProperty Parse(string) Parses the JSON string into a new JSON object. public static JSON Parse(string jsonToParse) Parameters jsonToParse string Returns JSON SplitArray(string) Splits a JSON string representing an array into a string[] of the data. public static string[] SplitArray(string jsonString) Parameters jsonString string Include the start/end square brackets in the string. Returns string[] StripQuotationMarks(string) Removes the \" \" pair enclosing a string, if there is one; otherwise throws an error. public static string StripQuotationMarks(string str) Parameters str string Returns string ToJSONString(IEnumerable<IJSONable>) Returns the JSON of the given objects in a JSON-format array in string form. public static string ToJSONString(IEnumerable<IJSONable> jsonableObjects) Parameters jsonableObjects IEnumerable<IJSONable> Returns string ToJSONString(IEnumerable<string>, bool) Returns the given strings in a JSON-format array in string form, adding quotation marks around each element. public static string ToJSONString(IEnumerable<string> strings, bool separateLines) Parameters strings IEnumerable<string> separateLines bool Returns string ToJSONString(IEnumerable<string>, bool, bool) Returns the given strings in a JSON-format array in string form. public static string ToJSONString(IEnumerable<string> strings, bool separateLines, bool addQuotationMarks) Parameters strings IEnumerable<string> separateLines bool addQuotationMarks bool Whether to add quotation marks around each element of the array. Returns string ToJSONString(IEnumerable, bool) Returns the JSON of the given objects in a JSON-format array in string form, adding no quotation marks. public static string ToJSONString(IEnumerable objects, bool separateLines) Parameters objects IEnumerable separateLines bool Returns string ToJSONString(IEnumerable, bool, bool) Returns the JSON of the given objects in a JSON-format array in string form. public static string ToJSONString(IEnumerable objects, bool separateLines, bool addQuotationMarks) Parameters objects IEnumerable separateLines bool addQuotationMarks bool Whether to add quotation marks around each element of the array. Returns string ToString() Returns the data as a string in JSON format. public override string ToString() Returns string"
  },
  "api/PAC.JSON.html": {
    "href": "api/PAC.JSON.html",
    "title": "Namespace PAC.JSON | |",
    "keywords": "Namespace PAC.JSON Classes JSON A class to represent data in a JSON format. JSON.JSONProperty A class to store an individual piece of JSON data. Interfaces IJSONable An interface for objects that can be converted to JSON."
  },
  "api/PAC.KeyCodeFunctions.html": {
    "href": "api/PAC.KeyCodeFunctions.html",
    "title": "Class KeyCodeFunctions | |",
    "keywords": "Class KeyCodeFunctions Namespace PAC public static class KeyCodeFunctions Inheritance object KeyCodeFunctions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods IsAlpha(KeyCode) public static bool IsAlpha(KeyCode keyCode) Parameters keyCode KeyCode Returns bool IsAlphanumeric(KeyCode) public static bool IsAlphanumeric(KeyCode keyCode) Parameters keyCode KeyCode Returns bool IsDigit(KeyCode) public static bool IsDigit(KeyCode keyCode) Parameters keyCode KeyCode Returns bool StrToKeyCode(string) public static KeyCode StrToKeyCode(string str) Parameters str string Returns KeyCode"
  },
  "api/PAC.KeyboardShortcuts.CustomKeyCode.html": {
    "href": "api/PAC.KeyboardShortcuts.CustomKeyCode.html",
    "title": "Class CustomKeyCode | |",
    "keywords": "Class CustomKeyCode Namespace PAC.KeyboardShortcuts A class to supersede Unity's KeyCode enum to allow keycodes to refer to multiple keys - e.g. Shift instead of separated into LeftShift and RightShift. public class CustomKeyCode : IEnumerable Inheritance object CustomKeyCode Implements IEnumerable Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields Alt public static readonly CustomKeyCode Alt Field Value CustomKeyCode Ctrl public static readonly CustomKeyCode Ctrl Field Value CustomKeyCode GreaterThan public static readonly CustomKeyCode GreaterThan Field Value CustomKeyCode LessThan public static readonly CustomKeyCode LessThan Field Value CustomKeyCode Minus public static readonly CustomKeyCode Minus Field Value CustomKeyCode Plus public static readonly CustomKeyCode Plus Field Value CustomKeyCode Shift public static readonly CustomKeyCode Shift Field Value CustomKeyCode _0 The keycode for 0. public static readonly CustomKeyCode _0 Field Value CustomKeyCode _1 The keycode for 1. public static readonly CustomKeyCode _1 Field Value CustomKeyCode _2 The keycode for 2. public static readonly CustomKeyCode _2 Field Value CustomKeyCode _3 The keycode for 3. public static readonly CustomKeyCode _3 Field Value CustomKeyCode _4 The keycode for 4. public static readonly CustomKeyCode _4 Field Value CustomKeyCode _5 The keycode for 5. public static readonly CustomKeyCode _5 Field Value CustomKeyCode _6 The keycode for 6. public static readonly CustomKeyCode _6 Field Value CustomKeyCode _7 The keycode for 7. public static readonly CustomKeyCode _7 Field Value CustomKeyCode _8 The keycode for 8. public static readonly CustomKeyCode _8 Field Value CustomKeyCode _9 The keycode for 9. public static readonly CustomKeyCode _9 Field Value CustomKeyCode allKeyCodes All Unity KeyCodes and all combined keycodes. public static readonly CustomKeyCode[] allKeyCodes Field Value CustomKeyCode[] alphabet The keycodes A-Z. public static readonly CustomKeyCode[] alphabet Field Value CustomKeyCode[] combinedKeyCodes All the defined keycodes that combine multiple Unity KeyCodes. public static readonly CustomKeyCode[] combinedKeyCodes Field Value CustomKeyCode[] digits The keycodes 0-9. public static readonly CustomKeyCode[] digits Field Value CustomKeyCode[] Properties displayName What will be returned from ToString(). public string displayName { get; } Property Value string keyCodes The Unity KeyCodes comprising this keycode. public List<KeyCode> keyCodes { get; } Property Value List<KeyCode> Methods Contains(KeyCode) Returns true if the Unity KeyCode forms part of this CustomKeyCode. public bool Contains(KeyCode keyCode) Parameters keyCode KeyCode Returns bool Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. FromString(string) Converts a string into the keycode with that display name. Returns null if there isn't one. public static CustomKeyCode FromString(string displayName) Parameters displayName string Returns CustomKeyCode GetEnumerator() Returns an enumerator that iterates through a collection. public IEnumerator GetEnumerator() Returns IEnumerator An IEnumerator object that can be used to iterate through the collection. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. GetKey() Returns true while this key is being held down. public bool GetKey() Returns bool GetKeyDown() Returns true the frame this key is pressed. public bool GetKeyDown() Returns bool GetKeyUp() Returns true the frame this key is released. public bool GetKeyUp() Returns bool ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Operators operator ==(CustomKeyCode, CustomKeyCode) public static bool operator ==(CustomKeyCode keyCode1, CustomKeyCode keyCode2) Parameters keyCode1 CustomKeyCode keyCode2 CustomKeyCode Returns bool implicit operator CustomKeyCode(KeyCode) public static implicit operator CustomKeyCode(KeyCode keyCode) Parameters keyCode KeyCode Returns CustomKeyCode operator !=(CustomKeyCode, CustomKeyCode) public static bool operator !=(CustomKeyCode keyCode1, CustomKeyCode keyCode2) Parameters keyCode1 CustomKeyCode keyCode2 CustomKeyCode Returns bool"
  },
  "api/PAC.KeyboardShortcuts.KeyboardShortcut.html": {
    "href": "api/PAC.KeyboardShortcuts.KeyboardShortcut.html",
    "title": "Class KeyboardShortcut | |",
    "keywords": "Class KeyboardShortcut Namespace PAC.KeyboardShortcuts A class to represent a single keyboard shortcut. public class KeyboardShortcut : IJSONable Inheritance object KeyboardShortcut Implements IJSONable Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors KeyboardShortcut(params CustomKeyCode[]) Creates a shortcut from the given keycodes. Sorts the keycodes into the order they would be read. public KeyboardShortcut(params CustomKeyCode[] keyCodes) Parameters keyCodes CustomKeyCode[] Properties None The empty keyboard shortcut - i.e. no keycodes. public static KeyboardShortcut None { get; } Property Value KeyboardShortcut keyCodes The keycodes in this shortcut, kept in the order they would be read. public List<CustomKeyCode> keyCodes { get; } Property Value List<CustomKeyCode> Methods Add(CustomKeyCode) Adds the keycode to the shortcut. Returns false if it was already in the shortcut; otherwise returns true. public bool Add(CustomKeyCode keyCode) Parameters keyCode CustomKeyCode Returns bool Contains(CustomKeyCode) Returns true if the keycode is in the shortcut. public bool Contains(CustomKeyCode keyCode) Parameters keyCode CustomKeyCode Returns bool Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. GetKeys() Returns true while all keys are being held down. public bool GetKeys() Returns bool GetKeysDown() Returns true the frame the final key is pressed. public bool GetKeysDown() Returns bool GetKeysUp() Returns true the frame (any key of) this shortcut is released. public bool GetKeysUp() Returns bool Remove(CustomKeyCode) Removes the keycode from the shortcut. Returns false if the keycode already wasn't in the shortcut; otherwise returns true. public bool Remove(CustomKeyCode keyCode) Parameters keyCode CustomKeyCode Returns bool ToArray() Returns an array of the keycodes in this shortcut, in the order they would be read. public CustomKeyCode[] ToArray() Returns CustomKeyCode[] ToJSON() public JSON ToJSON() Returns JSON ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Operators operator ==(KeyboardShortcut, KeyboardShortcut) Checks if the shortcuts have the same set of keycodes. public static bool operator ==(KeyboardShortcut shortcut1, KeyboardShortcut shortcut2) Parameters shortcut1 KeyboardShortcut shortcut2 KeyboardShortcut Returns bool operator !=(KeyboardShortcut, KeyboardShortcut) Checks if the shortcuts do not have the same set of keycodes. public static bool operator !=(KeyboardShortcut shortcut1, KeyboardShortcut shortcut2) Parameters shortcut1 KeyboardShortcut shortcut2 KeyboardShortcut Returns bool"
  },
  "api/PAC.KeyboardShortcuts.KeyboardShortcutOptionsManager.html": {
    "href": "api/PAC.KeyboardShortcuts.KeyboardShortcutOptionsManager.html",
    "title": "Class KeyboardShortcutOptionsManager | |",
    "keywords": "Class KeyboardShortcutOptionsManager Namespace PAC.KeyboardShortcuts Handles the window where you can view / change keyboard shortcuts. public class KeyboardShortcutOptionsManager : MonoBehaviour Inheritance object KeyboardShortcutOptionsManager"
  },
  "api/PAC.KeyboardShortcuts.KeyboardShortcuts.html": {
    "href": "api/PAC.KeyboardShortcuts.KeyboardShortcuts.html",
    "title": "Class KeyboardShortcuts | |",
    "keywords": "Class KeyboardShortcuts Namespace PAC.KeyboardShortcuts A class for storing, loading and accessing keyboard shortcuts for defined actions. public class KeyboardShortcuts : MonoBehaviour Inheritance object KeyboardShortcuts Properties shortcuts A key is an action name. A value is a list of the keyboard shortcuts for that action. public static Dictionary<string, List<KeyboardShortcut>> shortcuts { get; } Property Value Dictionary<string, List<KeyboardShortcut>> Methods AddShortcut(string, params CustomKeyCode[]) Combines the given keycodes into a single shortcut and adds it for the given action. public static void AddShortcut(string actionName, params CustomKeyCode[] keyCodes) Parameters actionName string keyCodes CustomKeyCode[] AddShortcut(string, KeyboardShortcut) Adds the given shortcut for the given action. public static void AddShortcut(string actionName, KeyboardShortcut shortcut) Parameters actionName string shortcut KeyboardShortcut ClearShortcutsFor(string) Removes all shortcuts for the action. public static void ClearShortcutsFor(string actionName) Parameters actionName string ContainsKey(string) Returns true if the action is defined for having keyboard shortcuts. public static bool ContainsKey(string actionName) Parameters actionName string Returns bool ContainsShortcutFor(string) Returns true if the action has a shortcut. public static bool ContainsShortcutFor(string actionName) Parameters actionName string Returns bool GetShortcutsFor(string) Returns all shortcuts for the action. public static List<KeyboardShortcut> GetShortcutsFor(string actionName) Parameters actionName string Returns List<KeyboardShortcut> LoadShortcuts() Loads saved shortcuts from the disk. public static void LoadShortcuts() SaveShortcuts() Saves the current assignment of each shortcut to the disk. public static void SaveShortcuts() SetShortcut(string, KeyboardShortcut) Removes any existing shortcuts for the action then adds the given shortcut. public static void SetShortcut(string actionName, KeyboardShortcut shortcut) Parameters actionName string shortcut KeyboardShortcut ToJSON() Returns the list of keyboard shortcuts as a JSON object. public static JSON ToJSON() Returns JSON"
  },
  "api/PAC.KeyboardShortcuts.html": {
    "href": "api/PAC.KeyboardShortcuts.html",
    "title": "Namespace PAC.KeyboardShortcuts | |",
    "keywords": "Namespace PAC.KeyboardShortcuts Classes CustomKeyCode A class to supersede Unity's KeyCode enum to allow keycodes to refer to multiple keys - e.g. Shift instead of separated into LeftShift and RightShift. KeyboardShortcut A class to represent a single keyboard shortcut. KeyboardShortcutOptionsManager Handles the window where you can view / change keyboard shortcuts. KeyboardShortcuts A class for storing, loading and accessing keyboard shortcuts for defined actions."
  },
  "api/PAC.Layers.AnimFrameRefMode.html": {
    "href": "api/PAC.Layers.AnimFrameRefMode.html",
    "title": "Enum AnimFrameRefMode | |",
    "keywords": "Enum AnimFrameRefMode Namespace PAC.Layers public enum AnimFrameRefMode Fields MostRecentKeyFrame = 1 NewKeyFrame = 0"
  },
  "api/PAC.Layers.Layer.html": {
    "href": "api/PAC.Layers.Layer.html",
    "title": "Class Layer | |",
    "keywords": "Class Layer Namespace PAC.Layers An abstract class to define what each type of layer must have. public abstract class Layer : IJSONable Inheritance object Layer Implements IJSONable Derived NormalLayer TileLayer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Layer(Layer) public Layer(Layer layer) Parameters layer Layer Layer(string, Texture2D) public Layer(string name, Texture2D texture) Parameters name string texture Texture2D Fields _blendMode protected BlendMode _blendMode Field Value BlendMode _visible protected bool _visible Field Value bool onPixelsChanged Called when the SetPixel() or SetPixels() has been called. Passes the array of pixels changed and the frames it was called on. protected UnityEvent<IntVector2[], int[]> onPixelsChanged Field Value UnityEvent<IntVector2[], int[]> Properties this[int] Returns the texture of the most recent key frame before or at the frame index. Same as GetTexture(frame). public AnimationKeyFrame this[int frame] { get; } Parameters frame int Property Value AnimationKeyFrame blendMode public BlendMode blendMode { get; set; } Property Value BlendMode height public int height { get; protected set; } Property Value int keyFrameIndices The frame indices of the key frames in the animation, in order. public int[] keyFrameIndices { get; } Property Value int[] keyFrameTextures The textures of the key frames in the animation, in order. public Texture2D[] keyFrameTextures { get; } Property Value Texture2D[] keyFrames The key frames of the animation, in order. public List<AnimationKeyFrame> keyFrames { get; protected set; } Property Value List<AnimationKeyFrame> layerType public abstract LayerType layerType { get; } Property Value LayerType locked public bool locked { get; set; } Property Value bool name public string name { get; set; } Property Value string opacity public float opacity { get; set; } Property Value float rect public IntRect rect { get; } Property Value IntRect visible public bool visible { get; set; } Property Value bool width public int width { get; protected set; } Property Value int Methods AddKeyFrame(AnimationKeyFrame) Adds the given key frame. Returns true if it replaces an existing key frame, and false otherwise. protected bool AddKeyFrame(AnimationKeyFrame keyFrame) Parameters keyFrame AnimationKeyFrame Returns bool AddKeyFrame(int) Adds a key frame at frame frame. The texture will be that of the most recent key frame. Returns true if it replaces an existing key frame, and false otherwise. protected bool AddKeyFrame(int frame) Parameters frame int Returns bool AddKeyFrame(int, Texture2D) Adds a key frame with the given texture at frame frame. Returns true if it replaces an existing key frame, and false otherwise. protected bool AddKeyFrame(int frame, Texture2D texture) Parameters frame int texture Texture2D Returns bool ClearFrames() Deletes all key frames. public abstract void ClearFrames() DeepCopy() Creates a deep copy of the Layer. public abstract Layer DeepCopy() Returns Layer DeleteKeyFrame(AnimationKeyFrame) Deletes the given key frame, if it's in the animation, in which case it returns true. Otherwise it returns false. public bool DeleteKeyFrame(AnimationKeyFrame keyFrame) Parameters keyFrame AnimationKeyFrame Returns bool DeleteKeyFrame(int) public AnimationKeyFrame DeleteKeyFrame(int keyFrame) Parameters keyFrame int Returns AnimationKeyFrame DeleteKeyFrameNoEvent(int) Deletes the key frame at the given frame index, if there is one, in which case it returns that key frame. Otherwise it returns null. protected abstract AnimationKeyFrame DeleteKeyFrameNoEvent(int keyframe) Parameters keyframe int Returns AnimationKeyFrame DeleteMostRecentKeyFrame(int) Deletes the most recent key frame before or at the given frame index and returns that key frame. public AnimationKeyFrame DeleteMostRecentKeyFrame(int frame) Parameters frame int Returns AnimationKeyFrame Extend(int, int, int, int) Extends the dimensions of the layer in each direction by the given amounts. public void Extend(int left, int right, int up, int down) Parameters left int right int up int down int ExtendNoEvent(int, int, int, int) Extends the dimensions of the layer in each direction by the given amounts, but does not invoke the onPixelsChanged event. protected abstract void ExtendNoEvent(int left, int right, int up, int down) Parameters left int right int up int down int Flip(FlipDirection) Flips the layer. public void Flip(FlipDirection direction) Parameters direction FlipDirection FlipNoEvent(FlipDirection) Flips the layer, but does not invoke the onPixelsChanged event. protected abstract void FlipNoEvent(FlipDirection direction) Parameters direction FlipDirection FromJSON(JSON) public static Layer FromJSON(JSON json) Parameters json JSON Returns Layer GetKeyFrame(int) Returns the most recent key frame before or at the frame index - i.e. the key frame the animation will play at the frame index. public AnimationKeyFrame GetKeyFrame(int frame) Parameters frame int Returns AnimationKeyFrame GetPixel(IntVector2, int, bool) Gets the colour of the pixel. public abstract Color GetPixel(IntVector2 pixel, int frame, bool useLayerOpacity = true) Parameters pixel IntVector2 frame int useLayerOpacity bool Returns Color GetPixel(int, int, int, bool) Gets the colour of the pixel (x, y). public Color GetPixel(int x, int y, int frame, bool useLayerOpacity = true) Parameters x int y int frame int useLayerOpacity bool Returns Color HasKeyFrameAt(int) Returns whether or not there is a key frame at the given frame index. public bool HasKeyFrameAt(int frame) Parameters frame int Returns bool IsBlank() Returns true if and only if all pixels are completely transparent. public bool IsBlank() Returns bool LoadJSON(JSON) protected abstract void LoadJSON(JSON json) Parameters json JSON Rotate(RotationAngle) Rotates the layer. Rotation is clockwise. public void Rotate(RotationAngle angle) Parameters angle RotationAngle RotateNoEvent(RotationAngle) Rotates the layer, but does not invoke the onPixelsChanged event. Rotation is clockwise. protected abstract void RotateNoEvent(RotationAngle angle) Parameters angle RotationAngle Scale(int, int) Resizes the dimensions of the file by the scale factor. public void Scale(int newWidth, int newHeight) Parameters newWidth int newHeight int Scale(float) Resizes the dimensions of the file by the scale factor. public void Scale(float scaleFactor) Parameters scaleFactor float Scale(float, float) Resizes the dimensions of the file by the scale factors. public void Scale(float xScaleFactor, float yScaleFactor) Parameters xScaleFactor float yScaleFactor float ScaleNoEvent(int, int) Resizes the dimensions to the new width and height, but does not invoke the onPixelsChanged event. protected abstract void ScaleNoEvent(int newWidth, int newHeight) Parameters newWidth int newHeight int ScaleNoEvent(float, float) Resizes the dimensions of the file by the scale factors, but does not invoke the onPixelsChanged event. protected abstract void ScaleNoEvent(float xScaleFactor, float yScaleFactor) Parameters xScaleFactor float yScaleFactor float SetPixel(IntVector2, int, Color, AnimFrameRefMode) Sets the colour of the pixel. Throws an error if the pixel is outside the layer. public IntVector2[] SetPixel(IntVector2 pixel, int frame, Color colour, AnimFrameRefMode frameRefMode) Parameters pixel IntVector2 frame int colour Color frameRefMode AnimFrameRefMode Returns IntVector2[] SetPixel(int, int, int, Color, AnimFrameRefMode) Sets the colour of the pixel (x, y). Throws an error if the pixel is outside the layer. public IntVector2[] SetPixel(int x, int y, int frame, Color colour, AnimFrameRefMode frameRefMode) Parameters x int y int frame int colour Color frameRefMode AnimFrameRefMode Returns IntVector2[] SetPixels(IntVector2[], int, Color, AnimFrameRefMode) Sets the colour of the pixels. Throws an error if a pixel is outside the layer. public IntVector2[] SetPixels(IntVector2[] pixels, int frame, Color colour, AnimFrameRefMode frameRefMode) Parameters pixels IntVector2[] frame int colour Color frameRefMode AnimFrameRefMode Returns IntVector2[] SetPixelsNoEvent(IntVector2[], int, Color, AnimFrameRefMode) Sets the colour of the pixels. You do not need to check the pixels are in the layer as this check is done in Layer.SetPixels(), which is the only way this method is called. protected abstract IntVector2[] SetPixelsNoEvent(IntVector2[] pixels, int frame, Color colour, AnimFrameRefMode frameRefMode) Parameters pixels IntVector2[] frame int colour Color frameRefMode AnimFrameRefMode Returns IntVector2[] SubscribeToOnBlendModeChanged(UnityAction) public void SubscribeToOnBlendModeChanged(UnityAction call) Parameters call UnityAction SubscribeToOnKeyFrameAdded(UnityAction<int>) public void SubscribeToOnKeyFrameAdded(UnityAction<int> call) Parameters call UnityAction<int> SubscribeToOnKeyFrameRemoved(UnityAction<int>) public void SubscribeToOnKeyFrameRemoved(UnityAction<int> call) Parameters call UnityAction<int> SubscribeToOnPixelsChanged(UnityAction<IntVector2[], int[]>) public void SubscribeToOnPixelsChanged(UnityAction<IntVector2[], int[]> call) Parameters call UnityAction<IntVector2[], int[]> SubscribeToOnVisibilityChanged(UnityAction) public void SubscribeToOnVisibilityChanged(UnityAction call) Parameters call UnityAction ToJSON() public abstract JSON ToJSON() Returns JSON"
  },
  "api/PAC.Layers.LayerManager.html": {
    "href": "api/PAC.Layers.LayerManager.html",
    "title": "Class LayerManager | |",
    "keywords": "Class LayerManager Namespace PAC.Layers public class LayerManager : MonoBehaviour Inheritance object LayerManager Fields layerTypeSprite public Sprite layerTypeSprite Field Value Sprite tileLayerTypeSprite public Sprite tileLayerTypeSprite Field Value Sprite Properties selectedLayer The last layer that was selected. public Layer selectedLayer { get; } Property Value Layer selectedLayerIndex The index of the last layer that was selected. public int selectedLayerIndex { get; } Property Value int selectedLayerIndices The indices of all selected layers, in increasing order. public int[] selectedLayerIndices { get; } Property Value int[] selectedLayers The selected layers, in order (highest layer first etc). public Layer[] selectedLayers { get; } Property Value Layer[] Methods AddLayer() public void AddLayer() AddLayer(Texture2D) public void AddLayer(Texture2D texture) Parameters texture Texture2D AddTileLayer() public void AddTileLayer() DuplicateSelectedLayers() public void DuplicateSelectedLayers() FlattenSelectedLayers() public void FlattenSelectedLayers() HideAllBut(Layer) public void HideAllBut(Layer layer) Parameters layer Layer MoveSelectedLayersDown() public void MoveSelectedLayersDown() MoveSelectedLayersUp() public void MoveSelectedLayersUp() OnFileSwitched() public void OnFileSwitched() OnLayersChanged() public void OnLayersChanged() RemoveSelectedLayers() public void RemoveSelectedLayers() SetLayerBlendMode(int, BlendMode) public void SetLayerBlendMode(int layerIndex, BlendMode blendMode) Parameters layerIndex int blendMode BlendMode SetLayerName(int, string) public void SetLayerName(int layerIndex, string layerName) Parameters layerIndex int layerName string SetLayerOpacity(int, float) public void SetLayerOpacity(int layerIndex, float opacity) Parameters layerIndex int opacity float SubscribeToLayerChange(UnityAction) public void SubscribeToLayerChange(UnityAction call) Parameters call UnityAction SubscribeToVisibilityChange(UnityAction) public void SubscribeToVisibilityChange(UnityAction call) Parameters call UnityAction WorldYCoordOfLayerTile(int) public float WorldYCoordOfLayerTile(int layerTileIndex) Parameters layerTileIndex int Returns float"
  },
  "api/PAC.Layers.LayerTile.html": {
    "href": "api/PAC.Layers.LayerTile.html",
    "title": "Class LayerTile | |",
    "keywords": "Class LayerTile Namespace PAC.Layers public class LayerTile : MonoBehaviour Inheritance object LayerTile Properties layer public Layer layer { get; } Property Value Layer selected public bool selected { get; } Property Value bool tileToggle public UIToggleButton tileToggle { get; } Property Value UIToggleButton Methods SetLayer(Layer) public void SetLayer(Layer layer) Parameters layer Layer SubscribeToLockChange(UnityAction) public void SubscribeToLockChange(UnityAction call) Parameters call UnityAction SubscribeToNameChange(UnityAction) public void SubscribeToNameChange(UnityAction call) Parameters call UnityAction SubscribeToRightClick(UnityAction) public void SubscribeToRightClick(UnityAction call) Parameters call UnityAction SubscribeToVisibilityChange(UnityAction) public void SubscribeToVisibilityChange(UnityAction call) Parameters call UnityAction"
  },
  "api/PAC.Layers.LayerType.html": {
    "href": "api/PAC.Layers.LayerType.html",
    "title": "Enum LayerType | |",
    "keywords": "Enum LayerType Namespace PAC.Layers public enum LayerType Fields Normal = 0 Tile = 1"
  },
  "api/PAC.Layers.NormalLayer.html": {
    "href": "api/PAC.Layers.NormalLayer.html",
    "title": "Class NormalLayer | |",
    "keywords": "Class NormalLayer Namespace PAC.Layers A class to represent a normal layer - one that can be drawn on as a regular image. public class NormalLayer : Layer, IJSONable Inheritance object Layer NormalLayer Implements IJSONable Inherited Members Layer.name Layer.width Layer.height Layer.rect Layer._visible Layer.visible Layer.locked Layer.opacity Layer._blendMode Layer.blendMode Layer.keyFrames Layer.keyFrameIndices Layer.keyFrameTextures Layer.onPixelsChanged Layer.SetPixel(int, int, int, Color, AnimFrameRefMode) Layer.SetPixel(IntVector2, int, Color, AnimFrameRefMode) Layer.SetPixels(IntVector2[], int, Color, AnimFrameRefMode) Layer.GetPixel(int, int, int, bool) Layer.IsBlank() Layer.Flip(FlipDirection) Layer.Rotate(RotationAngle) Layer.Extend(int, int, int, int) Layer.Scale(float) Layer.Scale(float, float) Layer.Scale(int, int) Layer.FromJSON(JSON) Layer.this[int] Layer.GetKeyFrame(int) Layer.HasKeyFrameAt(int) Layer.AddKeyFrame(int) Layer.AddKeyFrame(int, Texture2D) Layer.AddKeyFrame(AnimationKeyFrame) Layer.DeleteMostRecentKeyFrame(int) Layer.DeleteKeyFrame(int) Layer.DeleteKeyFrame(AnimationKeyFrame) Layer.SubscribeToOnPixelsChanged(UnityAction<IntVector2[], int[]>) Layer.SubscribeToOnVisibilityChanged(UnityAction) Layer.SubscribeToOnBlendModeChanged(UnityAction) Layer.SubscribeToOnKeyFrameAdded(UnityAction<int>) Layer.SubscribeToOnKeyFrameRemoved(UnityAction<int>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NormalLayer(NormalLayer) Creates a deep copy of the NormalLayer. public NormalLayer(NormalLayer layer) Parameters layer NormalLayer NormalLayer(int, int) public NormalLayer(int width, int height) Parameters width int height int NormalLayer(string, int, int) public NormalLayer(string name, int width, int height) Parameters name string width int height int NormalLayer(string, Texture2D) public NormalLayer(string name, Texture2D texture) Parameters name string texture Texture2D NormalLayer(Texture2D) public NormalLayer(Texture2D texture) Parameters texture Texture2D Properties layerType public override LayerType layerType { get; } Property Value LayerType Methods ClearFrames() Deletes all key frames. public override void ClearFrames() DeepCopy() Creates a deep copy of the Layer. public override Layer DeepCopy() Returns Layer DeleteKeyFrameNoEvent(int) Deletes the key frame at the given frame index, if there is one, in which case it returns that key frame. Otherwise it returns null. protected override AnimationKeyFrame DeleteKeyFrameNoEvent(int keyframe) Parameters keyframe int Returns AnimationKeyFrame ExtendNoEvent(int, int, int, int) Extends the dimensions of the layer in each direction by the given amounts, but does not invoke the onPixelsChanged event. protected override void ExtendNoEvent(int left, int right, int up, int down) Parameters left int right int up int down int Flip(int, FlipDirection, AnimFrameRefMode) Flips the given frame of the layer. public void Flip(int frame, FlipDirection direction, AnimFrameRefMode frameRefMode) Parameters frame int direction FlipDirection frameRefMode AnimFrameRefMode FlipNoEvent(FlipDirection) Flips the layer, but does not invoke the onPixelsChanged event. protected override void FlipNoEvent(FlipDirection direction) Parameters direction FlipDirection GetPixel(IntVector2, int, bool) Gets the colour of the pixel. public override Color GetPixel(IntVector2 pixel, int frame, bool useLayerOpacity = true) Parameters pixel IntVector2 frame int useLayerOpacity bool Returns Color LoadJSON(JSON) protected override void LoadJSON(JSON json) Parameters json JSON Offset(IntVector2) Offsets the texture of every frame. (Moves the texture so the bottom-left corner is at the coordinates 'offset'. public void Offset(IntVector2 offset) Parameters offset IntVector2 Offset(int, IntVector2, AnimFrameRefMode) Offsets the texture at the given frame. (Moves the texture so the bottom-left corner is at the coordinates 'offset'. public void Offset(int frame, IntVector2 offset, AnimFrameRefMode frameRefMode) Parameters frame int offset IntVector2 frameRefMode AnimFrameRefMode OverlayTexture(int, Texture2D, IntVector2, AnimFrameRefMode) Overlays the texture onto the given frame, placing the bottom-left corner at the coordinates 'offset' (which don't have to be within the image). Uses Normal blend mode. public void OverlayTexture(int frame, Texture2D overlayTex, IntVector2 offset, AnimFrameRefMode frameRefMode) Parameters frame int overlayTex Texture2D offset IntVector2 frameRefMode AnimFrameRefMode OverlayTexture(int, Texture2D, AnimFrameRefMode) Overlays the texture onto the given frame. Uses Normal blend mode. public void OverlayTexture(int frame, Texture2D overlayTex, AnimFrameRefMode frameRefMode) Parameters frame int overlayTex Texture2D frameRefMode AnimFrameRefMode OverlayTexture(Texture2D) Overlays the texture onto every frame. Uses Normal blend mode. public void OverlayTexture(Texture2D overlayTex) Parameters overlayTex Texture2D OverlayTexture(Texture2D, IntVector2) Overlays the texture onto every frame, placing the bottom-left corner at the coordinates 'offset' (which don't have to be within the image). Uses Normal blend mode. public void OverlayTexture(Texture2D overlayTex, IntVector2 offset) Parameters overlayTex Texture2D offset IntVector2 Rotate(int, RotationAngle, AnimFrameRefMode) Rotates the given frame of the layer. Rotation is clockwise. public void Rotate(int frame, RotationAngle angle, AnimFrameRefMode frameRefMode) Parameters frame int angle RotationAngle frameRefMode AnimFrameRefMode RotateNoEvent(RotationAngle) Rotates the layer, but does not invoke the onPixelsChanged event. Rotation is clockwise. protected override void RotateNoEvent(RotationAngle angle) Parameters angle RotationAngle ScaleNoEvent(int, int) Resizes the dimensions to the new width and height, but does not invoke the onPixelsChanged event. protected override void ScaleNoEvent(int newWidth, int newHeight) Parameters newWidth int newHeight int ScaleNoEvent(float, float) Resizes the dimensions of the file by the scale factors, but does not invoke the onPixelsChanged event. protected override void ScaleNoEvent(float xScaleFactor, float yScaleFactor) Parameters xScaleFactor float yScaleFactor float SetPixelsNoEvent(IntVector2[], int, Color, AnimFrameRefMode) Sets the colour of the pixels. You do not need to check the pixels are in the layer as this check is done in Layer.SetPixels(), which is the only way this method is called. protected override IntVector2[] SetPixelsNoEvent(IntVector2[] pixels, int frame, Color colour, AnimFrameRefMode frameRefMode) Parameters pixels IntVector2[] frame int colour Color frameRefMode AnimFrameRefMode Returns IntVector2[] SetTexture(int, Texture2D, AnimFrameRefMode) Sets the texture at the given frame. public void SetTexture(int frame, Texture2D texture, AnimFrameRefMode frameRefMode) Parameters frame int texture Texture2D frameRefMode AnimFrameRefMode ToJSON() public override JSON ToJSON() Returns JSON"
  },
  "api/PAC.Layers.TileLayer.html": {
    "href": "api/PAC.Layers.TileLayer.html",
    "title": "Class TileLayer | |",
    "keywords": "Class TileLayer Namespace PAC.Layers A class to represent a tile layer - one for placing and editing tileset tiles. public class TileLayer : Layer, IJSONable Inheritance object Layer TileLayer Implements IJSONable Inherited Members Layer.name Layer.width Layer.height Layer.rect Layer._visible Layer.visible Layer.locked Layer.opacity Layer._blendMode Layer.blendMode Layer.keyFrames Layer.keyFrameIndices Layer.keyFrameTextures Layer.onPixelsChanged Layer.SetPixel(int, int, int, Color, AnimFrameRefMode) Layer.SetPixel(IntVector2, int, Color, AnimFrameRefMode) Layer.SetPixels(IntVector2[], int, Color, AnimFrameRefMode) Layer.GetPixel(int, int, int, bool) Layer.IsBlank() Layer.Flip(FlipDirection) Layer.Rotate(RotationAngle) Layer.Extend(int, int, int, int) Layer.Scale(float) Layer.Scale(float, float) Layer.Scale(int, int) Layer.FromJSON(JSON) Layer.this[int] Layer.GetKeyFrame(int) Layer.HasKeyFrameAt(int) Layer.AddKeyFrame(int) Layer.AddKeyFrame(int, Texture2D) Layer.AddKeyFrame(AnimationKeyFrame) Layer.DeleteMostRecentKeyFrame(int) Layer.DeleteKeyFrame(int) Layer.DeleteKeyFrame(AnimationKeyFrame) Layer.SubscribeToOnPixelsChanged(UnityAction<IntVector2[], int[]>) Layer.SubscribeToOnVisibilityChanged(UnityAction) Layer.SubscribeToOnBlendModeChanged(UnityAction) Layer.SubscribeToOnKeyFrameAdded(UnityAction<int>) Layer.SubscribeToOnKeyFrameRemoved(UnityAction<int>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TileLayer(TileLayer) Creates a deep copy of the TileLayer. public TileLayer(TileLayer layer) Parameters layer TileLayer TileLayer(string, int, int) public TileLayer(string name, int width, int height) Parameters name string width int height int Properties layerType public override LayerType layerType { get; } Property Value LayerType tiles The tiles on this layer. public List<Tile> tiles { get; } Property Value List<Tile> Methods AddTile(Tile) Adds the tile to the layer. public void AddTile(Tile tile) Parameters tile Tile ClearFrames() Deletes all key frames. public override void ClearFrames() ClearTiles() Removes all tiles. public void ClearTiles() ContainsTile(Tile) Returns true if the tile appears on this layer. public bool ContainsTile(Tile tile) Parameters tile Tile Returns bool DeepCopy() Creates a deep copy of the Layer. public override Layer DeepCopy() Returns Layer DeleteKeyFrameNoEvent(int) Deletes the key frame at the given frame index, if there is one, in which case it returns that key frame. Otherwise it returns null. protected override AnimationKeyFrame DeleteKeyFrameNoEvent(int keyframe) Parameters keyframe int Returns AnimationKeyFrame ExtendNoEvent(int, int, int, int) Extends the dimensions of the layer in each direction by the given amounts, but does not invoke the onPixelsChanged event. protected override void ExtendNoEvent(int left, int right, int up, int down) Parameters left int right int up int down int FlipNoEvent(FlipDirection) Flips the layer, but does not invoke the onPixelsChanged event. protected override void FlipNoEvent(FlipDirection direction) Parameters direction FlipDirection GetLinkedPixels(IntVector2) Get the pixels that are linked to the given pixel due to multiple tiles having the same file - i.e. they point to the same pixel within the tiles' file. public IntVector2[] GetLinkedPixels(IntVector2 pixel) Parameters pixel IntVector2 Returns IntVector2[] GetLinkedPixels(IntVector2[]) Get the pixels that are linked to the given pixels due to multiple tiles having the same file - i.e. they point to the same pixels within the tiles' file. public IntVector2[] GetLinkedPixels(IntVector2[] pixels) Parameters pixels IntVector2[] Returns IntVector2[] GetPixel(IntVector2, int, bool) Gets the colour of the pixel. public override Color GetPixel(IntVector2 pixel, int frame, bool useLayerOpacity = true) Parameters pixel IntVector2 frame int useLayerOpacity bool Returns Color LoadJSON(JSON) protected override void LoadJSON(JSON json) Parameters json JSON PixelToTile(IntVector2) Gets the tile that the pixel lands in, or null if there isn't one. public Tile PixelToTile(IntVector2 pixel) Parameters pixel IntVector2 Returns Tile PixelToTile(int, int) Gets the tile that the pixel (x, y) lands in, or null if there isn't one. public Tile PixelToTile(int x, int y) Parameters x int y int Returns Tile RemoveTile(Tile) Removes the tile from the layer. Throws an error if the tile is not in the layer. public void RemoveTile(Tile tile) Parameters tile Tile RerenderKeyFrame(int) Rerenders the keyframe. public void RerenderKeyFrame(int frame) Parameters frame int RerenderKeyFrame(int, IntRect) Rerenders the section of the keyframe within the given rect. public void RerenderKeyFrame(int frame, IntRect rect) Parameters frame int rect IntRect RerenderKeyFrame(int, IntVector2[]) Rerenders the given pixels of the keyframe. public void RerenderKeyFrame(int frame, IntVector2[] pixels) Parameters frame int pixels IntVector2[] RerenderKeyFrames() Rerenders all keyframes. public void RerenderKeyFrames() RerenderKeyFrames(IntRect) Rerenders the section of every keyframe within the given rect. public void RerenderKeyFrames(IntRect rect) Parameters rect IntRect RerenderKeyFrames(IntVector2[]) Rerenders the given pixels of every keyframe. public void RerenderKeyFrames(IntVector2[] pixels) Parameters pixels IntVector2[] RerenderKeyFrames(int[]) Rerenders the given keyframes. public void RerenderKeyFrames(int[] keyFrames) Parameters keyFrames int[] RerenderKeyFrames(int[], IntRect) Rerenders the section of the given keyframes within the given rect. public void RerenderKeyFrames(int[] keyFrames, IntRect rect) Parameters keyFrames int[] rect IntRect RerenderKeyFrames(int[], IntVector2[]) Rerenders the given pixels of the given keyframes. public void RerenderKeyFrames(int[] keyFrames, IntVector2[] pixels) Parameters keyFrames int[] pixels IntVector2[] RotateNoEvent(RotationAngle) Rotates the layer, but does not invoke the onPixelsChanged event. Rotation is clockwise. protected override void RotateNoEvent(RotationAngle angle) Parameters angle RotationAngle ScaleNoEvent(int, int) Resizes the dimensions to the new width and height, but does not invoke the onPixelsChanged event. protected override void ScaleNoEvent(int newWidth, int newHeight) Parameters newWidth int newHeight int ScaleNoEvent(float, float) Resizes the dimensions of the file by the scale factors, but does not invoke the onPixelsChanged event. protected override void ScaleNoEvent(float xScaleFactor, float yScaleFactor) Parameters xScaleFactor float yScaleFactor float SetPixelsNoEvent(IntVector2[], int, Color, AnimFrameRefMode) Sets the colour of the pixels. You do not need to check the pixels are in the layer as this check is done in Layer.SetPixels(), which is the only way this method is called. protected override IntVector2[] SetPixelsNoEvent(IntVector2[] pixels, int frame, Color colour, AnimFrameRefMode frameRefMode) Parameters pixels IntVector2[] frame int colour Color frameRefMode AnimFrameRefMode Returns IntVector2[] ToJSON() public override JSON ToJSON() Returns JSON"
  },
  "api/PAC.Layers.html": {
    "href": "api/PAC.Layers.html",
    "title": "Namespace PAC.Layers | |",
    "keywords": "Namespace PAC.Layers Classes Layer An abstract class to define what each type of layer must have. LayerManager LayerTile NormalLayer A class to represent a normal layer - one that can be drawn on as a regular image. TileLayer A class to represent a tile layer - one for placing and editing tileset tiles. Enums AnimFrameRefMode LayerType"
  },
  "api/PAC.OutlineSideFill.html": {
    "href": "api/PAC.OutlineSideFill.html",
    "title": "Struct OutlineSideFill | |",
    "keywords": "Struct OutlineSideFill Namespace PAC public struct OutlineSideFill Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors OutlineSideFill(bool, bool, bool, bool, bool, bool, bool, bool) public OutlineSideFill(bool topLeft, bool topMiddle, bool topRight, bool middleLeft, bool middleRight, bool bottomLeft, bool bottomMiddle, bool bottomRight) Parameters topLeft bool topMiddle bool topRight bool middleLeft bool middleRight bool bottomLeft bool bottomMiddle bool bottomRight bool Fields bottomLeft public bool bottomLeft Field Value bool bottomMiddle public bool bottomMiddle Field Value bool bottomRight public bool bottomRight Field Value bool middleLeft public bool middleLeft Field Value bool middleRight public bool middleRight Field Value bool topLeft public bool topLeft Field Value bool topMiddle public bool topMiddle Field Value bool topRight public bool topRight Field Value bool"
  },
  "api/PAC.RotationAngle.html": {
    "href": "api/PAC.RotationAngle.html",
    "title": "Enum RotationAngle | |",
    "keywords": "Enum RotationAngle Namespace PAC public enum RotationAngle Fields Minus90 = -90 _0 = 0 _180 = 180 _90 = 90"
  },
  "api/PAC.Screen.MaximiseWindow.html": {
    "href": "api/PAC.Screen.MaximiseWindow.html",
    "title": "Class MaximiseWindow | |",
    "keywords": "Class MaximiseWindow Namespace PAC.Screen public class MaximiseWindow : MonoBehaviour Inheritance object MaximiseWindow Methods ShowWindowAsync(int, int) public static extern bool ShowWindowAsync(int hWnd, int nCmdShow) Parameters hWnd int nCmdShow int Returns bool"
  },
  "api/PAC.Screen.ScreenInfo.html": {
    "href": "api/PAC.Screen.ScreenInfo.html",
    "title": "Class ScreenInfo | |",
    "keywords": "Class ScreenInfo Namespace PAC.Screen public static class ScreenInfo Inheritance object ScreenInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties screenWorldHeight Returns the height of the screen in world coords. public static float screenWorldHeight { get; } Property Value float screenWorldWidth Returns the width of the screen in world coords. public static float screenWorldWidth { get; } Property Value float Methods GetScreenPixelColour(IntVector2) Returns the colour of the screen pixel at the given coords. Best results when called after end of frame, using 'yield return new WaitForEndOfFrame()'. public static Color GetScreenPixelColour(IntVector2 coords) Parameters coords IntVector2 Returns Color GetScreenPixelColour(int, int) Returns the colour of the screen pixel at coords (x, y). Best results when called after end of frame, using 'yield return new WaitForEndOfFrame()'. public static Color GetScreenPixelColour(int x, int y) Parameters x int y int Returns Color"
  },
  "api/PAC.Screen.html": {
    "href": "api/PAC.Screen.html",
    "title": "Namespace PAC.Screen | |",
    "keywords": "Namespace PAC.Screen Classes MaximiseWindow ScreenInfo"
  },
  "api/PAC.Serialization.LayerSerializationSurrogate.html": {
    "href": "api/PAC.Serialization.LayerSerializationSurrogate.html",
    "title": "Class LayerSerializationSurrogate | |",
    "keywords": "Class LayerSerializationSurrogate Namespace PAC.Serialization [Obsolete] public class LayerSerializationSurrogate : ISerializationSurrogate Inheritance object LayerSerializationSurrogate Implements ISerializationSurrogate Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetObjectData(object, SerializationInfo, StreamingContext) Populates the provided SerializationInfo with the data needed to serialize the object. public void GetObjectData(object obj, SerializationInfo info, StreamingContext context) Parameters obj object The object to serialize. info SerializationInfo The SerializationInfo to populate with data. context StreamingContext The destination (see StreamingContext) for this serialization. Exceptions SecurityException The caller does not have the required permission. SetObjectData(object, SerializationInfo, StreamingContext, ISurrogateSelector) Populates the object using the information in the SerializationInfo. public object SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector) Parameters obj object The object to populate. info SerializationInfo The information to populate the object. context StreamingContext The source from which the object is deserialized. selector ISurrogateSelector The surrogate selector where the search for a compatible surrogate begins. Returns object The populated deserialized object. Exceptions SecurityException The caller does not have the required permission."
  },
  "api/PAC.Serialization.Texture2DSerializationSurrogate.html": {
    "href": "api/PAC.Serialization.Texture2DSerializationSurrogate.html",
    "title": "Class Texture2DSerializationSurrogate | |",
    "keywords": "Class Texture2DSerializationSurrogate Namespace PAC.Serialization [Obsolete] public class Texture2DSerializationSurrogate : ISerializationSurrogate Inheritance object Texture2DSerializationSurrogate Implements ISerializationSurrogate Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetObjectData(object, SerializationInfo, StreamingContext) Populates the provided SerializationInfo with the data needed to serialize the object. public void GetObjectData(object obj, SerializationInfo info, StreamingContext context) Parameters obj object The object to serialize. info SerializationInfo The SerializationInfo to populate with data. context StreamingContext The destination (see StreamingContext) for this serialization. Exceptions SecurityException The caller does not have the required permission. SetObjectData(object, SerializationInfo, StreamingContext, ISurrogateSelector) Populates the object using the information in the SerializationInfo. public object SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector) Parameters obj object The object to populate. info SerializationInfo The information to populate the object. context StreamingContext The source from which the object is deserialized. selector ISurrogateSelector The surrogate selector where the search for a compatible surrogate begins. Returns object The populated deserialized object. Exceptions SecurityException The caller does not have the required permission."
  },
  "api/PAC.Serialization.html": {
    "href": "api/PAC.Serialization.html",
    "title": "Namespace PAC.Serialization | |",
    "keywords": "Namespace PAC.Serialization Classes LayerSerializationSurrogate Texture2DSerializationSurrogate"
  },
  "api/PAC.Shaders.HueSaturationBoxShader.html": {
    "href": "api/PAC.Shaders.HueSaturationBoxShader.html",
    "title": "Class HueSaturationBoxShader | |",
    "keywords": "Class HueSaturationBoxShader Namespace PAC.Shaders public class HueSaturationBoxShader : MonoBehaviour Inheritance object HueSaturationBoxShader Fields hueSaturationBoxMaterial public Material hueSaturationBoxMaterial Field Value Material"
  },
  "api/PAC.Shaders.LightnessSliderShader.html": {
    "href": "api/PAC.Shaders.LightnessSliderShader.html",
    "title": "Class LightnessSliderShader | |",
    "keywords": "Class LightnessSliderShader Namespace PAC.Shaders public class LightnessSliderShader : MonoBehaviour Inheritance object LightnessSliderShader Fields lightnessSliderMaterial public Material lightnessSliderMaterial Field Value Material"
  },
  "api/PAC.Shaders.Outline.html": {
    "href": "api/PAC.Shaders.Outline.html",
    "title": "Class Outline | |",
    "keywords": "Class Outline Namespace PAC.Shaders public class Outline : MonoBehaviour Inheritance object Outline Fields outlineMaterial public Material outlineMaterial Field Value Material Properties colour public Color colour { get; set; } Property Value Color keepExistingTexture public bool keepExistingTexture { get; set; } Property Value bool outlineEnabled public bool outlineEnabled { get; set; } Property Value bool thickness public float thickness { get; set; } Property Value float"
  },
  "api/PAC.Shaders.RainbowOutline.html": {
    "href": "api/PAC.Shaders.RainbowOutline.html",
    "title": "Class RainbowOutline | |",
    "keywords": "Class RainbowOutline Namespace PAC.Shaders public class RainbowOutline : MonoBehaviour Inheritance object RainbowOutline Fields rainbowOutlineMaterial public Material rainbowOutlineMaterial Field Value Material Properties keepExistingTexture public bool keepExistingTexture { get; set; } Property Value bool outlineEnabled public bool outlineEnabled { get; set; } Property Value bool thickness public float thickness { get; set; } Property Value float"
  },
  "api/PAC.Shaders.html": {
    "href": "api/PAC.Shaders.html",
    "title": "Namespace PAC.Shaders | |",
    "keywords": "Namespace PAC.Shaders Classes HueSaturationBoxShader LightnessSliderShader Outline RainbowOutline"
  },
  "api/PAC.Tex2DSprite.html": {
    "href": "api/PAC.Tex2DSprite.html",
    "title": "Class Tex2DSprite | |",
    "keywords": "Class Tex2DSprite Namespace PAC public static class Tex2DSprite Inheritance object Tex2DSprite Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ApplyMask(Texture2D, IntVector2[]) public static Texture2D ApplyMask(Texture2D texture, IntVector2[] mask) Parameters texture Texture2D mask IntVector2[] Returns Texture2D ApplyMask(Texture2D, Texture2D) public static Texture2D ApplyMask(Texture2D texture, Texture2D mask) Parameters texture Texture2D mask Texture2D Returns Texture2D BlankTexture(int, int) public static Texture2D BlankTexture(int width, int height) Parameters width int height int Returns Texture2D Blend(Color, Texture2D, BlendMode) Overlays topColour onto each pixel of bottomTex using the given blend mode. public static Texture2D Blend(Color topColour, Texture2D bottomTex, BlendMode blendMode) Parameters topColour Color bottomTex Texture2D blendMode BlendMode Returns Texture2D Blend(Texture2D, Texture2D, BlendMode) Overlays topTex onto bottomTex using the given blend mode, placing the bottom-left corner on the bottom-left corner. public static Texture2D Blend(Texture2D topTex, Texture2D bottomTex, BlendMode blendMode) Parameters topTex Texture2D bottomTex Texture2D blendMode BlendMode Returns Texture2D Blend(Texture2D, Texture2D, IntVector2, BlendMode) Overlays topTex onto bottomTex using the given blend mode, placing the bottom-left corner at the coordinates topTexOffset (which don't have to be within the image). public static Texture2D Blend(Texture2D topTex, Texture2D bottomTex, IntVector2 topTexOffset, BlendMode blendMode) Parameters topTex Texture2D bottomTex Texture2D topTexOffset IntVector2 blendMode BlendMode Returns Texture2D ChangeRect(Texture2D, IntRect) Changes the dimensions of the texture to the new rect. public static Texture2D ChangeRect(Texture2D texture, IntRect newRect) Parameters texture Texture2D newRect IntRect The coords of the new rect relative to the coords of the old rect. Returns Texture2D CheckerboardBackground(int, int) public static Texture2D CheckerboardBackground(int width, int height) Parameters width int height int Returns Texture2D ContainsPixel(Texture2D, IntVector2) public static bool ContainsPixel(this Texture2D texture, IntVector2 pixel) Parameters texture Texture2D pixel IntVector2 Returns bool ContainsPixel(Texture2D, int, int) public static bool ContainsPixel(this Texture2D texture, int x, int y) Parameters texture Texture2D x int y int Returns bool Copy(Texture2D) public static Texture2D Copy(Texture2D texture) Parameters texture Texture2D Returns Texture2D Extend(Texture2D, int, int, int, int) Adds the given number of transparent pixels to each side of the texture. Negative amounts will crop the image. public static Texture2D Extend(Texture2D texture, int left, int right, int up, int down) Parameters texture Texture2D left int right int up int down int Returns Texture2D Fill(Texture2D, IntVector2, Color, int) public static Texture2D Fill(Texture2D texture, IntVector2 startPoint, Color colour, int maxNumOfIterations = 1000000) Parameters texture Texture2D startPoint IntVector2 colour Color maxNumOfIterations int Returns Texture2D Flip(Texture2D, FlipDirection) public static Texture2D Flip(Texture2D texture, FlipDirection direction) Parameters texture Texture2D direction FlipDirection Returns Texture2D FlipX(Texture2D) public static Texture2D FlipX(Texture2D texture) Parameters texture Texture2D Returns Texture2D FlipY(Texture2D) public static Texture2D FlipY(Texture2D texture) Parameters texture Texture2D Returns Texture2D GetFillMask(Texture2D, IntVector2, int) public static Texture2D GetFillMask(Texture2D texture, IntVector2 startPoint, int maxNumOfIterations = 100000) Parameters texture Texture2D startPoint IntVector2 maxNumOfIterations int Returns Texture2D GetPixel(Texture2D, IntVector2) public static Color GetPixel(this Texture2D texture, IntVector2 coords) Parameters texture Texture2D coords IntVector2 Returns Color GetPixelsToFill(Texture2D, IntVector2, int) public static IntVector2[] GetPixelsToFill(Texture2D texture, IntVector2 startPoint, int maxNumOfIterations = 100000) Parameters texture Texture2D startPoint IntVector2 maxNumOfIterations int Returns IntVector2[] HSLHueSaturationGrid(int, int) public static Texture2D HSLHueSaturationGrid(int width, int height) Parameters width int height int Returns Texture2D LoadFromFile(string) public static Texture2D LoadFromFile(string filePath) Parameters filePath string Returns Texture2D Multiply(Texture2D, Color) public static Texture2D Multiply(Texture2D texture, Color colour) Parameters texture Texture2D colour Color Returns Texture2D Offset(Texture2D, IntVector2) public static Texture2D Offset(Texture2D texture, IntVector2 offset) Parameters texture Texture2D offset IntVector2 Returns Texture2D Outline(Texture2D, Color, bool, OutlineSideFill) Makes an outline around the non-transparent pixels of the given texture. public static Texture2D Outline(Texture2D texture, Color outlineColour, bool outlineOutside, OutlineSideFill outlineSideFill) Parameters texture Texture2D outlineColour Color outlineOutside bool When true: the outline is created next to existing pixels (widens the sprite). When false: replaces the outer pixels. outlineSideFill OutlineSideFill Returns Texture2D Overlay(Texture2D, Texture2D) Overlays topTex onto bottomTex, placing the bottom-left corner on the bottom-left corner. Uses Normal blend mode. public static Texture2D Overlay(Texture2D topTex, Texture2D bottomTex) Parameters topTex Texture2D bottomTex Texture2D Returns Texture2D Overlay(Texture2D, Texture2D, IntVector2) Overlays topTex onto bottomTex, placing the bottom-left corner at the coordinates topTexOffset (which don't have to be within the image). Uses Normal blend mode. public static Texture2D Overlay(Texture2D topTex, Texture2D bottomTex, IntVector2 topTexOffset) Parameters topTex Texture2D bottomTex Texture2D topTexOffset IntVector2 Returns Texture2D ReplaceColour(Texture2D, Color, Color) public static Texture2D ReplaceColour(Texture2D texture, Color toReplace, Color replaceWith) Parameters texture Texture2D toReplace Color replaceWith Color Returns Texture2D Rotate(Texture2D, RotationAngle) Rotation is clockwise. public static Texture2D Rotate(Texture2D texture, RotationAngle angle) Parameters texture Texture2D angle RotationAngle Returns Texture2D Rotate180(Texture2D) public static Texture2D Rotate180(Texture2D texture) Parameters texture Texture2D Returns Texture2D Rotate90(Texture2D) Rotation is clockwise. public static Texture2D Rotate90(Texture2D texture) Parameters texture Texture2D Returns Texture2D RotateMinus90(Texture2D) Rotation is clockwise. public static Texture2D RotateMinus90(Texture2D texture) Parameters texture Texture2D Returns Texture2D Scale(Texture2D, int, int) public static Texture2D Scale(Texture2D texture, int newWidth, int newHeight) Parameters texture Texture2D newWidth int newHeight int Returns Texture2D Scale(Texture2D, float) public static Texture2D Scale(Texture2D texture, float scaleFactor) Parameters texture Texture2D scaleFactor float Returns Texture2D Scale(Texture2D, float, float) public static Texture2D Scale(Texture2D texture, float xScaleFactor, float yScaleFactor) Parameters texture Texture2D xScaleFactor float yScaleFactor float Returns Texture2D SetPixel(Texture2D, IntVector2, Color) public static void SetPixel(this Texture2D texture, IntVector2 coords, Color colour) Parameters texture Texture2D coords IntVector2 colour Color SolidTexture(int, int, Color) public static Texture2D SolidTexture(int width, int height, Color colour) Parameters width int height int colour Color Returns Texture2D Subtract(Texture2D, Texture2D) public static Texture2D Subtract(Texture2D topTex, Texture2D bottomTex) Parameters topTex Texture2D bottomTex Texture2D Returns Texture2D Tex2DToSprite(Texture2D) public static Sprite Tex2DToSprite(Texture2D tex) Parameters tex Texture2D Returns Sprite"
  },
  "api/PAC.Themes.Theme.html": {
    "href": "api/PAC.Themes.Theme.html",
    "title": "Class Theme | |",
    "keywords": "Class Theme Namespace PAC.Themes public class Theme : ScriptableObject Inheritance object Theme Fields backgroundColour public Color backgroundColour Field Value Color buttonColour public Color buttonColour Field Value Color buttonHoverColour public Color buttonHoverColour Field Value Color buttonPressedColour public Color buttonPressedColour Field Value Color layerTileHoverTint public Color layerTileHoverTint Field Value Color layerTileOffColour public Color layerTileOffColour Field Value Color layerTileOnColour public Color layerTileOnColour Field Value Color layerTilePressedColour public Color layerTilePressedColour Field Value Color panelColour public Color panelColour Field Value Color scaleColour public Color scaleColour Field Value Color scaleHoverColour public Color scaleHoverColour Field Value Color scalePressedColour public Color scalePressedColour Field Value Color scrollbarBackgroundColour public Color scrollbarBackgroundColour Field Value Color scrollbarBackgroundHoverColour public Color scrollbarBackgroundHoverColour Field Value Color scrollbarBackgroundPressedColour public Color scrollbarBackgroundPressedColour Field Value Color scrollbarHandleColour public Color scrollbarHandleColour Field Value Color scrollbarHandleHoverColour public Color scrollbarHandleHoverColour Field Value Color scrollbarHandlePressedColour public Color scrollbarHandlePressedColour Field Value Color shadowColour public Color shadowColour Field Value Color subPanelColour public Color subPanelColour Field Value Color textboxColour public Color textboxColour Field Value Color textboxHoverColour public Color textboxHoverColour Field Value Color textboxPressedColour public Color textboxPressedColour Field Value Color textboxSelectedColour public Color textboxSelectedColour Field Value Color themeName public string themeName Field Value string toggleButtonHoverTint public Color toggleButtonHoverTint Field Value Color toggleButtonOffColour public Color toggleButtonOffColour Field Value Color toggleButtonOnColour public Color toggleButtonOnColour Field Value Color toggleButtonPressedColour public Color toggleButtonPressedColour Field Value Color Methods SubscribeToOnChanged(UnityAction) public void SubscribeToOnChanged(UnityAction call) Parameters call UnityAction"
  },
  "api/PAC.Themes.ThemeManager.html": {
    "href": "api/PAC.Themes.ThemeManager.html",
    "title": "Class ThemeManager | |",
    "keywords": "Class ThemeManager Namespace PAC.Themes public class ThemeManager : MonoBehaviour Inheritance object ThemeManager Properties currentTheme public Theme currentTheme { get; } Property Value Theme themes public List<Theme> themes { get; } Property Value List<Theme> Methods SetTheme(Theme) public void SetTheme(Theme theme) Parameters theme Theme SetTheme(string) public void SetTheme(string themeName) Parameters themeName string SubscribeToThemeChanged(UnityAction) public void SubscribeToThemeChanged(UnityAction call) Parameters call UnityAction"
  },
  "api/PAC.Themes.ThemeObjectType.html": {
    "href": "api/PAC.Themes.ThemeObjectType.html",
    "title": "Enum ThemeObjectType | |",
    "keywords": "Enum ThemeObjectType Namespace PAC.Themes public enum ThemeObjectType Fields Background = 1 None = 0 Panel = 2 RadioButton = 5 Shadow = 4 SubPanel = 3"
  },
  "api/PAC.Themes.UITheme.html": {
    "href": "api/PAC.Themes.UITheme.html",
    "title": "Class UITheme | |",
    "keywords": "Class UITheme Namespace PAC.Themes public class UITheme : MonoBehaviour Inheritance object UITheme"
  },
  "api/PAC.Themes.html": {
    "href": "api/PAC.Themes.html",
    "title": "Namespace PAC.Themes | |",
    "keywords": "Namespace PAC.Themes Classes Theme ThemeManager UITheme Enums ThemeObjectType"
  },
  "api/PAC.Tilesets.Tile.html": {
    "href": "api/PAC.Tilesets.Tile.html",
    "title": "Class Tile | |",
    "keywords": "Class Tile Namespace PAC.Tilesets public class Tile Inheritance object Tile Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Tile(File, IntVector2, TileLayer[]) public Tile(File file, IntVector2 bottomLeft, TileLayer[] linkedTileLayers) Parameters file File bottomLeft IntVector2 linkedTileLayers TileLayer[] The tile layers that the tile is on that are associated with each of the layers in the tile's file. Given in the same order as the layers in the tile's file. Properties bottomLeft public IntVector2 bottomLeft { get; set; } Property Value IntVector2 bottomRight public IntVector2 bottomRight { get; set; } Property Value IntVector2 centre public Vector2 centre { get; } Property Value Vector2 file public File file { get; } Property Value File height public int height { get; } Property Value int rect public IntRect rect { get; } Property Value IntRect tileLayersAppearsOn public TileLayer[] tileLayersAppearsOn { get; } Property Value TileLayer[] topLeft public IntVector2 topLeft { get; set; } Property Value IntVector2 topRight public IntVector2 topRight { get; set; } Property Value IntVector2 width public int width { get; } Property Value int Methods LayerInTileToTileLayer(Layer) Takes in the layer (that must be in the tile's file) and returns the tile layer (that the tile is on) that the layer is associated with. public TileLayer LayerInTileToTileLayer(Layer layer) Parameters layer Layer Returns TileLayer SubscribeToOnMoved(UnityAction<IntRect>) public void SubscribeToOnMoved(UnityAction<IntRect> call) Parameters call UnityAction<IntRect> TileLayerToLayerInTile(TileLayer) Takes in the tile layer (that this tile must be on) and returns the layer it is associated with in the tile's file. public Layer TileLayerToLayerInTile(TileLayer tileLayer) Parameters tileLayer TileLayer Returns Layer"
  },
  "api/PAC.Tilesets.TileOutlineManager.html": {
    "href": "api/PAC.Tilesets.TileOutlineManager.html",
    "title": "Class TileOutlineManager | |",
    "keywords": "Class TileOutlineManager Namespace PAC.Tilesets public class TileOutlineManager : MonoBehaviour Inheritance object TileOutlineManager Methods HideShowTileOutline(Tile, bool) public void HideShowTileOutline(Tile tile, bool show) Parameters tile Tile show bool HideTileOutline(Tile) public void HideTileOutline(Tile tile) Parameters tile Tile RefreshTileOutlines() public void RefreshTileOutlines() ShowTileOutline(Tile) public void ShowTileOutline(Tile tile) Parameters tile Tile"
  },
  "api/PAC.Tilesets.Tileset.html": {
    "href": "api/PAC.Tilesets.Tileset.html",
    "title": "Class Tileset | |",
    "keywords": "Class Tileset Namespace PAC.Tilesets public class Tileset Inheritance object Tileset Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Tileset(string) public Tileset(string name) Parameters name string Tileset(string, List<File>) public Tileset(string name, List<File> tiles) Parameters name string tiles List<File> Properties Count public int Count { get; } Property Value int tilesetName public string tilesetName { get; } Property Value string Methods AddTile(File) public void AddTile(File tile) Parameters tile File RemoveTile(File) public bool RemoveTile(File tile) Parameters tile File Returns bool"
  },
  "api/PAC.Tilesets.TilesetManager.html": {
    "href": "api/PAC.Tilesets.TilesetManager.html",
    "title": "Class TilesetManager | |",
    "keywords": "Class TilesetManager Namespace PAC.Tilesets public class TilesetManager : MonoBehaviour Inheritance object TilesetManager Methods SubscribeToOnTileIconSelected(UnityAction<File>) public void SubscribeToOnTileIconSelected(UnityAction<File> call) Parameters call UnityAction<File>"
  },
  "api/PAC.Tilesets.html": {
    "href": "api/PAC.Tilesets.html",
    "title": "Namespace PAC.Tilesets | |",
    "keywords": "Namespace PAC.Tilesets Classes Tile TileOutlineManager Tileset TilesetManager"
  },
  "api/PAC.UI.CollapsedState.html": {
    "href": "api/PAC.UI.CollapsedState.html",
    "title": "Enum CollapsedState | |",
    "keywords": "Enum CollapsedState Namespace PAC.UI public enum CollapsedState Fields Collapsed = 1 Uncollapsed = 0"
  },
  "api/PAC.UI.DropdownCloseMode.html": {
    "href": "api/PAC.UI.DropdownCloseMode.html",
    "title": "Enum DropdownCloseMode | |",
    "keywords": "Enum DropdownCloseMode Namespace PAC.UI public enum DropdownCloseMode Fields ClickOff = 0 MouseOff = 1"
  },
  "api/PAC.UI.DropdownDirection.html": {
    "href": "api/PAC.UI.DropdownDirection.html",
    "title": "Enum DropdownDirection | |",
    "keywords": "Enum DropdownDirection Namespace PAC.UI public enum DropdownDirection Fields down = -1 up = 1"
  },
  "api/PAC.UI.GridAlignment.html": {
    "href": "api/PAC.UI.GridAlignment.html",
    "title": "Enum GridAlignment | |",
    "keywords": "Enum GridAlignment Namespace PAC.UI public enum GridAlignment Fields Centre = 0 Left = -1 Right = 1"
  },
  "api/PAC.UI.ScrollDirection.html": {
    "href": "api/PAC.UI.ScrollDirection.html",
    "title": "Enum ScrollDirection | |",
    "keywords": "Enum ScrollDirection Namespace PAC.UI public enum ScrollDirection Fields Horizontal = 1 Vertical = 0"
  },
  "api/PAC.UI.UIAnchorPoint.html": {
    "href": "api/PAC.UI.UIAnchorPoint.html",
    "title": "Enum UIAnchorPoint | |",
    "keywords": "Enum UIAnchorPoint Namespace PAC.UI public enum UIAnchorPoint Fields bottomCentre = 7 bottomLeft = 6 bottomRight = 8 centre = 4 leftCentre = 3 rightCentre = 5 topCentre = 1 topLeft = 0 topRight = 2"
  },
  "api/PAC.UI.UIButton.html": {
    "href": "api/PAC.UI.UIButton.html",
    "title": "Class UIButton | |",
    "keywords": "Class UIButton Namespace PAC.UI public class UIButton : MonoBehaviour Inheritance object UIButton Fields backgroundColour public Color backgroundColour Field Value Color backgroundHoverColour public Color backgroundHoverColour Field Value Color backgroundPressedColour public Color backgroundPressedColour Field Value Color Properties height public float height { get; set; } Property Value float hoverImage public Sprite hoverImage { get; } Property Value Sprite image public Sprite image { get; } Property Value Sprite isPressed public bool isPressed { get; } Property Value bool pressedImage public Sprite pressedImage { get; } Property Value Sprite width public float width { get; set; } Property Value float Methods Press() public void Press() RightClick() public void RightClick() SetImages(Sprite, Sprite, Sprite) public void SetImages(Sprite image, Sprite hoverImage, Sprite pressedImage) Parameters image Sprite hoverImage Sprite pressedImage Sprite SetSortingLayer(string) public void SetSortingLayer(string sortingLayer) Parameters sortingLayer string SetSortingLayer(string, int) public void SetSortingLayer(string sortingLayer, int sortingOrder) Parameters sortingLayer string sortingOrder int SetSortingOrder(int) public void SetSortingOrder(int sortingOrder) Parameters sortingOrder int SetText(string) public void SetText(string text) Parameters text string SubscribeToClick(UnityAction) public void SubscribeToClick(UnityAction call) Parameters call UnityAction SubscribeToHover(UnityAction) public void SubscribeToHover(UnityAction call) Parameters call UnityAction SubscribeToIdle(UnityAction) public void SubscribeToIdle(UnityAction call) Parameters call UnityAction SubscribeToLeftClick(UnityAction) public void SubscribeToLeftClick(UnityAction call) Parameters call UnityAction SubscribeToRightClick(UnityAction) public void SubscribeToRightClick(UnityAction call) Parameters call UnityAction UpdateDisplay() public void UpdateDisplay()"
  },
  "api/PAC.UI.UICollapser.html": {
    "href": "api/PAC.UI.UICollapser.html",
    "title": "Class UICollapser | |",
    "keywords": "Class UICollapser Namespace PAC.UI public class UICollapser : MonoBehaviour Inheritance object UICollapser Methods Collapse() public void Collapse() SetCollapsed(CollapsedState) public void SetCollapsed(CollapsedState collapsedState) Parameters collapsedState CollapsedState Uncollapse() public void Uncollapse()"
  },
  "api/PAC.UI.UIColourField.html": {
    "href": "api/PAC.UI.UIColourField.html",
    "title": "Class UIColourField | |",
    "keywords": "Class UIColourField Namespace PAC.UI public class UIColourField : MonoBehaviour Inheritance object UIColourField Properties colour public Color colour { get; } Property Value Color colourPickerOpen public bool colourPickerOpen { get; } Property Value bool outlineThickness public float outlineThickness { get; } Property Value float Methods CloseColourPicker() public void CloseColourPicker() OpenColourPicker() public void OpenColourPicker() SetColour(Color) public void SetColour(Color colour) Parameters colour Color SubscribeToColourChange(UnityAction) public void SubscribeToColourChange(UnityAction call) Parameters call UnityAction SubscribeToColourPickerClose(UnityAction) public void SubscribeToColourPickerClose(UnityAction call) Parameters call UnityAction SubscribeToColourPickerOpen(UnityAction) public void SubscribeToColourPickerOpen(UnityAction call) Parameters call UnityAction"
  },
  "api/PAC.UI.UIColourFieldGroup.html": {
    "href": "api/PAC.UI.UIColourFieldGroup.html",
    "title": "Class UIColourFieldGroup | |",
    "keywords": "Class UIColourFieldGroup Namespace PAC.UI public class UIColourFieldGroup : MonoBehaviour Inheritance object UIColourFieldGroup Properties Count public int Count { get; } Property Value int colourFields public List<UIColourField> colourFields { get; } Property Value List<UIColourField> currentOpenColourField public UIColourField currentOpenColourField { get; } Property Value UIColourField Methods Add(UIColourField) public bool Add(UIColourField colourField) Parameters colourField UIColourField Returns bool Clear() public void Clear() Contains(UIColourField) public bool Contains(UIColourField colourField) Parameters colourField UIColourField Returns bool DestroyColourFields() public void DestroyColourFields() Opened(UIColourField) public void Opened(UIColourField openedColourField) Parameters openedColourField UIColourField Remove(UIColourField) public bool Remove(UIColourField colourField) Parameters colourField UIColourField Returns bool SubscribeToColourFieldOpen(UnityAction) public void SubscribeToColourFieldOpen(UnityAction call) Parameters call UnityAction"
  },
  "api/PAC.UI.UIColourPicker.html": {
    "href": "api/PAC.UI.UIColourPicker.html",
    "title": "Class UIColourPicker | |",
    "keywords": "Class UIColourPicker Namespace PAC.UI public class UIColourPicker : MonoBehaviour Inheritance object UIColourPicker Fields colourPreview public ColourPreview colourPreview Field Value ColourPreview Properties colour public Color colour { get; } Property Value Color Methods Close() public void Close() SelectDeselectEyeDropper() public void SelectDeselectEyeDropper() SetColour(Color) public void SetColour(Color colour) Parameters colour Color SubscribeToClose(UnityAction) public void SubscribeToClose(UnityAction call) Parameters call UnityAction SubscribeToColourChange(UnityAction) public void SubscribeToColourChange(UnityAction call) Parameters call UnityAction UpdateColour(Color) public void UpdateColour(Color colour) Parameters colour Color"
  },
  "api/PAC.UI.UIDropdown.html": {
    "href": "api/PAC.UI.UIDropdown.html",
    "title": "Class UIDropdown | |",
    "keywords": "Class UIDropdown Namespace PAC.UI public class UIDropdown : MonoBehaviour Inheritance object UIDropdown Fields openingButton public GameObject openingButton Field Value GameObject parentDropdown public UIDropdown parentDropdown Field Value UIDropdown Properties isRootDropdown public bool isRootDropdown { get; } Property Value bool open public bool open { get; } Property Value bool rootDropdown public UIDropdown rootDropdown { get; } Property Value UIDropdown Methods Close() public void Close() CloseRoot() Closes the highest-level dropdown containing this one. public void CloseRoot() FullyOpen() Opens this dropdown and all child dropdowns, and all their child dropdowns, etc. public void FullyOpen() Initialise() public void Initialise() MouseOff() public bool MouseOff() Returns bool Open() public void Open() SetOpen(bool) public void SetOpen(bool open) Parameters open bool SetOpenEditor(bool) public void SetOpenEditor(bool open) Parameters open bool ToggleOpen() public void ToggleOpen()"
  },
  "api/PAC.UI.UIDropdownChoice.html": {
    "href": "api/PAC.UI.UIDropdownChoice.html",
    "title": "Class UIDropdownChoice | |",
    "keywords": "Class UIDropdownChoice Namespace PAC.UI public class UIDropdownChoice : MonoBehaviour Inheritance object UIDropdownChoice Fields direction public DropdownDirection direction Field Value DropdownDirection options public List<string> options Field Value List<string> selectedOptionIndex public int selectedOptionIndex Field Value int Properties selectedOption public string selectedOption { get; } Property Value string Methods Select(string) public bool Select(string option) Parameters option string Returns bool SetUpDropdown() public void SetUpDropdown() SubscribeToOptionChanged(UnityAction) public void SubscribeToOptionChanged(UnityAction call) Parameters call UnityAction"
  },
  "api/PAC.UI.UIElement.html": {
    "href": "api/PAC.UI.UIElement.html",
    "title": "Class UIElement | |",
    "keywords": "Class UIElement Namespace PAC.UI public class UIElement : MonoBehaviour Inheritance object UIElement Fields viewport public UIViewport viewport Field Value UIViewport Properties elementName public string elementName { get; } Property Value string"
  },
  "api/PAC.UI.UIElementDeselectMode.html": {
    "href": "api/PAC.UI.UIElementDeselectMode.html",
    "title": "Enum UIElementDeselectMode | |",
    "keywords": "Enum UIElementDeselectMode Namespace PAC.UI public enum UIElementDeselectMode Fields Manual = 0 OnInputTargetUntargeted = 1"
  },
  "api/PAC.UI.UIElementSelectMode.html": {
    "href": "api/PAC.UI.UIElementSelectMode.html",
    "title": "Enum UIElementSelectMode | |",
    "keywords": "Enum UIElementSelectMode Namespace PAC.UI public enum UIElementSelectMode Fields Manual = 0 OnInputTargetTargeted = 1"
  },
  "api/PAC.UI.UIGridPacker.html": {
    "href": "api/PAC.UI.UIGridPacker.html",
    "title": "Class UIGridPacker | |",
    "keywords": "Class UIGridPacker Namespace PAC.UI public class UIGridPacker : MonoBehaviour Inheritance object UIGridPacker Methods Repack() public void Repack()"
  },
  "api/PAC.UI.UIKeyboardShortcut.html": {
    "href": "api/PAC.UI.UIKeyboardShortcut.html",
    "title": "Class UIKeyboardShortcut | |",
    "keywords": "Class UIKeyboardShortcut Namespace PAC.UI public class UIKeyboardShortcut : MonoBehaviour Inheritance object UIKeyboardShortcut Fields actionName public string actionName Field Value string Properties shortcut public KeyboardShortcut shortcut { get; set; } Property Value KeyboardShortcut Methods SubscribeToOnShortcutSet(UnityAction<KeyboardShortcut>) public void SubscribeToOnShortcutSet(UnityAction<KeyboardShortcut> call) Parameters call UnityAction<KeyboardShortcut>"
  },
  "api/PAC.UI.UIManager.html": {
    "href": "api/PAC.UI.UIManager.html",
    "title": "Class UIManager | |",
    "keywords": "Class UIManager Namespace PAC.UI public class UIManager : MonoBehaviour Inheritance object UIManager Properties selectedUIElement public UIElement selectedUIElement { get; } Property Value UIElement Methods CanTargetInputTarget(InputTarget) public bool CanTargetInputTarget(InputTarget inputTarget) Parameters inputTarget InputTarget Returns bool CloseBrushSettingsWindow() public void CloseBrushSettingsWindow() CloseDialogBox(GameObject) public void CloseDialogBox(GameObject dialogBox) Parameters dialogBox GameObject CloseDialogBox(GameObject, Action) public void CloseDialogBox(GameObject dialogBox, Action onComplete) Parameters dialogBox GameObject onComplete Action CloseExtendCropWindow() public void CloseExtendCropWindow() CloseGridWindow() public void CloseGridWindow() CloseImportPACWindow() public void CloseImportPACWindow() CloseKeyboardShortcutsWindow() public void CloseKeyboardShortcutsWindow() CloseLayerPropertiesWindow() public void CloseLayerPropertiesWindow() CloseModalWindow(UIModalWindow) public void CloseModalWindow(UIModalWindow modalWindow) Parameters modalWindow UIModalWindow CloseNewFileWindow() public void CloseNewFileWindow() CloseOutlineWindow() public void CloseOutlineWindow() CloseReplaceColourWindow() public void CloseReplaceColourWindow() CloseScaleWindow() public void CloseScaleWindow() ConfirmExtendCropWindow() public void ConfirmExtendCropWindow() ConfirmGridWindow() public void ConfirmGridWindow() ConfirmImportPACWindow() public void ConfirmImportPACWindow() ConfirmNewFileWindow() public void ConfirmNewFileWindow() ConfirmOutlineWindow() public void ConfirmOutlineWindow() ConfirmReplaceColourWindow() public void ConfirmReplaceColourWindow() ConfirmScaleWindow() public void ConfirmScaleWindow() OpenBrushSettingsWindow() public void OpenBrushSettingsWindow() OpenDialogBox(GameObject) public void OpenDialogBox(GameObject dialogBox) Parameters dialogBox GameObject OpenExtendCropWindow() public void OpenExtendCropWindow() OpenGridWindow() public void OpenGridWindow() OpenImportPACWindow(File) public void OpenImportPACWindow(File file) Parameters file File OpenKeyboardShortcutsWindow() public void OpenKeyboardShortcutsWindow() OpenLayerPropertiesWindow(int) public void OpenLayerPropertiesWindow(int layerIndex) Parameters layerIndex int OpenModalWindow() public UIModalWindow OpenModalWindow() Returns UIModalWindow OpenModalWindow(string, string) public UIModalWindow OpenModalWindow(string title, string message) Parameters title string message string Returns UIModalWindow OpenModalWindow(string, string, string[], UnityAction[]) public UIModalWindow OpenModalWindow(string title, string message, string[] buttonTexts, UnityAction[] buttonOnClicks) Parameters title string message string buttonTexts string[] buttonOnClicks UnityAction[] Returns UIModalWindow OpenNewFileWindow() public void OpenNewFileWindow() OpenOutlineWindow() public void OpenOutlineWindow() OpenReplaceColourWindow() public void OpenReplaceColourWindow() OpenScaleWindow() public void OpenScaleWindow() OpenUnsavedChangesWindow(int) public void OpenUnsavedChangesWindow(int fileIndex) Parameters fileIndex int SetNewFileHeight(int) public void SetNewFileHeight(int height) Parameters height int SetNewFileWidth(int) public void SetNewFileWidth(int width) Parameters width int TryTarget(UIElement) public bool TryTarget(UIElement uiElement) Parameters uiElement UIElement Returns bool TryUntarget(UIElement) public bool TryUntarget(UIElement uiElement) Parameters uiElement UIElement Returns bool UnsavedChangesNo() public void UnsavedChangesNo() UnsavedChangesYes() public void UnsavedChangesYes() UpdateBrushSettingsShape() public void UpdateBrushSettingsShape() UpdateImportPACPreview() public void UpdateImportPACPreview()"
  },
  "api/PAC.UI.UIModalWindow.html": {
    "href": "api/PAC.UI.UIModalWindow.html",
    "title": "Class UIModalWindow | |",
    "keywords": "Class UIModalWindow Namespace PAC.UI public class UIModalWindow : MonoBehaviour Inheritance object UIModalWindow Methods AddButton(string, UnityAction) public UIModalWindow AddButton(string text, UnityAction onClick) Parameters text string onClick UnityAction Returns UIModalWindow AddCloseButton(string) public UIModalWindow AddCloseButton(string text) Parameters text string Returns UIModalWindow Close() public void Close() SetMessage(string) public UIModalWindow SetMessage(string message) Parameters message string Returns UIModalWindow SetTitle(string) public UIModalWindow SetTitle(string title) Parameters title string Returns UIModalWindow"
  },
  "api/PAC.UI.UINumberField.html": {
    "href": "api/PAC.UI.UINumberField.html",
    "title": "Class UINumberField | |",
    "keywords": "Class UINumberField Namespace PAC.UI public class UINumberField : MonoBehaviour Inheritance object UINumberField Properties max public float max { get; set; } Property Value float min public float min { get; set; } Property Value float value public float value { get; set; } Property Value float Methods AddNumOfIncrements(int) public void AddNumOfIncrements(int numOfIncrements) Parameters numOfIncrements int Decrement() public void Decrement() Increment() public void Increment() SubscribeToValueChanged(UnityAction) public void SubscribeToValueChanged(UnityAction call) Parameters call UnityAction"
  },
  "api/PAC.UI.UIScale.html": {
    "href": "api/PAC.UI.UIScale.html",
    "title": "Class UIScale | |",
    "keywords": "Class UIScale Namespace PAC.UI public class UIScale : MonoBehaviour Inheritance object UIScale Fields backgroundColour public Color backgroundColour Field Value Color backgroundHoverColour public Color backgroundHoverColour Field Value Color backgroundPressedColour public Color backgroundPressedColour Field Value Color height public float height Field Value float width public float width Field Value float Properties decimalPlaces public int decimalPlaces { get; } Property Value int value public float value { get; } Property Value float Methods SetValue(float) public bool SetValue(float value) Parameters value float Returns bool SetValueNoNotify(float) public bool SetValueNoNotify(float value) Parameters value float Returns bool SubscribeToValueChange(UnityAction) public void SubscribeToValueChange(UnityAction call) Parameters call UnityAction UpdateDisplay() public void UpdateDisplay()"
  },
  "api/PAC.UI.UIScrollbar.html": {
    "href": "api/PAC.UI.UIScrollbar.html",
    "title": "Class UIScrollbar | |",
    "keywords": "Class UIScrollbar Namespace PAC.UI public class UIScrollbar : MonoBehaviour Inheritance object UIScrollbar Fields backgroundColour public Color backgroundColour Field Value Color backgroundHoverColour public Color backgroundHoverColour Field Value Color backgroundPressedColour public Color backgroundPressedColour Field Value Color handleColour public Color handleColour Field Value Color handleHoverColour public Color handleHoverColour Field Value Color handlePressedColour public Color handlePressedColour Field Value Color height public float height Field Value float width public float width Field Value float Properties scrollAmount public float scrollAmount { get; set; } Property Value float Methods GetScrollAmount() public float GetScrollAmount() Returns float SetScrollAmount(float) public void SetScrollAmount(float scrollAmount) Parameters scrollAmount float UpdateDisplay() public void UpdateDisplay()"
  },
  "api/PAC.UI.UITabManager.html": {
    "href": "api/PAC.UI.UITabManager.html",
    "title": "Class UITabManager | |",
    "keywords": "Class UITabManager Namespace PAC.UI public class UITabManager : MonoBehaviour Inheritance object UITabManager Methods AddTab(GameObject) public void AddTab(GameObject tab) Parameters tab GameObject SelectTab(int) public void SelectTab(int tabIndex) Parameters tabIndex int SelectTabEditor(int) public void SelectTabEditor(int tabIndex) Parameters tabIndex int"
  },
  "api/PAC.UI.UITextbox.html": {
    "href": "api/PAC.UI.UITextbox.html",
    "title": "Class UITextbox | |",
    "keywords": "Class UITextbox Namespace PAC.UI public class UITextbox : MonoBehaviour Inheritance object UITextbox Fields allowLetters public bool allowLetters Field Value bool allowNumbers public bool allowNumbers Field Value bool allowPunctuation public bool allowPunctuation Field Value bool allowSpaces public bool allowSpaces Field Value bool anchorPoint public UITextboxAnchorPoint anchorPoint Field Value UITextboxAnchorPoint backgroundColour public Color backgroundColour Field Value Color backgroundHoverColour public Color backgroundHoverColour Field Value Color backgroundPressedColour public Color backgroundPressedColour Field Value Color backgroundSelectedColour public Color backgroundSelectedColour Field Value Color height public float height Field Value float width public float width Field Value float Properties prefix public string prefix { get; } Property Value string suffix public string suffix { get; } Property Value string text public string text { get; } Property Value string Methods SetPrefix(string) public void SetPrefix(string prefix) Parameters prefix string SetSuffix(string) public void SetSuffix(string suffix) Parameters suffix string SetText(string) public void SetText(string text) Parameters text string SubscribeToFinishEvent(UnityAction) public void SubscribeToFinishEvent(UnityAction call) Parameters call UnityAction SubscribeToInputEvent(UnityAction) public void SubscribeToInputEvent(UnityAction call) Parameters call UnityAction UpdateAnchor() public void UpdateAnchor() UpdateDisplay() public void UpdateDisplay()"
  },
  "api/PAC.UI.UITextboxAnchorPoint.html": {
    "href": "api/PAC.UI.UITextboxAnchorPoint.html",
    "title": "Enum UITextboxAnchorPoint | |",
    "keywords": "Enum UITextboxAnchorPoint Namespace PAC.UI public enum UITextboxAnchorPoint Fields Centre = 4 Left = 3 Right = 5"
  },
  "api/PAC.UI.UITileIcon.html": {
    "href": "api/PAC.UI.UITileIcon.html",
    "title": "Class UITileIcon | |",
    "keywords": "Class UITileIcon Namespace PAC.UI public class UITileIcon : MonoBehaviour Inheritance object UITileIcon Properties file public File file { get; } Property Value File height public float height { get; } Property Value float width public float width { get; } Property Value float Methods SetFile(File) public void SetFile(File file) Parameters file File SubscribeToOnClick(UnityAction) public void SubscribeToOnClick(UnityAction call) Parameters call UnityAction SubscribeToOnLeftClick(UnityAction) public void SubscribeToOnLeftClick(UnityAction call) Parameters call UnityAction SubscribeToOnRightClick(UnityAction) public void SubscribeToOnRightClick(UnityAction call) Parameters call UnityAction"
  },
  "api/PAC.UI.UIToggleButton.html": {
    "href": "api/PAC.UI.UIToggleButton.html",
    "title": "Class UIToggleButton | |",
    "keywords": "Class UIToggleButton Namespace PAC.UI public class UIToggleButton : MonoBehaviour Inheritance object UIToggleButton Fields height public float height Field Value float hoverBackgroundTint public Color hoverBackgroundTint Field Value Color width public float width Field Value float Properties hoverImage public Sprite hoverImage { get; } Property Value Sprite inToggleGroup public bool inToggleGroup { get; } Property Value bool offBackgroundColour public Color offBackgroundColour { get; set; } Property Value Color offImage public Sprite offImage { get; } Property Value Sprite on public bool on { get; } Property Value bool onBackgroundColour public Color onBackgroundColour { get; set; } Property Value Color onImage public Sprite onImage { get; } Property Value Sprite pressedBackgroundColour public Color pressedBackgroundColour { get; set; } Property Value Color pressedImage public Sprite pressedImage { get; } Property Value Sprite toggleGroup public UIToggleGroup toggleGroup { get; } Property Value UIToggleGroup toggleName public string toggleName { get; set; } Property Value string Methods JoinToggleGroup(UIToggleGroup) public void JoinToggleGroup(UIToggleGroup toggleGroup) Parameters toggleGroup UIToggleGroup LeaveToggleGroup() public void LeaveToggleGroup() Press() public void Press() RightClick() public void RightClick() SetImages(Sprite, Sprite, Sprite, Sprite) public void SetImages(Sprite offImage, Sprite onImage, Sprite hoverImage, Sprite pressedImage) Parameters offImage Sprite onImage Sprite hoverImage Sprite pressedImage Sprite SetOnOff(bool) public void SetOnOff(bool on) Parameters on bool SetText(string) public void SetText(string text) Parameters text string SetTextAlignment(TextAnchor) public void SetTextAlignment(TextAnchor textAlignment) Parameters textAlignment TextAnchor SubscribeToHover(UnityAction) public void SubscribeToHover(UnityAction call) Parameters call UnityAction SubscribeToLeftClick(UnityAction) public void SubscribeToLeftClick(UnityAction call) Parameters call UnityAction SubscribeToRightClick(UnityAction) public void SubscribeToRightClick(UnityAction call) Parameters call UnityAction SubscribeToTurnOff(UnityAction) public void SubscribeToTurnOff(UnityAction call) Parameters call UnityAction SubscribeToTurnOn(UnityAction) public void SubscribeToTurnOn(UnityAction call) Parameters call UnityAction UpdateDisplay() public void UpdateDisplay()"
  },
  "api/PAC.UI.UIToggleGroup.html": {
    "href": "api/PAC.UI.UIToggleGroup.html",
    "title": "Class UIToggleGroup | |",
    "keywords": "Class UIToggleGroup Namespace PAC.UI public class UIToggleGroup : MonoBehaviour Inheritance object UIToggleGroup Properties Count public int Count { get; } Property Value int canSelectMultiple public bool canSelectMultiple { get; } Property Value bool canSelectNone public bool canSelectNone { get; } Property Value bool currentToggle public UIToggleButton currentToggle { get; } Property Value UIToggleButton currentToggleIndex public int currentToggleIndex { get; } Property Value int hasSelectedToggle public bool hasSelectedToggle { get; } Property Value bool selectedIndices public int[] selectedIndices { get; } Property Value int[] selectedToggles public UIToggleButton[] selectedToggles { get; } Property Value UIToggleButton[] swapClickAndCtrlClick public bool swapClickAndCtrlClick { get; } Property Value bool toggles public List<UIToggleButton> toggles { get; } Property Value List<UIToggleButton> Methods Add(UIToggleButton) public bool Add(UIToggleButton toggle) Parameters toggle UIToggleButton Returns bool Clear() public void Clear() Contains(UIToggleButton) public bool Contains(UIToggleButton toggle) Parameters toggle UIToggleButton Returns bool CtrlPress(UIToggleButton) public bool CtrlPress(UIToggleButton toggle) Parameters toggle UIToggleButton Returns bool CtrlPress(int) public bool CtrlPress(int index) Parameters index int Returns bool DestroyToggles() public void DestroyToggles() Press(UIToggleButton) public bool Press(UIToggleButton toggle) Parameters toggle UIToggleButton Returns bool Press(int) public bool Press(int index) Parameters index int Returns bool PressForceEvent(UIToggleButton) public bool PressForceEvent(UIToggleButton toggle) Parameters toggle UIToggleButton Returns bool PressForceEvent(int) public bool PressForceEvent(int index) Parameters index int Returns bool PressOrCtrlPress(UIToggleButton, bool) public bool PressOrCtrlPress(UIToggleButton toggle, bool ctrlClick) Parameters toggle UIToggleButton ctrlClick bool Returns bool Remove(UIToggleButton) public bool Remove(UIToggleButton toggle) Parameters toggle UIToggleButton Returns bool SubscribeToSelectedToggleChange(UnityAction) public void SubscribeToSelectedToggleChange(UnityAction call) Parameters call UnityAction"
  },
  "api/PAC.UI.UIToolButton.html": {
    "href": "api/PAC.UI.UIToolButton.html",
    "title": "Class UIToolButton | |",
    "keywords": "Class UIToolButton Namespace PAC.UI public class UIToolButton : MonoBehaviour Inheritance object UIToolButton Properties buttons public UIButton[] buttons { get; } Property Value UIButton[] currentButton public UIButton currentButton { get; } Property Value UIButton"
  },
  "api/PAC.UI.UITooltip.html": {
    "href": "api/PAC.UI.UITooltip.html",
    "title": "Class UITooltip | |",
    "keywords": "Class UITooltip Namespace PAC.UI public class UITooltip : MonoBehaviour Inheritance object UITooltip Fields padding public Vector2 padding Field Value Vector2 Properties globalHeight public float globalHeight { get; } Property Value float globalWidth public float globalWidth { get; } Property Value float localHeight public float localHeight { get; } Property Value float localWidth public float localWidth { get; } Property Value float text public string text { get; set; } Property Value string Methods Awake() public void Awake() GoesOffBottomOfScreen() public bool GoesOffBottomOfScreen() Returns bool GoesOffLeftOfScreen() public bool GoesOffLeftOfScreen() Returns bool GoesOffRightOfScreen() public bool GoesOffRightOfScreen() Returns bool GoesOffScreen() public bool GoesOffScreen() Returns bool GoesOffTopOfScreen() public bool GoesOffTopOfScreen() Returns bool SetText(string) public void SetText(string text) Parameters text string"
  },
  "api/PAC.UI.UIViewport.html": {
    "href": "api/PAC.UI.UIViewport.html",
    "title": "Class UIViewport | |",
    "keywords": "Class UIViewport Namespace PAC.UI public class UIViewport : MonoBehaviour Inheritance object UIViewport Fields boundScrollToContents public bool boundScrollToContents Field Value bool maxScrollAmount public float maxScrollAmount Field Value float maxScrollEnabled public bool maxScrollEnabled Field Value bool minScrollAmount public float minScrollAmount Field Value float minScrollEnabled public bool minScrollEnabled Field Value bool scrollDirection public ScrollDirection scrollDirection Field Value ScrollDirection Properties collider public BoxCollider2D collider { get; } Property Value BoxCollider2D defaultScrollSide public ViewportSide defaultScrollSide { get; } Property Value ViewportSide rectTransform public RectTransform rectTransform { get; } Property Value RectTransform scrollAmount public float scrollAmount { get; } Property Value float scrollingArea public Transform scrollingArea { get; } Property Value Transform Methods AddScrollAmount(float) public void AddScrollAmount(float scrollAmount) Parameters scrollAmount float GetScrollMinMaxX() Get the min and max x value of the space that the objects in this viewport's scroll area occupy. (Scaled to the scale of the viewport object.) public Vector2 GetScrollMinMaxX() Returns Vector2 (min x, max x) GetScrollMinMaxY() Get the min and max y value of the space that the objects in this viewport's scroll area occupy. (Scaled to the scale of the viewport object.) public Vector2 GetScrollMinMaxY() Returns Vector2 (min y, max y) RefreshViewport() public void RefreshViewport() SetScrollAmount(float) public void SetScrollAmount(float scrollAmount) Parameters scrollAmount float SubscribeToRefresh(UnityAction) public void SubscribeToRefresh(UnityAction call) Parameters call UnityAction"
  },
  "api/PAC.UI.ViewportSide.html": {
    "href": "api/PAC.UI.ViewportSide.html",
    "title": "Enum ViewportSide | |",
    "keywords": "Enum ViewportSide Namespace PAC.UI public enum ViewportSide Fields Centre = 0 Negative = -1 Positive = 1"
  },
  "api/PAC.UI.html": {
    "href": "api/PAC.UI.html",
    "title": "Namespace PAC.UI | |",
    "keywords": "Namespace PAC.UI Classes UIButton UICollapser UIColourField UIColourFieldGroup UIColourPicker UIDropdown UIDropdownChoice UIElement UIGridPacker UIKeyboardShortcut UIManager UIModalWindow UINumberField UIScale UIScrollbar UITabManager UITextbox UITileIcon UIToggleButton UIToggleGroup UIToolButton UITooltip UIViewport Enums CollapsedState DropdownCloseMode DropdownDirection GridAlignment ScrollDirection UIAnchorPoint UIElementDeselectMode UIElementSelectMode UITextboxAnchorPoint ViewportSide"
  },
  "api/PAC.UndoRedo.UndoRedoAction.html": {
    "href": "api/PAC.UndoRedo.UndoRedoAction.html",
    "title": "Enum UndoRedoAction | |",
    "keywords": "Enum UndoRedoAction Namespace PAC.UndoRedo public enum UndoRedoAction Fields Draw = 1 None = -1 ReorderLayers = 2 Undefined = 0"
  },
  "api/PAC.UndoRedo.UndoRedoManager.html": {
    "href": "api/PAC.UndoRedo.UndoRedoManager.html",
    "title": "Class UndoRedoManager | |",
    "keywords": "Class UndoRedoManager Namespace PAC.UndoRedo public class UndoRedoManager : MonoBehaviour Inheritance object UndoRedoManager Methods AddUndoState(UndoRedoState, int) public void AddUndoState(UndoRedoState undoState, int fileIndex) Parameters undoState UndoRedoState fileIndex int SubscribeToRedo(UnityAction) public void SubscribeToRedo(UnityAction call) Parameters call UnityAction SubscribeToUndo(UnityAction) public void SubscribeToUndo(UnityAction call) Parameters call UnityAction SubscribeToUndoOrRedo(UnityAction) public void SubscribeToUndoOrRedo(UnityAction call) Parameters call UnityAction"
  },
  "api/PAC.UndoRedo.UndoRedoState.html": {
    "href": "api/PAC.UndoRedo.UndoRedoState.html",
    "title": "Class UndoRedoState | |",
    "keywords": "Class UndoRedoState Namespace PAC.UndoRedo public class UndoRedoState Inheritance object UndoRedoState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UndoRedoState(UndoRedoAction, Layer, int) public UndoRedoState(UndoRedoAction action, Layer layer, int layerIndex) Parameters action UndoRedoAction layer Layer layerIndex int UndoRedoState(UndoRedoAction, Layer[], int[]) public UndoRedoState(UndoRedoAction action, Layer[] affectedLayers, int[] affectedLayersIndices) Parameters action UndoRedoAction affectedLayers Layer[] affectedLayersIndices int[] Properties action public UndoRedoAction action { get; } Property Value UndoRedoAction affectedLayers public Layer[] affectedLayers { get; } Property Value Layer[] affectedLayersIndices public int[] affectedLayersIndices { get; } Property Value int[]"
  },
  "api/PAC.UndoRedo.html": {
    "href": "api/PAC.UndoRedo.html",
    "title": "Namespace PAC.UndoRedo | |",
    "keywords": "Namespace PAC.UndoRedo Classes UndoRedoManager UndoRedoState Enums UndoRedoAction"
  },
  "api/PAC.html": {
    "href": "api/PAC.html",
    "title": "Namespace PAC | |",
    "keywords": "Namespace PAC Classes Finder Functions ImageConverter KeyCodeFunctions Tex2DSprite Structs OutlineSideFill Enums FlipDirection RotationAngle"
  },
  "api/SFB.ExtensionFilter.html": {
    "href": "api/SFB.ExtensionFilter.html",
    "title": "Struct ExtensionFilter | |",
    "keywords": "Struct ExtensionFilter Namespace SFB public struct ExtensionFilter Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors ExtensionFilter(string, params string[]) public ExtensionFilter(string filterName, params string[] filterExtensions) Parameters filterName string filterExtensions string[] Fields Extensions public string[] Extensions Field Value string[] Name public string Name Field Value string"
  },
  "api/SFB.IStandaloneFileBrowser.html": {
    "href": "api/SFB.IStandaloneFileBrowser.html",
    "title": "Interface IStandaloneFileBrowser | |",
    "keywords": "Interface IStandaloneFileBrowser Namespace SFB public interface IStandaloneFileBrowser Methods OpenFilePanel(string, string, ExtensionFilter[], bool) string[] OpenFilePanel(string title, string directory, ExtensionFilter[] extensions, bool multiselect) Parameters title string directory string extensions ExtensionFilter[] multiselect bool Returns string[] OpenFilePanelAsync(string, string, ExtensionFilter[], bool, Action<string[]>) void OpenFilePanelAsync(string title, string directory, ExtensionFilter[] extensions, bool multiselect, Action<string[]> cb) Parameters title string directory string extensions ExtensionFilter[] multiselect bool cb Action<string[]> OpenFolderPanel(string, string, bool) string[] OpenFolderPanel(string title, string directory, bool multiselect) Parameters title string directory string multiselect bool Returns string[] OpenFolderPanelAsync(string, string, bool, Action<string[]>) void OpenFolderPanelAsync(string title, string directory, bool multiselect, Action<string[]> cb) Parameters title string directory string multiselect bool cb Action<string[]> SaveFilePanel(string, string, string, ExtensionFilter[]) string SaveFilePanel(string title, string directory, string defaultName, ExtensionFilter[] extensions) Parameters title string directory string defaultName string extensions ExtensionFilter[] Returns string SaveFilePanelAsync(string, string, string, ExtensionFilter[], Action<string>) void SaveFilePanelAsync(string title, string directory, string defaultName, ExtensionFilter[] extensions, Action<string> cb) Parameters title string directory string defaultName string extensions ExtensionFilter[] cb Action<string>"
  },
  "api/SFB.StandaloneFileBrowser.html": {
    "href": "api/SFB.StandaloneFileBrowser.html",
    "title": "Class StandaloneFileBrowser | |",
    "keywords": "Class StandaloneFileBrowser Namespace SFB public class StandaloneFileBrowser Inheritance object StandaloneFileBrowser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OpenFilePanel(string, string, ExtensionFilter[], bool) Native open file dialog public static string[] OpenFilePanel(string title, string directory, ExtensionFilter[] extensions, bool multiselect) Parameters title string Dialog title directory string Root directory extensions ExtensionFilter[] List of extension filters. Filter Example: new ExtensionFilter(\"Image Files\", \"jpg\", \"png\") multiselect bool Allow multiple file selection Returns string[] Returns array of chosen paths. Zero length array when cancelled OpenFilePanel(string, string, string, bool) Native open file dialog public static string[] OpenFilePanel(string title, string directory, string extension, bool multiselect) Parameters title string Dialog title directory string Root directory extension string Allowed extension multiselect bool Allow multiple file selection Returns string[] Returns array of chosen paths. Zero length array when cancelled OpenFilePanelAsync(string, string, ExtensionFilter[], bool, Action<string[]>) Native open file dialog async public static void OpenFilePanelAsync(string title, string directory, ExtensionFilter[] extensions, bool multiselect, Action<string[]> cb) Parameters title string Dialog title directory string Root directory extensions ExtensionFilter[] List of extension filters. Filter Example: new ExtensionFilter(\"Image Files\", \"jpg\", \"png\") multiselect bool Allow multiple file selection cb Action<string[]> Callback\") OpenFilePanelAsync(string, string, string, bool, Action<string[]>) Native open file dialog async public static void OpenFilePanelAsync(string title, string directory, string extension, bool multiselect, Action<string[]> cb) Parameters title string Dialog title directory string Root directory extension string Allowed extension multiselect bool Allow multiple file selection cb Action<string[]> Callback\") OpenFolderPanel(string, string, bool) Native open folder dialog NOTE: Multiple folder selection doesn't supported on Windows public static string[] OpenFolderPanel(string title, string directory, bool multiselect) Parameters title string directory string Root directory multiselect bool Returns string[] Returns array of chosen paths. Zero length array when cancelled OpenFolderPanelAsync(string, string, bool, Action<string[]>) Native open folder dialog async NOTE: Multiple folder selection doesn't supported on Windows public static void OpenFolderPanelAsync(string title, string directory, bool multiselect, Action<string[]> cb) Parameters title string directory string Root directory multiselect bool cb Action<string[]> Callback\") SaveFilePanel(string, string, string, ExtensionFilter[]) Native save file dialog public static string SaveFilePanel(string title, string directory, string defaultName, ExtensionFilter[] extensions) Parameters title string Dialog title directory string Root directory defaultName string Default file name extensions ExtensionFilter[] List of extension filters. Filter Example: new ExtensionFilter(\"Image Files\", \"jpg\", \"png\") Returns string Returns chosen path. Empty string when cancelled SaveFilePanel(string, string, string, string) Native save file dialog public static string SaveFilePanel(string title, string directory, string defaultName, string extension) Parameters title string Dialog title directory string Root directory defaultName string Default file name extension string File extension Returns string Returns chosen path. Empty string when cancelled SaveFilePanelAsync(string, string, string, ExtensionFilter[], Action<string>) Native save file dialog async public static void SaveFilePanelAsync(string title, string directory, string defaultName, ExtensionFilter[] extensions, Action<string> cb) Parameters title string Dialog title directory string Root directory defaultName string Default file name extensions ExtensionFilter[] List of extension filters. Filter Example: new ExtensionFilter(\"Image Files\", \"jpg\", \"png\") cb Action<string> Callback\") SaveFilePanelAsync(string, string, string, string, Action<string>) Native save file dialog async public static void SaveFilePanelAsync(string title, string directory, string defaultName, string extension, Action<string> cb) Parameters title string Dialog title directory string Root directory defaultName string Default file name extension string File extension cb Action<string> Callback\")"
  },
  "api/SFB.html": {
    "href": "api/SFB.html",
    "title": "Namespace SFB | |",
    "keywords": "Namespace SFB Classes StandaloneFileBrowser Structs ExtensionFilter Interfaces IStandaloneFileBrowser"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "| |",
    "keywords": "This is the documentation for the Scripting APIs of this package."
  },
  "index.html": {
    "href": "index.html",
    "title": "| |",
    "keywords": "This page redirects to the manual."
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "Pixel Art Creator 2.0 | |",
    "keywords": "Pixel Art Creator 2.0 A program for making pixel art, including layers, animation and tilesets. Written in C# with Unity. Key Features Tools Pencil (with line smoothing) Brush Eye dropper Fill Shape Rectangle Ellipse Right triangle Line Gradient Linear Radial Selection Move HSL Colour Picker RGBA scales Primary / secondary colour Layers Name Toggle visibility Lockable Opacity Blend mode Duplicate selected layers Flatten layers (combine selected layers into one) Functions Extend/crop file Rescale file Flip / rotate selected layers Outline selected layers Choose outline style Replace colour Other Custom .pac file type Saves layers and animation Customisable colour themes Keyboard shortcuts for tools Animation In progress Tilesets In progress"
  }
}