### YamlMime:ManagedReference
items:
- uid: Global.Layer
  commentId: T:Global.Layer
  id: Layer
  parent: Global
  children:
  - Global.Layer.#ctor(Layer)
  - Global.Layer.#ctor(System.String,Texture2D)
  - Global.Layer.AddKeyFrame(AnimationKeyFrame)
  - Global.Layer.AddKeyFrame(System.Int32)
  - Global.Layer.AddKeyFrame(System.Int32,Texture2D)
  - Global.Layer.ClearFrames
  - Global.Layer.DeepCopy
  - Global.Layer.DeleteKeyFrame(AnimationKeyFrame)
  - Global.Layer.DeleteKeyFrame(System.Int32)
  - Global.Layer.DeleteKeyFrameNoEvent(System.Int32)
  - Global.Layer.DeleteMostRecentKeyFrame(System.Int32)
  - Global.Layer.Extend(System.Int32,System.Int32,System.Int32,System.Int32)
  - Global.Layer.ExtendNoEvent(System.Int32,System.Int32,System.Int32,System.Int32)
  - Global.Layer.Flip(FlipDirection)
  - Global.Layer.FlipNoEvent(FlipDirection)
  - Global.Layer.FromJSON(JSON)
  - Global.Layer.GetKeyFrame(System.Int32)
  - Global.Layer.GetPixel(IntVector2,System.Int32,System.Boolean)
  - Global.Layer.GetPixel(System.Int32,System.Int32,System.Int32,System.Boolean)
  - Global.Layer.HasKeyFrameAt(System.Int32)
  - Global.Layer.IsBlank
  - Global.Layer.Item(System.Int32)
  - Global.Layer.LoadJSON(JSON)
  - Global.Layer.Rotate(RotationAngle)
  - Global.Layer.RotateNoEvent(RotationAngle)
  - Global.Layer.Scale(System.Int32,System.Int32)
  - Global.Layer.Scale(System.Single)
  - Global.Layer.Scale(System.Single,System.Single)
  - Global.Layer.ScaleNoEvent(System.Int32,System.Int32)
  - Global.Layer.ScaleNoEvent(System.Single,System.Single)
  - Global.Layer.SetPixel(IntVector2,System.Int32,Color,AnimFrameRefMode)
  - Global.Layer.SetPixel(System.Int32,System.Int32,System.Int32,Color,AnimFrameRefMode)
  - Global.Layer.SetPixels(IntVector2[],System.Int32,Color,AnimFrameRefMode)
  - Global.Layer.SetPixelsNoEvent(IntVector2[],System.Int32,Color,AnimFrameRefMode)
  - Global.Layer.SubscribeToOnBlendModeChanged(UnityAction)
  - Global.Layer.SubscribeToOnKeyFrameAdded(UnityAction{System.Int32})
  - Global.Layer.SubscribeToOnKeyFrameRemoved(UnityAction{System.Int32})
  - Global.Layer.SubscribeToOnPixelsChanged(UnityAction{IntVector2[],System.Int32[]})
  - Global.Layer.SubscribeToOnVisibilityChanged(UnityAction)
  - Global.Layer.ToJSON
  - Global.Layer._blendMode
  - Global.Layer._visible
  - Global.Layer.blendMode
  - Global.Layer.height
  - Global.Layer.keyFrameIndices
  - Global.Layer.keyFrameTextures
  - Global.Layer.keyFrames
  - Global.Layer.layerType
  - Global.Layer.locked
  - Global.Layer.name
  - Global.Layer.onPixelsChanged
  - Global.Layer.opacity
  - Global.Layer.rect
  - Global.Layer.visible
  - Global.Layer.width
  langs:
  - csharp
  - vb
  name: Layer
  nameWithType: Layer
  fullName: Layer
  type: Class
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: Layer
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 20
  namespace: Global
  summary: An abstract class to define what each type of layer must have.
  example: []
  syntax:
    content: 'public abstract class Layer : IJSONable'
    content.vb: Public MustInherit Class Layer Implements IJSONable
  inheritance:
  - System.Object
  derivedClasses:
  - Global.NormalLayer
  - Global.TileLayer
  implements:
  - Global.IJSONable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Global.Layer.layerType
  commentId: P:Global.Layer.layerType
  id: layerType
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: layerType
  nameWithType: Layer.layerType
  fullName: Layer.layerType
  type: Property
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: layerType
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 22
  namespace: Global
  syntax:
    content: public abstract LayerType layerType { get; }
    parameters: []
    return:
      type: Global.LayerType
    content.vb: Public MustOverride ReadOnly Property layerType As LayerType
  overload: Global.Layer.layerType*
- uid: Global.Layer.name
  commentId: P:Global.Layer.name
  id: name
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: name
  nameWithType: Layer.name
  fullName: Layer.name
  type: Property
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: name
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 24
  namespace: Global
  syntax:
    content: public string name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property name As String
  overload: Global.Layer.name*
- uid: Global.Layer.width
  commentId: P:Global.Layer.width
  id: width
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: width
  nameWithType: Layer.width
  fullName: Layer.width
  type: Property
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: width
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 26
  namespace: Global
  syntax:
    content: public int width { get; protected set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property width As Integer
  overload: Global.Layer.width*
- uid: Global.Layer.height
  commentId: P:Global.Layer.height
  id: height
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: height
  nameWithType: Layer.height
  fullName: Layer.height
  type: Property
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: height
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 27
  namespace: Global
  syntax:
    content: public int height { get; protected set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property height As Integer
  overload: Global.Layer.height*
- uid: Global.Layer.rect
  commentId: P:Global.Layer.rect
  id: rect
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: rect
  nameWithType: Layer.rect
  fullName: Layer.rect
  type: Property
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: rect
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 28
  namespace: Global
  syntax:
    content: public IntRect rect { get; }
    parameters: []
    return:
      type: Global.IntRect
    content.vb: Public ReadOnly Property rect As IntRect
  overload: Global.Layer.rect*
- uid: Global.Layer._visible
  commentId: F:Global.Layer._visible
  id: _visible
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: _visible
  nameWithType: Layer._visible
  fullName: Layer._visible
  type: Field
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: _visible
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 30
  namespace: Global
  syntax:
    content: protected bool _visible
    return:
      type: System.Boolean
    content.vb: Protected _visible As Boolean
- uid: Global.Layer.visible
  commentId: P:Global.Layer.visible
  id: visible
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: visible
  nameWithType: Layer.visible
  fullName: Layer.visible
  type: Property
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: visible
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 31
  namespace: Global
  syntax:
    content: public bool visible { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property visible As Boolean
  overload: Global.Layer.visible*
- uid: Global.Layer.locked
  commentId: P:Global.Layer.locked
  id: locked
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: locked
  nameWithType: Layer.locked
  fullName: Layer.locked
  type: Property
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: locked
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 40
  namespace: Global
  syntax:
    content: public bool locked { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property locked As Boolean
  overload: Global.Layer.locked*
- uid: Global.Layer.opacity
  commentId: P:Global.Layer.opacity
  id: opacity
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: opacity
  nameWithType: Layer.opacity
  fullName: Layer.opacity
  type: Property
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: opacity
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 41
  namespace: Global
  syntax:
    content: public float opacity { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property opacity As Single
  overload: Global.Layer.opacity*
- uid: Global.Layer._blendMode
  commentId: F:Global.Layer._blendMode
  id: _blendMode
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: _blendMode
  nameWithType: Layer._blendMode
  fullName: Layer._blendMode
  type: Field
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: _blendMode
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 42
  namespace: Global
  syntax:
    content: protected BlendMode _blendMode
    return:
      type: Global.BlendMode
    content.vb: Protected _blendMode As BlendMode
- uid: Global.Layer.blendMode
  commentId: P:Global.Layer.blendMode
  id: blendMode
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: blendMode
  nameWithType: Layer.blendMode
  fullName: Layer.blendMode
  type: Property
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: blendMode
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 43
  namespace: Global
  syntax:
    content: public BlendMode blendMode { get; set; }
    parameters: []
    return:
      type: Global.BlendMode
    content.vb: Public Property blendMode As BlendMode
  overload: Global.Layer.blendMode*
- uid: Global.Layer.keyFrames
  commentId: P:Global.Layer.keyFrames
  id: keyFrames
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: keyFrames
  nameWithType: Layer.keyFrames
  fullName: Layer.keyFrames
  type: Property
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: keyFrames
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 56
  namespace: Global
  summary: The key frames of the animation, in order.
  example: []
  syntax:
    content: public List<AnimationKeyFrame> keyFrames { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{AnimationKeyFrame}
    content.vb: Public Property keyFrames As List(Of AnimationKeyFrame)
  overload: Global.Layer.keyFrames*
- uid: Global.Layer.keyFrameIndices
  commentId: P:Global.Layer.keyFrameIndices
  id: keyFrameIndices
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: keyFrameIndices
  nameWithType: Layer.keyFrameIndices
  fullName: Layer.keyFrameIndices
  type: Property
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: keyFrameIndices
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 60
  namespace: Global
  summary: The frame indices of the key frames in the animation, in order.
  example: []
  syntax:
    content: public int[] keyFrameIndices { get; }
    parameters: []
    return:
      type: System.Int32[]
    content.vb: Public ReadOnly Property keyFrameIndices As Integer()
  overload: Global.Layer.keyFrameIndices*
- uid: Global.Layer.keyFrameTextures
  commentId: P:Global.Layer.keyFrameTextures
  id: keyFrameTextures
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: keyFrameTextures
  nameWithType: Layer.keyFrameTextures
  fullName: Layer.keyFrameTextures
  type: Property
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: keyFrameTextures
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 75
  namespace: Global
  summary: The textures of the key frames in the animation, in order.
  example: []
  syntax:
    content: public Texture2D[] keyFrameTextures { get; }
    parameters: []
    return:
      type: Global.Texture2D[]
    content.vb: Public ReadOnly Property keyFrameTextures As Texture2D()
  overload: Global.Layer.keyFrameTextures*
- uid: Global.Layer.onPixelsChanged
  commentId: F:Global.Layer.onPixelsChanged
  id: onPixelsChanged
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: onPixelsChanged
  nameWithType: Layer.onPixelsChanged
  fullName: Layer.onPixelsChanged
  type: Field
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: onPixelsChanged
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 94
  namespace: Global
  summary: >-
    Called when the SetPixel() or SetPixels() has been called.

    Passes the array of pixels changed and the frames it was called on.
  example: []
  syntax:
    content: protected UnityEvent<IntVector2[], int[]> onPixelsChanged
    return:
      type: Global.UnityEvent{IntVector2[],System.Int32[]}
    content.vb: Protected onPixelsChanged As UnityEvent(Of IntVector2(), Integer())
- uid: Global.Layer.#ctor(System.String,Texture2D)
  commentId: M:Global.Layer.#ctor(System.String,Texture2D)
  id: '#ctor(System.String,Texture2D)'
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: Layer(string, Texture2D)
  nameWithType: Layer.Layer(string, Texture2D)
  fullName: Layer.Layer(string, Texture2D)
  type: Constructor
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: .ctor
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 110
  namespace: Global
  syntax:
    content: public Layer(string name, Texture2D texture)
    parameters:
    - id: name
      type: System.String
    - id: texture
      type: Global.Texture2D
    content.vb: Public Sub New(name As String, texture As Texture2D)
  overload: Global.Layer.#ctor*
  nameWithType.vb: Layer.New(String, Texture2D)
  fullName.vb: Layer.New(String, Texture2D)
  name.vb: New(String, Texture2D)
- uid: Global.Layer.#ctor(Layer)
  commentId: M:Global.Layer.#ctor(Layer)
  id: '#ctor(Layer)'
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: Layer(Layer)
  nameWithType: Layer.Layer(Layer)
  fullName: Layer.Layer(Layer)
  type: Constructor
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: .ctor
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 119
  namespace: Global
  syntax:
    content: public Layer(Layer layer)
    parameters:
    - id: layer
      type: Global.Layer
    content.vb: Public Sub New(layer As Layer)
  overload: Global.Layer.#ctor*
  nameWithType.vb: Layer.New(Layer)
  fullName.vb: Layer.New(Layer)
  name.vb: New(Layer)
- uid: Global.Layer.DeepCopy
  commentId: M:Global.Layer.DeepCopy
  id: DeepCopy
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: DeepCopy()
  nameWithType: Layer.DeepCopy()
  fullName: Layer.DeepCopy()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: DeepCopy
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 135
  namespace: Global
  summary: Creates a deep copy of the Layer.
  example: []
  syntax:
    content: public abstract Layer DeepCopy()
    return:
      type: Global.Layer
    content.vb: Public MustOverride Function DeepCopy() As Layer
  overload: Global.Layer.DeepCopy*
- uid: Global.Layer.SetPixel(System.Int32,System.Int32,System.Int32,Color,AnimFrameRefMode)
  commentId: M:Global.Layer.SetPixel(System.Int32,System.Int32,System.Int32,Color,AnimFrameRefMode)
  id: SetPixel(System.Int32,System.Int32,System.Int32,Color,AnimFrameRefMode)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: SetPixel(int, int, int, Color, AnimFrameRefMode)
  nameWithType: Layer.SetPixel(int, int, int, Color, AnimFrameRefMode)
  fullName: Layer.SetPixel(int, int, int, Color, AnimFrameRefMode)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: SetPixel
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 140
  namespace: Global
  summary: Sets the colour of the pixel (x, y). Throws an error if the pixel is outside the layer.
  example: []
  syntax:
    content: public IntVector2[] SetPixel(int x, int y, int frame, Color colour, AnimFrameRefMode frameRefMode)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: frame
      type: System.Int32
    - id: colour
      type: Global.Color
    - id: frameRefMode
      type: Global.AnimFrameRefMode
    return:
      type: Global.IntVector2[]
    content.vb: Public Function SetPixel(x As Integer, y As Integer, frame As Integer, colour As Color, frameRefMode As AnimFrameRefMode) As IntVector2()
  overload: Global.Layer.SetPixel*
  nameWithType.vb: Layer.SetPixel(Integer, Integer, Integer, Color, AnimFrameRefMode)
  fullName.vb: Layer.SetPixel(Integer, Integer, Integer, Color, AnimFrameRefMode)
  name.vb: SetPixel(Integer, Integer, Integer, Color, AnimFrameRefMode)
- uid: Global.Layer.SetPixel(IntVector2,System.Int32,Color,AnimFrameRefMode)
  commentId: M:Global.Layer.SetPixel(IntVector2,System.Int32,Color,AnimFrameRefMode)
  id: SetPixel(IntVector2,System.Int32,Color,AnimFrameRefMode)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: SetPixel(IntVector2, int, Color, AnimFrameRefMode)
  nameWithType: Layer.SetPixel(IntVector2, int, Color, AnimFrameRefMode)
  fullName: Layer.SetPixel(IntVector2, int, Color, AnimFrameRefMode)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: SetPixel
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 144
  namespace: Global
  summary: Sets the colour of the pixel. Throws an error if the pixel is outside the layer.
  example: []
  syntax:
    content: public IntVector2[] SetPixel(IntVector2 pixel, int frame, Color colour, AnimFrameRefMode frameRefMode)
    parameters:
    - id: pixel
      type: Global.IntVector2
    - id: frame
      type: System.Int32
    - id: colour
      type: Global.Color
    - id: frameRefMode
      type: Global.AnimFrameRefMode
    return:
      type: Global.IntVector2[]
    content.vb: Public Function SetPixel(pixel As IntVector2, frame As Integer, colour As Color, frameRefMode As AnimFrameRefMode) As IntVector2()
  overload: Global.Layer.SetPixel*
  nameWithType.vb: Layer.SetPixel(IntVector2, Integer, Color, AnimFrameRefMode)
  fullName.vb: Layer.SetPixel(IntVector2, Integer, Color, AnimFrameRefMode)
  name.vb: SetPixel(IntVector2, Integer, Color, AnimFrameRefMode)
- uid: Global.Layer.SetPixelsNoEvent(IntVector2[],System.Int32,Color,AnimFrameRefMode)
  commentId: M:Global.Layer.SetPixelsNoEvent(IntVector2[],System.Int32,Color,AnimFrameRefMode)
  id: SetPixelsNoEvent(IntVector2[],System.Int32,Color,AnimFrameRefMode)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: SetPixelsNoEvent(IntVector2[], int, Color, AnimFrameRefMode)
  nameWithType: Layer.SetPixelsNoEvent(IntVector2[], int, Color, AnimFrameRefMode)
  fullName: Layer.SetPixelsNoEvent(IntVector2[], int, Color, AnimFrameRefMode)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: SetPixelsNoEvent
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 149
  namespace: Global
  summary: >-
    Sets the colour of the pixels.

    You do not need to check the pixels are in the layer as this check is done in Layer.SetPixels(), which is the only way this method is called.
  example: []
  syntax:
    content: protected abstract IntVector2[] SetPixelsNoEvent(IntVector2[] pixels, int frame, Color colour, AnimFrameRefMode frameRefMode)
    parameters:
    - id: pixels
      type: Global.IntVector2[]
    - id: frame
      type: System.Int32
    - id: colour
      type: Global.Color
    - id: frameRefMode
      type: Global.AnimFrameRefMode
    return:
      type: Global.IntVector2[]
    content.vb: Protected MustOverride Function SetPixelsNoEvent(pixels As IntVector2(), frame As Integer, colour As Color, frameRefMode As AnimFrameRefMode) As IntVector2()
  overload: Global.Layer.SetPixelsNoEvent*
  nameWithType.vb: Layer.SetPixelsNoEvent(IntVector2(), Integer, Color, AnimFrameRefMode)
  fullName.vb: Layer.SetPixelsNoEvent(IntVector2(), Integer, Color, AnimFrameRefMode)
  name.vb: SetPixelsNoEvent(IntVector2(), Integer, Color, AnimFrameRefMode)
- uid: Global.Layer.SetPixels(IntVector2[],System.Int32,Color,AnimFrameRefMode)
  commentId: M:Global.Layer.SetPixels(IntVector2[],System.Int32,Color,AnimFrameRefMode)
  id: SetPixels(IntVector2[],System.Int32,Color,AnimFrameRefMode)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: SetPixels(IntVector2[], int, Color, AnimFrameRefMode)
  nameWithType: Layer.SetPixels(IntVector2[], int, Color, AnimFrameRefMode)
  fullName: Layer.SetPixels(IntVector2[], int, Color, AnimFrameRefMode)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: SetPixels
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 153
  namespace: Global
  summary: Sets the colour of the pixels. Throws an error if a pixel is outside the layer.
  example: []
  syntax:
    content: public IntVector2[] SetPixels(IntVector2[] pixels, int frame, Color colour, AnimFrameRefMode frameRefMode)
    parameters:
    - id: pixels
      type: Global.IntVector2[]
    - id: frame
      type: System.Int32
    - id: colour
      type: Global.Color
    - id: frameRefMode
      type: Global.AnimFrameRefMode
    return:
      type: Global.IntVector2[]
    content.vb: Public Function SetPixels(pixels As IntVector2(), frame As Integer, colour As Color, frameRefMode As AnimFrameRefMode) As IntVector2()
  overload: Global.Layer.SetPixels*
  nameWithType.vb: Layer.SetPixels(IntVector2(), Integer, Color, AnimFrameRefMode)
  fullName.vb: Layer.SetPixels(IntVector2(), Integer, Color, AnimFrameRefMode)
  name.vb: SetPixels(IntVector2(), Integer, Color, AnimFrameRefMode)
- uid: Global.Layer.GetPixel(System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:Global.Layer.GetPixel(System.Int32,System.Int32,System.Int32,System.Boolean)
  id: GetPixel(System.Int32,System.Int32,System.Int32,System.Boolean)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: GetPixel(int, int, int, bool)
  nameWithType: Layer.GetPixel(int, int, int, bool)
  fullName: Layer.GetPixel(int, int, int, bool)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: GetPixel
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 170
  namespace: Global
  summary: Gets the colour of the pixel (x, y).
  example: []
  syntax:
    content: public Color GetPixel(int x, int y, int frame, bool useLayerOpacity = true)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: frame
      type: System.Int32
    - id: useLayerOpacity
      type: System.Boolean
    return:
      type: Global.Color
    content.vb: Public Function GetPixel(x As Integer, y As Integer, frame As Integer, useLayerOpacity As Boolean = True) As Color
  overload: Global.Layer.GetPixel*
  nameWithType.vb: Layer.GetPixel(Integer, Integer, Integer, Boolean)
  fullName.vb: Layer.GetPixel(Integer, Integer, Integer, Boolean)
  name.vb: GetPixel(Integer, Integer, Integer, Boolean)
- uid: Global.Layer.GetPixel(IntVector2,System.Int32,System.Boolean)
  commentId: M:Global.Layer.GetPixel(IntVector2,System.Int32,System.Boolean)
  id: GetPixel(IntVector2,System.Int32,System.Boolean)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: GetPixel(IntVector2, int, bool)
  nameWithType: Layer.GetPixel(IntVector2, int, bool)
  fullName: Layer.GetPixel(IntVector2, int, bool)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: GetPixel
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 174
  namespace: Global
  summary: Gets the colour of the pixel.
  example: []
  syntax:
    content: public abstract Color GetPixel(IntVector2 pixel, int frame, bool useLayerOpacity = true)
    parameters:
    - id: pixel
      type: Global.IntVector2
    - id: frame
      type: System.Int32
    - id: useLayerOpacity
      type: System.Boolean
    return:
      type: Global.Color
    content.vb: Public MustOverride Function GetPixel(pixel As IntVector2, frame As Integer, useLayerOpacity As Boolean = True) As Color
  overload: Global.Layer.GetPixel*
  nameWithType.vb: Layer.GetPixel(IntVector2, Integer, Boolean)
  fullName.vb: Layer.GetPixel(IntVector2, Integer, Boolean)
  name.vb: GetPixel(IntVector2, Integer, Boolean)
- uid: Global.Layer.IsBlank
  commentId: M:Global.Layer.IsBlank
  id: IsBlank
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: IsBlank()
  nameWithType: Layer.IsBlank()
  fullName: Layer.IsBlank()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: IsBlank
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 179
  namespace: Global
  summary: Returns true if and only if all pixels are completely transparent.
  example: []
  syntax:
    content: public bool IsBlank()
    return:
      type: System.Boolean
    content.vb: Public Function IsBlank() As Boolean
  overload: Global.Layer.IsBlank*
- uid: Global.Layer.FlipNoEvent(FlipDirection)
  commentId: M:Global.Layer.FlipNoEvent(FlipDirection)
  id: FlipNoEvent(FlipDirection)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: FlipNoEvent(FlipDirection)
  nameWithType: Layer.FlipNoEvent(FlipDirection)
  fullName: Layer.FlipNoEvent(FlipDirection)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: FlipNoEvent
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 200
  namespace: Global
  summary: Flips the layer, but does not invoke the onPixelsChanged event.
  example: []
  syntax:
    content: protected abstract void FlipNoEvent(FlipDirection direction)
    parameters:
    - id: direction
      type: Global.FlipDirection
    content.vb: Protected MustOverride Sub FlipNoEvent(direction As FlipDirection)
  overload: Global.Layer.FlipNoEvent*
- uid: Global.Layer.Flip(FlipDirection)
  commentId: M:Global.Layer.Flip(FlipDirection)
  id: Flip(FlipDirection)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: Flip(FlipDirection)
  nameWithType: Layer.Flip(FlipDirection)
  fullName: Layer.Flip(FlipDirection)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: Flip
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 204
  namespace: Global
  summary: Flips the layer.
  example: []
  syntax:
    content: public void Flip(FlipDirection direction)
    parameters:
    - id: direction
      type: Global.FlipDirection
    content.vb: Public Sub Flip(direction As FlipDirection)
  overload: Global.Layer.Flip*
- uid: Global.Layer.RotateNoEvent(RotationAngle)
  commentId: M:Global.Layer.RotateNoEvent(RotationAngle)
  id: RotateNoEvent(RotationAngle)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: RotateNoEvent(RotationAngle)
  nameWithType: Layer.RotateNoEvent(RotationAngle)
  fullName: Layer.RotateNoEvent(RotationAngle)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: RotateNoEvent
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 214
  namespace: Global
  summary: >-
    Rotates the layer, but does not invoke the onPixelsChanged event.

    Rotation is clockwise.
  example: []
  syntax:
    content: protected abstract void RotateNoEvent(RotationAngle angle)
    parameters:
    - id: angle
      type: Global.RotationAngle
    content.vb: Protected MustOverride Sub RotateNoEvent(angle As RotationAngle)
  overload: Global.Layer.RotateNoEvent*
- uid: Global.Layer.Rotate(RotationAngle)
  commentId: M:Global.Layer.Rotate(RotationAngle)
  id: Rotate(RotationAngle)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: Rotate(RotationAngle)
  nameWithType: Layer.Rotate(RotationAngle)
  fullName: Layer.Rotate(RotationAngle)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: Rotate
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 218
  namespace: Global
  summary: Rotates the layer. Rotation is clockwise.
  example: []
  syntax:
    content: public void Rotate(RotationAngle angle)
    parameters:
    - id: angle
      type: Global.RotationAngle
    content.vb: Public Sub Rotate(angle As RotationAngle)
  overload: Global.Layer.Rotate*
- uid: Global.Layer.ExtendNoEvent(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Global.Layer.ExtendNoEvent(System.Int32,System.Int32,System.Int32,System.Int32)
  id: ExtendNoEvent(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: ExtendNoEvent(int, int, int, int)
  nameWithType: Layer.ExtendNoEvent(int, int, int, int)
  fullName: Layer.ExtendNoEvent(int, int, int, int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: ExtendNoEvent
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 227
  namespace: Global
  summary: Extends the dimensions of the layer in each direction by the given amounts, but does not invoke the onPixelsChanged event.
  example: []
  syntax:
    content: protected abstract void ExtendNoEvent(int left, int right, int up, int down)
    parameters:
    - id: left
      type: System.Int32
    - id: right
      type: System.Int32
    - id: up
      type: System.Int32
    - id: down
      type: System.Int32
    content.vb: Protected MustOverride Sub ExtendNoEvent(left As Integer, right As Integer, up As Integer, down As Integer)
  overload: Global.Layer.ExtendNoEvent*
  nameWithType.vb: Layer.ExtendNoEvent(Integer, Integer, Integer, Integer)
  fullName.vb: Layer.ExtendNoEvent(Integer, Integer, Integer, Integer)
  name.vb: ExtendNoEvent(Integer, Integer, Integer, Integer)
- uid: Global.Layer.Extend(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Global.Layer.Extend(System.Int32,System.Int32,System.Int32,System.Int32)
  id: Extend(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: Extend(int, int, int, int)
  nameWithType: Layer.Extend(int, int, int, int)
  fullName: Layer.Extend(int, int, int, int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: Extend
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 231
  namespace: Global
  summary: Extends the dimensions of the layer in each direction by the given amounts.
  example: []
  syntax:
    content: public void Extend(int left, int right, int up, int down)
    parameters:
    - id: left
      type: System.Int32
    - id: right
      type: System.Int32
    - id: up
      type: System.Int32
    - id: down
      type: System.Int32
    content.vb: Public Sub Extend(left As Integer, right As Integer, up As Integer, down As Integer)
  overload: Global.Layer.Extend*
  nameWithType.vb: Layer.Extend(Integer, Integer, Integer, Integer)
  fullName.vb: Layer.Extend(Integer, Integer, Integer, Integer)
  name.vb: Extend(Integer, Integer, Integer, Integer)
- uid: Global.Layer.ScaleNoEvent(System.Single,System.Single)
  commentId: M:Global.Layer.ScaleNoEvent(System.Single,System.Single)
  id: ScaleNoEvent(System.Single,System.Single)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: ScaleNoEvent(float, float)
  nameWithType: Layer.ScaleNoEvent(float, float)
  fullName: Layer.ScaleNoEvent(float, float)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: ScaleNoEvent
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 240
  namespace: Global
  summary: Resizes the dimensions of the file by the scale factors, but does not invoke the onPixelsChanged event.
  example: []
  syntax:
    content: protected abstract void ScaleNoEvent(float xScaleFactor, float yScaleFactor)
    parameters:
    - id: xScaleFactor
      type: System.Single
    - id: yScaleFactor
      type: System.Single
    content.vb: Protected MustOverride Sub ScaleNoEvent(xScaleFactor As Single, yScaleFactor As Single)
  overload: Global.Layer.ScaleNoEvent*
  nameWithType.vb: Layer.ScaleNoEvent(Single, Single)
  fullName.vb: Layer.ScaleNoEvent(Single, Single)
  name.vb: ScaleNoEvent(Single, Single)
- uid: Global.Layer.ScaleNoEvent(System.Int32,System.Int32)
  commentId: M:Global.Layer.ScaleNoEvent(System.Int32,System.Int32)
  id: ScaleNoEvent(System.Int32,System.Int32)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: ScaleNoEvent(int, int)
  nameWithType: Layer.ScaleNoEvent(int, int)
  fullName: Layer.ScaleNoEvent(int, int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: ScaleNoEvent
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 244
  namespace: Global
  summary: Resizes the dimensions to the new width and height, but does not invoke the onPixelsChanged event.
  example: []
  syntax:
    content: protected abstract void ScaleNoEvent(int newWidth, int newHeight)
    parameters:
    - id: newWidth
      type: System.Int32
    - id: newHeight
      type: System.Int32
    content.vb: Protected MustOverride Sub ScaleNoEvent(newWidth As Integer, newHeight As Integer)
  overload: Global.Layer.ScaleNoEvent*
  nameWithType.vb: Layer.ScaleNoEvent(Integer, Integer)
  fullName.vb: Layer.ScaleNoEvent(Integer, Integer)
  name.vb: ScaleNoEvent(Integer, Integer)
- uid: Global.Layer.Scale(System.Single)
  commentId: M:Global.Layer.Scale(System.Single)
  id: Scale(System.Single)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: Scale(float)
  nameWithType: Layer.Scale(float)
  fullName: Layer.Scale(float)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: Scale
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 248
  namespace: Global
  summary: Resizes the dimensions of the file by the scale factor.
  example: []
  syntax:
    content: public void Scale(float scaleFactor)
    parameters:
    - id: scaleFactor
      type: System.Single
    content.vb: Public Sub Scale(scaleFactor As Single)
  overload: Global.Layer.Scale*
  nameWithType.vb: Layer.Scale(Single)
  fullName.vb: Layer.Scale(Single)
  name.vb: Scale(Single)
- uid: Global.Layer.Scale(System.Single,System.Single)
  commentId: M:Global.Layer.Scale(System.Single,System.Single)
  id: Scale(System.Single,System.Single)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: Scale(float, float)
  nameWithType: Layer.Scale(float, float)
  fullName: Layer.Scale(float, float)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: Scale
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 252
  namespace: Global
  summary: Resizes the dimensions of the file by the scale factors.
  example: []
  syntax:
    content: public void Scale(float xScaleFactor, float yScaleFactor)
    parameters:
    - id: xScaleFactor
      type: System.Single
    - id: yScaleFactor
      type: System.Single
    content.vb: Public Sub Scale(xScaleFactor As Single, yScaleFactor As Single)
  overload: Global.Layer.Scale*
  nameWithType.vb: Layer.Scale(Single, Single)
  fullName.vb: Layer.Scale(Single, Single)
  name.vb: Scale(Single, Single)
- uid: Global.Layer.Scale(System.Int32,System.Int32)
  commentId: M:Global.Layer.Scale(System.Int32,System.Int32)
  id: Scale(System.Int32,System.Int32)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: Scale(int, int)
  nameWithType: Layer.Scale(int, int)
  fullName: Layer.Scale(int, int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: Scale
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 260
  namespace: Global
  summary: Resizes the dimensions of the file by the scale factor.
  example: []
  syntax:
    content: public void Scale(int newWidth, int newHeight)
    parameters:
    - id: newWidth
      type: System.Int32
    - id: newHeight
      type: System.Int32
    content.vb: Public Sub Scale(newWidth As Integer, newHeight As Integer)
  overload: Global.Layer.Scale*
  nameWithType.vb: Layer.Scale(Integer, Integer)
  fullName.vb: Layer.Scale(Integer, Integer)
  name.vb: Scale(Integer, Integer)
- uid: Global.Layer.ToJSON
  commentId: M:Global.Layer.ToJSON
  id: ToJSON
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: ToJSON()
  nameWithType: Layer.ToJSON()
  fullName: Layer.ToJSON()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: ToJSON
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 266
  namespace: Global
  example: []
  syntax:
    content: public abstract JSON ToJSON()
    return:
      type: Global.JSON
    content.vb: Public MustOverride Function ToJSON() As JSON
  overload: Global.Layer.ToJSON*
  implements:
  - Global.IJSONable.ToJSON
- uid: Global.Layer.LoadJSON(JSON)
  commentId: M:Global.Layer.LoadJSON(JSON)
  id: LoadJSON(JSON)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: LoadJSON(JSON)
  nameWithType: Layer.LoadJSON(JSON)
  fullName: Layer.LoadJSON(JSON)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: LoadJSON
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 267
  namespace: Global
  syntax:
    content: protected abstract void LoadJSON(JSON json)
    parameters:
    - id: json
      type: Global.JSON
    content.vb: Protected MustOverride Sub LoadJSON(json As JSON)
  overload: Global.Layer.LoadJSON*
- uid: Global.Layer.FromJSON(JSON)
  commentId: M:Global.Layer.FromJSON(JSON)
  id: FromJSON(JSON)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: FromJSON(JSON)
  nameWithType: Layer.FromJSON(JSON)
  fullName: Layer.FromJSON(JSON)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: FromJSON
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 268
  namespace: Global
  syntax:
    content: public static Layer FromJSON(JSON json)
    parameters:
    - id: json
      type: Global.JSON
    return:
      type: Global.Layer
    content.vb: Public Shared Function FromJSON(json As JSON) As Layer
  overload: Global.Layer.FromJSON*
- uid: Global.Layer.Item(System.Int32)
  commentId: P:Global.Layer.Item(System.Int32)
  id: Item(System.Int32)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: Layer.this[int]
  fullName: Layer.this[int]
  type: Property
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: this[]
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 303
  namespace: Global
  summary: Returns the texture of the most recent key frame before or at the frame index. Same as GetTexture(frame).
  example: []
  syntax:
    content: public AnimationKeyFrame this[int frame] { get; }
    parameters:
    - id: frame
      type: System.Int32
    return:
      type: Global.AnimationKeyFrame
    content.vb: Public ReadOnly Default Property this[](frame As Integer) As AnimationKeyFrame
  overload: Global.Layer.Item*
  nameWithType.vb: Layer.this[](Integer)
  fullName.vb: Layer.this[](Integer)
  name.vb: this[](Integer)
- uid: Global.Layer.GetKeyFrame(System.Int32)
  commentId: M:Global.Layer.GetKeyFrame(System.Int32)
  id: GetKeyFrame(System.Int32)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: GetKeyFrame(int)
  nameWithType: Layer.GetKeyFrame(int)
  fullName: Layer.GetKeyFrame(int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: GetKeyFrame
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 311
  namespace: Global
  summary: Returns the most recent key frame before or at the frame index - i.e. the key frame the animation will play at the frame index.
  example: []
  syntax:
    content: public AnimationKeyFrame GetKeyFrame(int frame)
    parameters:
    - id: frame
      type: System.Int32
    return:
      type: Global.AnimationKeyFrame
    content.vb: Public Function GetKeyFrame(frame As Integer) As AnimationKeyFrame
  overload: Global.Layer.GetKeyFrame*
  nameWithType.vb: Layer.GetKeyFrame(Integer)
  fullName.vb: Layer.GetKeyFrame(Integer)
  name.vb: GetKeyFrame(Integer)
- uid: Global.Layer.HasKeyFrameAt(System.Int32)
  commentId: M:Global.Layer.HasKeyFrameAt(System.Int32)
  id: HasKeyFrameAt(System.Int32)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: HasKeyFrameAt(int)
  nameWithType: Layer.HasKeyFrameAt(int)
  fullName: Layer.HasKeyFrameAt(int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: HasKeyFrameAt
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 337
  namespace: Global
  summary: Returns whether or not there is a key frame at the given frame index.
  example: []
  syntax:
    content: public bool HasKeyFrameAt(int frame)
    parameters:
    - id: frame
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function HasKeyFrameAt(frame As Integer) As Boolean
  overload: Global.Layer.HasKeyFrameAt*
  nameWithType.vb: Layer.HasKeyFrameAt(Integer)
  fullName.vb: Layer.HasKeyFrameAt(Integer)
  name.vb: HasKeyFrameAt(Integer)
- uid: Global.Layer.AddKeyFrame(System.Int32)
  commentId: M:Global.Layer.AddKeyFrame(System.Int32)
  id: AddKeyFrame(System.Int32)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: AddKeyFrame(int)
  nameWithType: Layer.AddKeyFrame(int)
  fullName: Layer.AddKeyFrame(int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: AddKeyFrame
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 352
  namespace: Global
  summary: Adds a key frame at frame frame. The texture will be that of the most recent key frame. Returns true if it replaces an existing key frame, and false otherwise.
  example: []
  syntax:
    content: protected bool AddKeyFrame(int frame)
    parameters:
    - id: frame
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Protected Function AddKeyFrame(frame As Integer) As Boolean
  overload: Global.Layer.AddKeyFrame*
  nameWithType.vb: Layer.AddKeyFrame(Integer)
  fullName.vb: Layer.AddKeyFrame(Integer)
  name.vb: AddKeyFrame(Integer)
- uid: Global.Layer.AddKeyFrame(System.Int32,Texture2D)
  commentId: M:Global.Layer.AddKeyFrame(System.Int32,Texture2D)
  id: AddKeyFrame(System.Int32,Texture2D)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: AddKeyFrame(int, Texture2D)
  nameWithType: Layer.AddKeyFrame(int, Texture2D)
  fullName: Layer.AddKeyFrame(int, Texture2D)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: AddKeyFrame
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 363
  namespace: Global
  summary: Adds a key frame with the given texture at frame frame. Returns true if it replaces an existing key frame, and false otherwise.
  example: []
  syntax:
    content: protected bool AddKeyFrame(int frame, Texture2D texture)
    parameters:
    - id: frame
      type: System.Int32
    - id: texture
      type: Global.Texture2D
    return:
      type: System.Boolean
    content.vb: Protected Function AddKeyFrame(frame As Integer, texture As Texture2D) As Boolean
  overload: Global.Layer.AddKeyFrame*
  nameWithType.vb: Layer.AddKeyFrame(Integer, Texture2D)
  fullName.vb: Layer.AddKeyFrame(Integer, Texture2D)
  name.vb: AddKeyFrame(Integer, Texture2D)
- uid: Global.Layer.AddKeyFrame(AnimationKeyFrame)
  commentId: M:Global.Layer.AddKeyFrame(AnimationKeyFrame)
  id: AddKeyFrame(AnimationKeyFrame)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: AddKeyFrame(AnimationKeyFrame)
  nameWithType: Layer.AddKeyFrame(AnimationKeyFrame)
  fullName: Layer.AddKeyFrame(AnimationKeyFrame)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: AddKeyFrame
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 367
  namespace: Global
  summary: Adds the given key frame. Returns true if it replaces an existing key frame, and false otherwise.
  example: []
  syntax:
    content: protected bool AddKeyFrame(AnimationKeyFrame keyFrame)
    parameters:
    - id: keyFrame
      type: Global.AnimationKeyFrame
    return:
      type: System.Boolean
    content.vb: Protected Function AddKeyFrame(keyFrame As AnimationKeyFrame) As Boolean
  overload: Global.Layer.AddKeyFrame*
- uid: Global.Layer.DeleteMostRecentKeyFrame(System.Int32)
  commentId: M:Global.Layer.DeleteMostRecentKeyFrame(System.Int32)
  id: DeleteMostRecentKeyFrame(System.Int32)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: DeleteMostRecentKeyFrame(int)
  nameWithType: Layer.DeleteMostRecentKeyFrame(int)
  fullName: Layer.DeleteMostRecentKeyFrame(int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: DeleteMostRecentKeyFrame
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 402
  namespace: Global
  summary: Deletes the most recent key frame before or at the given frame index and returns that key frame.
  example: []
  syntax:
    content: public AnimationKeyFrame DeleteMostRecentKeyFrame(int frame)
    parameters:
    - id: frame
      type: System.Int32
    return:
      type: Global.AnimationKeyFrame
    content.vb: Public Function DeleteMostRecentKeyFrame(frame As Integer) As AnimationKeyFrame
  overload: Global.Layer.DeleteMostRecentKeyFrame*
  nameWithType.vb: Layer.DeleteMostRecentKeyFrame(Integer)
  fullName.vb: Layer.DeleteMostRecentKeyFrame(Integer)
  name.vb: DeleteMostRecentKeyFrame(Integer)
- uid: Global.Layer.DeleteKeyFrameNoEvent(System.Int32)
  commentId: M:Global.Layer.DeleteKeyFrameNoEvent(System.Int32)
  id: DeleteKeyFrameNoEvent(System.Int32)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: DeleteKeyFrameNoEvent(int)
  nameWithType: Layer.DeleteKeyFrameNoEvent(int)
  fullName: Layer.DeleteKeyFrameNoEvent(int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: DeleteKeyFrameNoEvent
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 410
  namespace: Global
  summary: Deletes the key frame at the given frame index, if there is one, in which case it returns that key frame. Otherwise it returns null.
  example: []
  syntax:
    content: protected abstract AnimationKeyFrame DeleteKeyFrameNoEvent(int keyframe)
    parameters:
    - id: keyframe
      type: System.Int32
    return:
      type: Global.AnimationKeyFrame
    content.vb: Protected MustOverride Function DeleteKeyFrameNoEvent(keyframe As Integer) As AnimationKeyFrame
  overload: Global.Layer.DeleteKeyFrameNoEvent*
  nameWithType.vb: Layer.DeleteKeyFrameNoEvent(Integer)
  fullName.vb: Layer.DeleteKeyFrameNoEvent(Integer)
  name.vb: DeleteKeyFrameNoEvent(Integer)
- uid: Global.Layer.DeleteKeyFrame(System.Int32)
  commentId: M:Global.Layer.DeleteKeyFrame(System.Int32)
  id: DeleteKeyFrame(System.Int32)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: DeleteKeyFrame(int)
  nameWithType: Layer.DeleteKeyFrame(int)
  fullName: Layer.DeleteKeyFrame(int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: DeleteKeyFrame
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 411
  namespace: Global
  syntax:
    content: public AnimationKeyFrame DeleteKeyFrame(int keyFrame)
    parameters:
    - id: keyFrame
      type: System.Int32
    return:
      type: Global.AnimationKeyFrame
    content.vb: Public Function DeleteKeyFrame(keyFrame As Integer) As AnimationKeyFrame
  overload: Global.Layer.DeleteKeyFrame*
  nameWithType.vb: Layer.DeleteKeyFrame(Integer)
  fullName.vb: Layer.DeleteKeyFrame(Integer)
  name.vb: DeleteKeyFrame(Integer)
- uid: Global.Layer.DeleteKeyFrame(AnimationKeyFrame)
  commentId: M:Global.Layer.DeleteKeyFrame(AnimationKeyFrame)
  id: DeleteKeyFrame(AnimationKeyFrame)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: DeleteKeyFrame(AnimationKeyFrame)
  nameWithType: Layer.DeleteKeyFrame(AnimationKeyFrame)
  fullName: Layer.DeleteKeyFrame(AnimationKeyFrame)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: DeleteKeyFrame
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 420
  namespace: Global
  summary: Deletes the given key frame, if it's in the animation, in which case it returns true. Otherwise it returns false.
  example: []
  syntax:
    content: public bool DeleteKeyFrame(AnimationKeyFrame keyFrame)
    parameters:
    - id: keyFrame
      type: Global.AnimationKeyFrame
    return:
      type: System.Boolean
    content.vb: Public Function DeleteKeyFrame(keyFrame As AnimationKeyFrame) As Boolean
  overload: Global.Layer.DeleteKeyFrame*
- uid: Global.Layer.ClearFrames
  commentId: M:Global.Layer.ClearFrames
  id: ClearFrames
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: ClearFrames()
  nameWithType: Layer.ClearFrames()
  fullName: Layer.ClearFrames()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: ClearFrames
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 436
  namespace: Global
  summary: Deletes all key frames.
  example: []
  syntax:
    content: public abstract void ClearFrames()
    content.vb: Public MustOverride Sub ClearFrames()
  overload: Global.Layer.ClearFrames*
- uid: Global.Layer.SubscribeToOnPixelsChanged(UnityAction{IntVector2[],System.Int32[]})
  commentId: M:Global.Layer.SubscribeToOnPixelsChanged(UnityAction{IntVector2[],System.Int32[]})
  id: SubscribeToOnPixelsChanged(UnityAction{IntVector2[],System.Int32[]})
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: SubscribeToOnPixelsChanged(UnityAction<IntVector2[], int[]>)
  nameWithType: Layer.SubscribeToOnPixelsChanged(UnityAction<IntVector2[], int[]>)
  fullName: Layer.SubscribeToOnPixelsChanged(UnityAction<IntVector2[], int[]>)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: SubscribeToOnPixelsChanged
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 441
  namespace: Global
  example: []
  syntax:
    content: public void SubscribeToOnPixelsChanged(UnityAction<IntVector2[], int[]> call)
    parameters:
    - id: call
      type: Global.UnityAction{IntVector2[],System.Int32[]}
    content.vb: Public Sub SubscribeToOnPixelsChanged([call] As UnityAction(Of IntVector2(), Integer()))
  overload: Global.Layer.SubscribeToOnPixelsChanged*
  nameWithType.vb: Layer.SubscribeToOnPixelsChanged(UnityAction(Of IntVector2(), Integer()))
  fullName.vb: Layer.SubscribeToOnPixelsChanged(UnityAction(Of IntVector2(), Integer()))
  name.vb: SubscribeToOnPixelsChanged(UnityAction(Of IntVector2(), Integer()))
- uid: Global.Layer.SubscribeToOnVisibilityChanged(UnityAction)
  commentId: M:Global.Layer.SubscribeToOnVisibilityChanged(UnityAction)
  id: SubscribeToOnVisibilityChanged(UnityAction)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: SubscribeToOnVisibilityChanged(UnityAction)
  nameWithType: Layer.SubscribeToOnVisibilityChanged(UnityAction)
  fullName: Layer.SubscribeToOnVisibilityChanged(UnityAction)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: SubscribeToOnVisibilityChanged
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 445
  namespace: Global
  syntax:
    content: public void SubscribeToOnVisibilityChanged(UnityAction call)
    parameters:
    - id: call
      type: Global.UnityAction
    content.vb: Public Sub SubscribeToOnVisibilityChanged([call] As UnityAction)
  overload: Global.Layer.SubscribeToOnVisibilityChanged*
- uid: Global.Layer.SubscribeToOnBlendModeChanged(UnityAction)
  commentId: M:Global.Layer.SubscribeToOnBlendModeChanged(UnityAction)
  id: SubscribeToOnBlendModeChanged(UnityAction)
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: SubscribeToOnBlendModeChanged(UnityAction)
  nameWithType: Layer.SubscribeToOnBlendModeChanged(UnityAction)
  fullName: Layer.SubscribeToOnBlendModeChanged(UnityAction)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: SubscribeToOnBlendModeChanged
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 449
  namespace: Global
  syntax:
    content: public void SubscribeToOnBlendModeChanged(UnityAction call)
    parameters:
    - id: call
      type: Global.UnityAction
    content.vb: Public Sub SubscribeToOnBlendModeChanged([call] As UnityAction)
  overload: Global.Layer.SubscribeToOnBlendModeChanged*
- uid: Global.Layer.SubscribeToOnKeyFrameAdded(UnityAction{System.Int32})
  commentId: M:Global.Layer.SubscribeToOnKeyFrameAdded(UnityAction{System.Int32})
  id: SubscribeToOnKeyFrameAdded(UnityAction{System.Int32})
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: SubscribeToOnKeyFrameAdded(UnityAction<int>)
  nameWithType: Layer.SubscribeToOnKeyFrameAdded(UnityAction<int>)
  fullName: Layer.SubscribeToOnKeyFrameAdded(UnityAction<int>)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: SubscribeToOnKeyFrameAdded
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 453
  namespace: Global
  syntax:
    content: public void SubscribeToOnKeyFrameAdded(UnityAction<int> call)
    parameters:
    - id: call
      type: Global.UnityAction{System.Int32}
    content.vb: Public Sub SubscribeToOnKeyFrameAdded([call] As UnityAction(Of Integer))
  overload: Global.Layer.SubscribeToOnKeyFrameAdded*
  nameWithType.vb: Layer.SubscribeToOnKeyFrameAdded(UnityAction(Of Integer))
  fullName.vb: Layer.SubscribeToOnKeyFrameAdded(UnityAction(Of Integer))
  name.vb: SubscribeToOnKeyFrameAdded(UnityAction(Of Integer))
- uid: Global.Layer.SubscribeToOnKeyFrameRemoved(UnityAction{System.Int32})
  commentId: M:Global.Layer.SubscribeToOnKeyFrameRemoved(UnityAction{System.Int32})
  id: SubscribeToOnKeyFrameRemoved(UnityAction{System.Int32})
  parent: Global.Layer
  langs:
  - csharp
  - vb
  name: SubscribeToOnKeyFrameRemoved(UnityAction<int>)
  nameWithType: Layer.SubscribeToOnKeyFrameRemoved(UnityAction<int>)
  fullName: Layer.SubscribeToOnKeyFrameRemoved(UnityAction<int>)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Layers/Layer.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: SubscribeToOnKeyFrameRemoved
    path: ../Assets/Scripts/Layers/Layer.cs
    startLine: 457
  namespace: Global
  syntax:
    content: public void SubscribeToOnKeyFrameRemoved(UnityAction<int> call)
    parameters:
    - id: call
      type: Global.UnityAction{System.Int32}
    content.vb: Public Sub SubscribeToOnKeyFrameRemoved([call] As UnityAction(Of Integer))
  overload: Global.Layer.SubscribeToOnKeyFrameRemoved*
  nameWithType.vb: Layer.SubscribeToOnKeyFrameRemoved(UnityAction(Of Integer))
  fullName.vb: Layer.SubscribeToOnKeyFrameRemoved(UnityAction(Of Integer))
  name.vb: SubscribeToOnKeyFrameRemoved(UnityAction(Of Integer))
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.IJSONable
  commentId: T:Global.IJSONable
  href: IJSONable.html
  name: IJSONable
  nameWithType: IJSONable
  fullName: IJSONable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Layer.layerType*
  commentId: Overload:Global.Layer.layerType
  href: Global.Layer.html#Layer_layerType
  name: layerType
  nameWithType: Layer.layerType
  fullName: Layer.layerType
- uid: Global.LayerType
  commentId: T:Global.LayerType
  href: LayerType.html
  name: LayerType
  nameWithType: LayerType
  fullName: LayerType
- uid: Global.Layer.name*
  commentId: Overload:Global.Layer.name
  href: Global.Layer.html#Layer_name
  name: name
  nameWithType: Layer.name
  fullName: Layer.name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.Layer.width*
  commentId: Overload:Global.Layer.width
  href: Global.Layer.html#Layer_width
  name: width
  nameWithType: Layer.width
  fullName: Layer.width
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.Layer.height*
  commentId: Overload:Global.Layer.height
  href: Global.Layer.html#Layer_height
  name: height
  nameWithType: Layer.height
  fullName: Layer.height
- uid: Global.Layer.rect*
  commentId: Overload:Global.Layer.rect
  href: Global.Layer.html#Layer_rect
  name: rect
  nameWithType: Layer.rect
  fullName: Layer.rect
- uid: Global.IntRect
  commentId: T:Global.IntRect
  href: IntRect.html
  name: IntRect
  nameWithType: IntRect
  fullName: IntRect
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.Layer.visible*
  commentId: Overload:Global.Layer.visible
  href: Global.Layer.html#Layer_visible
  name: visible
  nameWithType: Layer.visible
  fullName: Layer.visible
- uid: Global.Layer.locked*
  commentId: Overload:Global.Layer.locked
  href: Global.Layer.html#Layer_locked
  name: locked
  nameWithType: Layer.locked
  fullName: Layer.locked
- uid: Global.Layer.opacity*
  commentId: Overload:Global.Layer.opacity
  href: Global.Layer.html#Layer_opacity
  name: opacity
  nameWithType: Layer.opacity
  fullName: Layer.opacity
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.BlendMode
  commentId: T:Global.BlendMode
  href: BlendMode.html
  name: BlendMode
  nameWithType: BlendMode
  fullName: BlendMode
- uid: Global.Layer.blendMode*
  commentId: Overload:Global.Layer.blendMode
  href: Global.Layer.html#Layer_blendMode
  name: blendMode
  nameWithType: Layer.blendMode
  fullName: Layer.blendMode
- uid: Global.Layer.keyFrames*
  commentId: Overload:Global.Layer.keyFrames
  href: Global.Layer.html#Layer_keyFrames
  name: keyFrames
  nameWithType: Layer.keyFrames
  fullName: Layer.keyFrames
- uid: System.Collections.Generic.List{AnimationKeyFrame}
  commentId: T:System.Collections.Generic.List{AnimationKeyFrame}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<AnimationKeyFrame>
  nameWithType: List<AnimationKeyFrame>
  fullName: System.Collections.Generic.List<AnimationKeyFrame>
  nameWithType.vb: List(Of AnimationKeyFrame)
  fullName.vb: System.Collections.Generic.List(Of AnimationKeyFrame)
  name.vb: List(Of AnimationKeyFrame)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.AnimationKeyFrame
    name: AnimationKeyFrame
    href: AnimationKeyFrame.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.AnimationKeyFrame
    name: AnimationKeyFrame
    href: AnimationKeyFrame.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Global.Layer.keyFrameIndices*
  commentId: Overload:Global.Layer.keyFrameIndices
  href: Global.Layer.html#Layer_keyFrameIndices
  name: keyFrameIndices
  nameWithType: Layer.keyFrameIndices
  fullName: Layer.keyFrameIndices
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: Global.Layer.keyFrameTextures*
  commentId: Overload:Global.Layer.keyFrameTextures
  href: Global.Layer.html#Layer_keyFrameTextures
  name: keyFrameTextures
  nameWithType: Layer.keyFrameTextures
  fullName: Layer.keyFrameTextures
- uid: Global.Texture2D[]
  isExternal: true
  name: Texture2D[]
  nameWithType: Texture2D[]
  fullName: Texture2D[]
  nameWithType.vb: Texture2D()
  fullName.vb: Texture2D()
  name.vb: Texture2D()
  spec.csharp:
  - uid: Global.Texture2D
    name: Texture2D
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.Texture2D
    name: Texture2D
    isExternal: true
  - name: (
  - name: )
- uid: Global.UnityEvent{IntVector2[],System.Int32[]}
  commentId: '!:Global.UnityEvent{IntVector2[],System.Int32[]}'
  definition: Global.UnityEvent`2
  href: IntVector2.html
  name: UnityEvent<IntVector2[], int[]>
  nameWithType: UnityEvent<IntVector2[], int[]>
  fullName: UnityEvent<IntVector2[], int[]>
  nameWithType.vb: UnityEvent(Of IntVector2(), Integer())
  fullName.vb: UnityEvent(Of IntVector2(), Integer())
  name.vb: UnityEvent(Of IntVector2(), Integer())
  spec.csharp:
  - uid: Global.UnityEvent`2
    name: UnityEvent
    isExternal: true
  - name: <
  - uid: Global.IntVector2
    name: IntVector2
    href: IntVector2.html
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: Global.UnityEvent`2
    name: UnityEvent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntVector2
    name: IntVector2
    href: IntVector2.html
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
  - name: )
- uid: Global.UnityEvent`2
  commentId: '!:Global.UnityEvent`2'
  isExternal: true
  name: UnityEvent<, >
  nameWithType: UnityEvent<, >
  fullName: UnityEvent<, >
  nameWithType.vb: UnityEvent(Of , )
  fullName.vb: UnityEvent(Of , )
  name.vb: UnityEvent(Of , )
  spec.csharp:
  - uid: Global.UnityEvent`2
    name: UnityEvent
    isExternal: true
  - name: <
  - name: ''
  - name: ','
  - name: " "
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.UnityEvent`2
    name: UnityEvent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: ','
  - name: " "
  - name: ''
  - name: )
- uid: Global.Layer.#ctor*
  commentId: Overload:Global.Layer.#ctor
  href: Global.Layer.html#Layer__ctor_System_String_Texture2D_
  name: Layer
  nameWithType: Layer.Layer
  fullName: Layer.Layer
  nameWithType.vb: Layer.New
  fullName.vb: Layer.New
  name.vb: New
- uid: Global.Texture2D
  isExternal: true
  name: Texture2D
  nameWithType: Texture2D
  fullName: Texture2D
- uid: Global.Layer
  commentId: T:Global.Layer
  href: Layer.html
  name: Layer
  nameWithType: Layer
  fullName: Layer
- uid: Global.Layer.DeepCopy*
  commentId: Overload:Global.Layer.DeepCopy
  href: Global.Layer.html#Layer_DeepCopy
  name: DeepCopy
  nameWithType: Layer.DeepCopy
  fullName: Layer.DeepCopy
- uid: Global.Layer.SetPixel*
  commentId: Overload:Global.Layer.SetPixel
  href: Global.Layer.html#Layer_SetPixel_System_Int32_System_Int32_System_Int32_Color_AnimFrameRefMode_
  name: SetPixel
  nameWithType: Layer.SetPixel
  fullName: Layer.SetPixel
- uid: Global.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Color
- uid: Global.AnimFrameRefMode
  commentId: T:Global.AnimFrameRefMode
  href: AnimFrameRefMode.html
  name: AnimFrameRefMode
  nameWithType: AnimFrameRefMode
  fullName: AnimFrameRefMode
- uid: Global.IntVector2[]
  isExternal: true
  href: IntVector2.html
  name: IntVector2[]
  nameWithType: IntVector2[]
  fullName: IntVector2[]
  nameWithType.vb: IntVector2()
  fullName.vb: IntVector2()
  name.vb: IntVector2()
  spec.csharp:
  - uid: Global.IntVector2
    name: IntVector2
    href: IntVector2.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.IntVector2
    name: IntVector2
    href: IntVector2.html
  - name: (
  - name: )
- uid: Global.IntVector2
  commentId: T:Global.IntVector2
  href: IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: IntVector2
- uid: Global.Layer.SetPixelsNoEvent*
  commentId: Overload:Global.Layer.SetPixelsNoEvent
  href: Global.Layer.html#Layer_SetPixelsNoEvent_IntVector2___System_Int32_Color_AnimFrameRefMode_
  name: SetPixelsNoEvent
  nameWithType: Layer.SetPixelsNoEvent
  fullName: Layer.SetPixelsNoEvent
- uid: Global.Layer.SetPixels*
  commentId: Overload:Global.Layer.SetPixels
  href: Global.Layer.html#Layer_SetPixels_IntVector2___System_Int32_Color_AnimFrameRefMode_
  name: SetPixels
  nameWithType: Layer.SetPixels
  fullName: Layer.SetPixels
- uid: Global.Layer.GetPixel*
  commentId: Overload:Global.Layer.GetPixel
  href: Global.Layer.html#Layer_GetPixel_System_Int32_System_Int32_System_Int32_System_Boolean_
  name: GetPixel
  nameWithType: Layer.GetPixel
  fullName: Layer.GetPixel
- uid: Global.Layer.IsBlank*
  commentId: Overload:Global.Layer.IsBlank
  href: Global.Layer.html#Layer_IsBlank
  name: IsBlank
  nameWithType: Layer.IsBlank
  fullName: Layer.IsBlank
- uid: Global.Layer.FlipNoEvent*
  commentId: Overload:Global.Layer.FlipNoEvent
  href: Global.Layer.html#Layer_FlipNoEvent_FlipDirection_
  name: FlipNoEvent
  nameWithType: Layer.FlipNoEvent
  fullName: Layer.FlipNoEvent
- uid: Global.FlipDirection
  commentId: T:Global.FlipDirection
  href: FlipDirection.html
  name: FlipDirection
  nameWithType: FlipDirection
  fullName: FlipDirection
- uid: Global.Layer.Flip*
  commentId: Overload:Global.Layer.Flip
  href: Global.Layer.html#Layer_Flip_FlipDirection_
  name: Flip
  nameWithType: Layer.Flip
  fullName: Layer.Flip
- uid: Global.Layer.RotateNoEvent*
  commentId: Overload:Global.Layer.RotateNoEvent
  href: Global.Layer.html#Layer_RotateNoEvent_RotationAngle_
  name: RotateNoEvent
  nameWithType: Layer.RotateNoEvent
  fullName: Layer.RotateNoEvent
- uid: Global.RotationAngle
  commentId: T:Global.RotationAngle
  href: RotationAngle.html
  name: RotationAngle
  nameWithType: RotationAngle
  fullName: RotationAngle
- uid: Global.Layer.Rotate*
  commentId: Overload:Global.Layer.Rotate
  href: Global.Layer.html#Layer_Rotate_RotationAngle_
  name: Rotate
  nameWithType: Layer.Rotate
  fullName: Layer.Rotate
- uid: Global.Layer.ExtendNoEvent*
  commentId: Overload:Global.Layer.ExtendNoEvent
  href: Global.Layer.html#Layer_ExtendNoEvent_System_Int32_System_Int32_System_Int32_System_Int32_
  name: ExtendNoEvent
  nameWithType: Layer.ExtendNoEvent
  fullName: Layer.ExtendNoEvent
- uid: Global.Layer.Extend*
  commentId: Overload:Global.Layer.Extend
  href: Global.Layer.html#Layer_Extend_System_Int32_System_Int32_System_Int32_System_Int32_
  name: Extend
  nameWithType: Layer.Extend
  fullName: Layer.Extend
- uid: Global.Layer.ScaleNoEvent*
  commentId: Overload:Global.Layer.ScaleNoEvent
  href: Global.Layer.html#Layer_ScaleNoEvent_System_Single_System_Single_
  name: ScaleNoEvent
  nameWithType: Layer.ScaleNoEvent
  fullName: Layer.ScaleNoEvent
- uid: Global.Layer.Scale*
  commentId: Overload:Global.Layer.Scale
  href: Global.Layer.html#Layer_Scale_System_Single_
  name: Scale
  nameWithType: Layer.Scale
  fullName: Layer.Scale
- uid: Global.Layer.ToJSON*
  commentId: Overload:Global.Layer.ToJSON
  href: Global.Layer.html#Layer_ToJSON
  name: ToJSON
  nameWithType: Layer.ToJSON
  fullName: Layer.ToJSON
- uid: Global.IJSONable.ToJSON
  commentId: M:Global.IJSONable.ToJSON
  parent: Global.IJSONable
  href: Global.IJSONable.html#IJSONable_ToJSON
  name: ToJSON()
  nameWithType: IJSONable.ToJSON()
  fullName: IJSONable.ToJSON()
  spec.csharp:
  - uid: Global.IJSONable.ToJSON
    name: ToJSON
    href: Global.IJSONable.html#IJSONable_ToJSON
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IJSONable.ToJSON
    name: ToJSON
    href: Global.IJSONable.html#IJSONable_ToJSON
  - name: (
  - name: )
- uid: Global.JSON
  commentId: T:Global.JSON
  href: JSON.html
  name: JSON
  nameWithType: JSON
  fullName: JSON
- uid: Global.Layer.LoadJSON*
  commentId: Overload:Global.Layer.LoadJSON
  href: Global.Layer.html#Layer_LoadJSON_JSON_
  name: LoadJSON
  nameWithType: Layer.LoadJSON
  fullName: Layer.LoadJSON
- uid: Global.Layer.FromJSON*
  commentId: Overload:Global.Layer.FromJSON
  href: Global.Layer.html#Layer_FromJSON_JSON_
  name: FromJSON
  nameWithType: Layer.FromJSON
  fullName: Layer.FromJSON
- uid: Global.Layer.Item*
  commentId: Overload:Global.Layer.Item
  href: Global.Layer.html#Layer_Item_System_Int32_
  name: this
  nameWithType: Layer.this
  fullName: Layer.this
  nameWithType.vb: Layer.this[]
  fullName.vb: Layer.this[]
  name.vb: this[]
- uid: Global.AnimationKeyFrame
  commentId: T:Global.AnimationKeyFrame
  href: AnimationKeyFrame.html
  name: AnimationKeyFrame
  nameWithType: AnimationKeyFrame
  fullName: AnimationKeyFrame
- uid: Global.Layer.GetKeyFrame*
  commentId: Overload:Global.Layer.GetKeyFrame
  href: Global.Layer.html#Layer_GetKeyFrame_System_Int32_
  name: GetKeyFrame
  nameWithType: Layer.GetKeyFrame
  fullName: Layer.GetKeyFrame
- uid: Global.Layer.HasKeyFrameAt*
  commentId: Overload:Global.Layer.HasKeyFrameAt
  href: Global.Layer.html#Layer_HasKeyFrameAt_System_Int32_
  name: HasKeyFrameAt
  nameWithType: Layer.HasKeyFrameAt
  fullName: Layer.HasKeyFrameAt
- uid: Global.Layer.AddKeyFrame*
  commentId: Overload:Global.Layer.AddKeyFrame
  href: Global.Layer.html#Layer_AddKeyFrame_System_Int32_
  name: AddKeyFrame
  nameWithType: Layer.AddKeyFrame
  fullName: Layer.AddKeyFrame
- uid: Global.Layer.DeleteMostRecentKeyFrame*
  commentId: Overload:Global.Layer.DeleteMostRecentKeyFrame
  href: Global.Layer.html#Layer_DeleteMostRecentKeyFrame_System_Int32_
  name: DeleteMostRecentKeyFrame
  nameWithType: Layer.DeleteMostRecentKeyFrame
  fullName: Layer.DeleteMostRecentKeyFrame
- uid: Global.Layer.DeleteKeyFrameNoEvent*
  commentId: Overload:Global.Layer.DeleteKeyFrameNoEvent
  href: Global.Layer.html#Layer_DeleteKeyFrameNoEvent_System_Int32_
  name: DeleteKeyFrameNoEvent
  nameWithType: Layer.DeleteKeyFrameNoEvent
  fullName: Layer.DeleteKeyFrameNoEvent
- uid: Global.Layer.DeleteKeyFrame*
  commentId: Overload:Global.Layer.DeleteKeyFrame
  href: Global.Layer.html#Layer_DeleteKeyFrame_System_Int32_
  name: DeleteKeyFrame
  nameWithType: Layer.DeleteKeyFrame
  fullName: Layer.DeleteKeyFrame
- uid: Global.Layer.ClearFrames*
  commentId: Overload:Global.Layer.ClearFrames
  href: Global.Layer.html#Layer_ClearFrames
  name: ClearFrames
  nameWithType: Layer.ClearFrames
  fullName: Layer.ClearFrames
- uid: Global.Layer.SubscribeToOnPixelsChanged*
  commentId: Overload:Global.Layer.SubscribeToOnPixelsChanged
  href: Global.Layer.html#Layer_SubscribeToOnPixelsChanged_UnityAction_IntVector2___System_Int32____
  name: SubscribeToOnPixelsChanged
  nameWithType: Layer.SubscribeToOnPixelsChanged
  fullName: Layer.SubscribeToOnPixelsChanged
- uid: Global.UnityAction{IntVector2[],System.Int32[]}
  commentId: '!:Global.UnityAction{IntVector2[],System.Int32[]}'
  definition: Global.UnityAction`2
  href: IntVector2.html
  name: UnityAction<IntVector2[], int[]>
  nameWithType: UnityAction<IntVector2[], int[]>
  fullName: UnityAction<IntVector2[], int[]>
  nameWithType.vb: UnityAction(Of IntVector2(), Integer())
  fullName.vb: UnityAction(Of IntVector2(), Integer())
  name.vb: UnityAction(Of IntVector2(), Integer())
  spec.csharp:
  - uid: Global.UnityAction`2
    name: UnityAction
    isExternal: true
  - name: <
  - uid: Global.IntVector2
    name: IntVector2
    href: IntVector2.html
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: Global.UnityAction`2
    name: UnityAction
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntVector2
    name: IntVector2
    href: IntVector2.html
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
  - name: )
- uid: Global.UnityAction`2
  commentId: '!:Global.UnityAction`2'
  isExternal: true
  name: UnityAction<, >
  nameWithType: UnityAction<, >
  fullName: UnityAction<, >
  nameWithType.vb: UnityAction(Of , )
  fullName.vb: UnityAction(Of , )
  name.vb: UnityAction(Of , )
  spec.csharp:
  - uid: Global.UnityAction`2
    name: UnityAction
    isExternal: true
  - name: <
  - name: ''
  - name: ','
  - name: " "
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.UnityAction`2
    name: UnityAction
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: ','
  - name: " "
  - name: ''
  - name: )
- uid: Global.Layer.SubscribeToOnVisibilityChanged*
  commentId: Overload:Global.Layer.SubscribeToOnVisibilityChanged
  href: Global.Layer.html#Layer_SubscribeToOnVisibilityChanged_UnityAction_
  name: SubscribeToOnVisibilityChanged
  nameWithType: Layer.SubscribeToOnVisibilityChanged
  fullName: Layer.SubscribeToOnVisibilityChanged
- uid: Global.UnityAction
  isExternal: true
  name: UnityAction
  nameWithType: UnityAction
  fullName: UnityAction
- uid: Global.Layer.SubscribeToOnBlendModeChanged*
  commentId: Overload:Global.Layer.SubscribeToOnBlendModeChanged
  href: Global.Layer.html#Layer_SubscribeToOnBlendModeChanged_UnityAction_
  name: SubscribeToOnBlendModeChanged
  nameWithType: Layer.SubscribeToOnBlendModeChanged
  fullName: Layer.SubscribeToOnBlendModeChanged
- uid: Global.Layer.SubscribeToOnKeyFrameAdded*
  commentId: Overload:Global.Layer.SubscribeToOnKeyFrameAdded
  href: Global.Layer.html#Layer_SubscribeToOnKeyFrameAdded_UnityAction_System_Int32__
  name: SubscribeToOnKeyFrameAdded
  nameWithType: Layer.SubscribeToOnKeyFrameAdded
  fullName: Layer.SubscribeToOnKeyFrameAdded
- uid: Global.UnityAction{System.Int32}
  commentId: '!:Global.UnityAction{System.Int32}'
  definition: Global.UnityAction`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: UnityAction<int>
  nameWithType: UnityAction<int>
  fullName: UnityAction<int>
  nameWithType.vb: UnityAction(Of Integer)
  fullName.vb: UnityAction(Of Integer)
  name.vb: UnityAction(Of Integer)
  spec.csharp:
  - uid: Global.UnityAction`1
    name: UnityAction
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: Global.UnityAction`1
    name: UnityAction
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.UnityAction`1
  isExternal: true
  name: UnityAction<>
  nameWithType: UnityAction<>
  fullName: UnityAction<>
  nameWithType.vb: UnityAction(Of )
  fullName.vb: UnityAction(Of )
  name.vb: UnityAction(Of )
  spec.csharp:
  - uid: Global.UnityAction`1
    name: UnityAction
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.UnityAction`1
    name: UnityAction
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: Global.Layer.SubscribeToOnKeyFrameRemoved*
  commentId: Overload:Global.Layer.SubscribeToOnKeyFrameRemoved
  href: Global.Layer.html#Layer_SubscribeToOnKeyFrameRemoved_UnityAction_System_Int32__
  name: SubscribeToOnKeyFrameRemoved
  nameWithType: Layer.SubscribeToOnKeyFrameRemoved
  fullName: Layer.SubscribeToOnKeyFrameRemoved
