### YamlMime:ManagedReference
items:
- uid: PAC.DataStructures.CustomStack`1
  commentId: T:PAC.DataStructures.CustomStack`1
  id: CustomStack`1
  parent: PAC.DataStructures
  children:
  - PAC.DataStructures.CustomStack`1.Clear
  - PAC.DataStructures.CustomStack`1.Count
  - PAC.DataStructures.CustomStack`1.Peek
  - PAC.DataStructures.CustomStack`1.Pop
  - PAC.DataStructures.CustomStack`1.Push(`0)
  - PAC.DataStructures.CustomStack`1.Remove(`0)
  - PAC.DataStructures.CustomStack`1.RemoveAll(`0)
  - PAC.DataStructures.CustomStack`1.RemoveAt(System.Int32)
  - PAC.DataStructures.CustomStack`1.ToArray
  - PAC.DataStructures.CustomStack`1.ToList
  langs:
  - csharp
  - vb
  name: CustomStack<T>
  nameWithType: CustomStack<T>
  fullName: PAC.DataStructures.CustomStack<T>
  type: Class
  source:
    remote:
      path: Assets/Scripts/Data Structures/CustomStack.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: CustomStack
    path: ../Assets/Scripts/Data Structures/CustomStack.cs
    startLine: 7
  namespace: PAC.DataStructures
  summary: A custom implementation of a stack to allow removal of items at a specific index.
  example: []
  syntax:
    content: public class CustomStack<T>
    typeParameters:
    - id: T
    content.vb: Public Class CustomStack(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: CustomStack(Of T)
  fullName.vb: PAC.DataStructures.CustomStack(Of T)
  name.vb: CustomStack(Of T)
- uid: PAC.DataStructures.CustomStack`1.Count
  commentId: P:PAC.DataStructures.CustomStack`1.Count
  id: Count
  parent: PAC.DataStructures.CustomStack`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: CustomStack<T>.Count
  fullName: PAC.DataStructures.CustomStack<T>.Count
  type: Property
  source:
    remote:
      path: Assets/Scripts/Data Structures/CustomStack.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: Count
    path: ../Assets/Scripts/Data Structures/CustomStack.cs
    startLine: 11
  namespace: PAC.DataStructures
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: PAC.DataStructures.CustomStack`1.Count*
  nameWithType.vb: CustomStack(Of T).Count
  fullName.vb: PAC.DataStructures.CustomStack(Of T).Count
- uid: PAC.DataStructures.CustomStack`1.Push(`0)
  commentId: M:PAC.DataStructures.CustomStack`1.Push(`0)
  id: Push(`0)
  parent: PAC.DataStructures.CustomStack`1
  langs:
  - csharp
  - vb
  name: Push(T)
  nameWithType: CustomStack<T>.Push(T)
  fullName: PAC.DataStructures.CustomStack<T>.Push(T)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Data Structures/CustomStack.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: Push
    path: ../Assets/Scripts/Data Structures/CustomStack.cs
    startLine: 16
  namespace: PAC.DataStructures
  summary: Adds the item to the top of the stack.
  example: []
  syntax:
    content: public void Push(T item)
    parameters:
    - id: item
      type: '{T}'
    content.vb: Public Sub Push(item As T)
  overload: PAC.DataStructures.CustomStack`1.Push*
  nameWithType.vb: CustomStack(Of T).Push(T)
  fullName.vb: PAC.DataStructures.CustomStack(Of T).Push(T)
- uid: PAC.DataStructures.CustomStack`1.Peek
  commentId: M:PAC.DataStructures.CustomStack`1.Peek
  id: Peek
  parent: PAC.DataStructures.CustomStack`1
  langs:
  - csharp
  - vb
  name: Peek()
  nameWithType: CustomStack<T>.Peek()
  fullName: PAC.DataStructures.CustomStack<T>.Peek()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Data Structures/CustomStack.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: Peek
    path: ../Assets/Scripts/Data Structures/CustomStack.cs
    startLine: 24
  namespace: PAC.DataStructures
  summary: Returns the item on top of the stack.
  example: []
  syntax:
    content: public T Peek()
    return:
      type: '{T}'
    content.vb: Public Function Peek() As T
  overload: PAC.DataStructures.CustomStack`1.Peek*
  nameWithType.vb: CustomStack(Of T).Peek()
  fullName.vb: PAC.DataStructures.CustomStack(Of T).Peek()
- uid: PAC.DataStructures.CustomStack`1.Pop
  commentId: M:PAC.DataStructures.CustomStack`1.Pop
  id: Pop
  parent: PAC.DataStructures.CustomStack`1
  langs:
  - csharp
  - vb
  name: Pop()
  nameWithType: CustomStack<T>.Pop()
  fullName: PAC.DataStructures.CustomStack<T>.Pop()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Data Structures/CustomStack.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: Pop
    path: ../Assets/Scripts/Data Structures/CustomStack.cs
    startLine: 36
  namespace: PAC.DataStructures
  summary: Removes and returns the item on top of the stack.
  example: []
  syntax:
    content: public T Pop()
    return:
      type: '{T}'
    content.vb: Public Function Pop() As T
  overload: PAC.DataStructures.CustomStack`1.Pop*
  nameWithType.vb: CustomStack(Of T).Pop()
  fullName.vb: PAC.DataStructures.CustomStack(Of T).Pop()
- uid: PAC.DataStructures.CustomStack`1.RemoveAt(System.Int32)
  commentId: M:PAC.DataStructures.CustomStack`1.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: PAC.DataStructures.CustomStack`1
  langs:
  - csharp
  - vb
  name: RemoveAt(int)
  nameWithType: CustomStack<T>.RemoveAt(int)
  fullName: PAC.DataStructures.CustomStack<T>.RemoveAt(int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Data Structures/CustomStack.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: RemoveAt
    path: ../Assets/Scripts/Data Structures/CustomStack.cs
    startLine: 48
  namespace: PAC.DataStructures
  summary: Removes the item at the given index and returns it.
  example: []
  syntax:
    content: public T RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: '{T}'
    content.vb: Public Function RemoveAt(index As Integer) As T
  overload: PAC.DataStructures.CustomStack`1.RemoveAt*
  nameWithType.vb: CustomStack(Of T).RemoveAt(Integer)
  fullName.vb: PAC.DataStructures.CustomStack(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
- uid: PAC.DataStructures.CustomStack`1.Remove(`0)
  commentId: M:PAC.DataStructures.CustomStack`1.Remove(`0)
  id: Remove(`0)
  parent: PAC.DataStructures.CustomStack`1
  langs:
  - csharp
  - vb
  name: Remove(T)
  nameWithType: CustomStack<T>.Remove(T)
  fullName: PAC.DataStructures.CustomStack<T>.Remove(T)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Data Structures/CustomStack.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: Remove
    path: ../Assets/Scripts/Data Structures/CustomStack.cs
    startLine: 67
  namespace: PAC.DataStructures
  summary: Removes the first occurrence (starting from the top) of the item in the stack.
  example: []
  syntax:
    content: public bool Remove(T item)
    parameters:
    - id: item
      type: '{T}'
    return:
      type: System.Boolean
      description: true if the item is successfully removed.
    content.vb: Public Function Remove(item As T) As Boolean
  overload: PAC.DataStructures.CustomStack`1.Remove*
  nameWithType.vb: CustomStack(Of T).Remove(T)
  fullName.vb: PAC.DataStructures.CustomStack(Of T).Remove(T)
- uid: PAC.DataStructures.CustomStack`1.RemoveAll(`0)
  commentId: M:PAC.DataStructures.CustomStack`1.RemoveAll(`0)
  id: RemoveAll(`0)
  parent: PAC.DataStructures.CustomStack`1
  langs:
  - csharp
  - vb
  name: RemoveAll(T)
  nameWithType: CustomStack<T>.RemoveAll(T)
  fullName: PAC.DataStructures.CustomStack<T>.RemoveAll(T)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Data Structures/CustomStack.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: RemoveAll
    path: ../Assets/Scripts/Data Structures/CustomStack.cs
    startLine: 75
  namespace: PAC.DataStructures
  summary: Removes all occurrences of the item in the stack.
  example: []
  syntax:
    content: public void RemoveAll(T item)
    parameters:
    - id: item
      type: '{T}'
    content.vb: Public Sub RemoveAll(item As T)
  overload: PAC.DataStructures.CustomStack`1.RemoveAll*
  nameWithType.vb: CustomStack(Of T).RemoveAll(T)
  fullName.vb: PAC.DataStructures.CustomStack(Of T).RemoveAll(T)
- uid: PAC.DataStructures.CustomStack`1.Clear
  commentId: M:PAC.DataStructures.CustomStack`1.Clear
  id: Clear
  parent: PAC.DataStructures.CustomStack`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: CustomStack<T>.Clear()
  fullName: PAC.DataStructures.CustomStack<T>.Clear()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Data Structures/CustomStack.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: Clear
    path: ../Assets/Scripts/Data Structures/CustomStack.cs
    startLine: 83
  namespace: PAC.DataStructures
  summary: Removes all items from the stack.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: PAC.DataStructures.CustomStack`1.Clear*
  nameWithType.vb: CustomStack(Of T).Clear()
  fullName.vb: PAC.DataStructures.CustomStack(Of T).Clear()
- uid: PAC.DataStructures.CustomStack`1.ToList
  commentId: M:PAC.DataStructures.CustomStack`1.ToList
  id: ToList
  parent: PAC.DataStructures.CustomStack`1
  langs:
  - csharp
  - vb
  name: ToList()
  nameWithType: CustomStack<T>.ToList()
  fullName: PAC.DataStructures.CustomStack<T>.ToList()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Data Structures/CustomStack.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: ToList
    path: ../Assets/Scripts/Data Structures/CustomStack.cs
    startLine: 88
  namespace: PAC.DataStructures
  syntax:
    content: public List<T> ToList()
    return:
      type: System.Collections.Generic.List{{T}}
    content.vb: Public Function ToList() As List(Of T)
  overload: PAC.DataStructures.CustomStack`1.ToList*
  nameWithType.vb: CustomStack(Of T).ToList()
  fullName.vb: PAC.DataStructures.CustomStack(Of T).ToList()
- uid: PAC.DataStructures.CustomStack`1.ToArray
  commentId: M:PAC.DataStructures.CustomStack`1.ToArray
  id: ToArray
  parent: PAC.DataStructures.CustomStack`1
  langs:
  - csharp
  - vb
  name: ToArray()
  nameWithType: CustomStack<T>.ToArray()
  fullName: PAC.DataStructures.CustomStack<T>.ToArray()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Data Structures/CustomStack.cs
      branch: main
      repo: https://github.com/MrWoafer/Pixel-Art-Creator-2.0.git
    id: ToArray
    path: ../Assets/Scripts/Data Structures/CustomStack.cs
    startLine: 92
  namespace: PAC.DataStructures
  syntax:
    content: public T[] ToArray()
    return:
      type: '{T}[]'
    content.vb: Public Function ToArray() As T()
  overload: PAC.DataStructures.CustomStack`1.ToArray*
  nameWithType.vb: CustomStack(Of T).ToArray()
  fullName.vb: PAC.DataStructures.CustomStack(Of T).ToArray()
references:
- uid: PAC.DataStructures
  commentId: N:PAC.DataStructures
  href: PAC.html
  name: PAC.DataStructures
  nameWithType: PAC.DataStructures
  fullName: PAC.DataStructures
  spec.csharp:
  - uid: PAC
    name: PAC
    href: PAC.html
  - name: .
  - uid: PAC.DataStructures
    name: DataStructures
    href: PAC.DataStructures.html
  spec.vb:
  - uid: PAC
    name: PAC
    href: PAC.html
  - name: .
  - uid: PAC.DataStructures
    name: DataStructures
    href: PAC.DataStructures.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: PAC.DataStructures.CustomStack`1.Count*
  commentId: Overload:PAC.DataStructures.CustomStack`1.Count
  href: PAC.DataStructures.CustomStack-1.html#PAC_DataStructures_CustomStack_1_Count
  name: Count
  nameWithType: CustomStack<T>.Count
  fullName: PAC.DataStructures.CustomStack<T>.Count
  nameWithType.vb: CustomStack(Of T).Count
  fullName.vb: PAC.DataStructures.CustomStack(Of T).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: PAC.DataStructures.CustomStack`1.Push*
  commentId: Overload:PAC.DataStructures.CustomStack`1.Push
  href: PAC.DataStructures.CustomStack-1.html#PAC_DataStructures_CustomStack_1_Push__0_
  name: Push
  nameWithType: CustomStack<T>.Push
  fullName: PAC.DataStructures.CustomStack<T>.Push
  nameWithType.vb: CustomStack(Of T).Push
  fullName.vb: PAC.DataStructures.CustomStack(Of T).Push
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: PAC.DataStructures.CustomStack`1.Peek*
  commentId: Overload:PAC.DataStructures.CustomStack`1.Peek
  href: PAC.DataStructures.CustomStack-1.html#PAC_DataStructures_CustomStack_1_Peek
  name: Peek
  nameWithType: CustomStack<T>.Peek
  fullName: PAC.DataStructures.CustomStack<T>.Peek
  nameWithType.vb: CustomStack(Of T).Peek
  fullName.vb: PAC.DataStructures.CustomStack(Of T).Peek
- uid: PAC.DataStructures.CustomStack`1.Pop*
  commentId: Overload:PAC.DataStructures.CustomStack`1.Pop
  href: PAC.DataStructures.CustomStack-1.html#PAC_DataStructures_CustomStack_1_Pop
  name: Pop
  nameWithType: CustomStack<T>.Pop
  fullName: PAC.DataStructures.CustomStack<T>.Pop
  nameWithType.vb: CustomStack(Of T).Pop
  fullName.vb: PAC.DataStructures.CustomStack(Of T).Pop
- uid: PAC.DataStructures.CustomStack`1.RemoveAt*
  commentId: Overload:PAC.DataStructures.CustomStack`1.RemoveAt
  href: PAC.DataStructures.CustomStack-1.html#PAC_DataStructures_CustomStack_1_RemoveAt_System_Int32_
  name: RemoveAt
  nameWithType: CustomStack<T>.RemoveAt
  fullName: PAC.DataStructures.CustomStack<T>.RemoveAt
  nameWithType.vb: CustomStack(Of T).RemoveAt
  fullName.vb: PAC.DataStructures.CustomStack(Of T).RemoveAt
- uid: PAC.DataStructures.CustomStack`1.Remove*
  commentId: Overload:PAC.DataStructures.CustomStack`1.Remove
  href: PAC.DataStructures.CustomStack-1.html#PAC_DataStructures_CustomStack_1_Remove__0_
  name: Remove
  nameWithType: CustomStack<T>.Remove
  fullName: PAC.DataStructures.CustomStack<T>.Remove
  nameWithType.vb: CustomStack(Of T).Remove
  fullName.vb: PAC.DataStructures.CustomStack(Of T).Remove
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: PAC.DataStructures.CustomStack`1.RemoveAll*
  commentId: Overload:PAC.DataStructures.CustomStack`1.RemoveAll
  href: PAC.DataStructures.CustomStack-1.html#PAC_DataStructures_CustomStack_1_RemoveAll__0_
  name: RemoveAll
  nameWithType: CustomStack<T>.RemoveAll
  fullName: PAC.DataStructures.CustomStack<T>.RemoveAll
  nameWithType.vb: CustomStack(Of T).RemoveAll
  fullName.vb: PAC.DataStructures.CustomStack(Of T).RemoveAll
- uid: PAC.DataStructures.CustomStack`1.Clear*
  commentId: Overload:PAC.DataStructures.CustomStack`1.Clear
  href: PAC.DataStructures.CustomStack-1.html#PAC_DataStructures_CustomStack_1_Clear
  name: Clear
  nameWithType: CustomStack<T>.Clear
  fullName: PAC.DataStructures.CustomStack<T>.Clear
  nameWithType.vb: CustomStack(Of T).Clear
  fullName.vb: PAC.DataStructures.CustomStack(Of T).Clear
- uid: PAC.DataStructures.CustomStack`1.ToList*
  commentId: Overload:PAC.DataStructures.CustomStack`1.ToList
  href: PAC.DataStructures.CustomStack-1.html#PAC_DataStructures_CustomStack_1_ToList
  name: ToList
  nameWithType: CustomStack<T>.ToList
  fullName: PAC.DataStructures.CustomStack<T>.ToList
  nameWithType.vb: CustomStack(Of T).ToList
  fullName.vb: PAC.DataStructures.CustomStack(Of T).ToList
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: PAC.DataStructures.CustomStack`1.ToArray*
  commentId: Overload:PAC.DataStructures.CustomStack`1.ToArray
  href: PAC.DataStructures.CustomStack-1.html#PAC_DataStructures_CustomStack_1_ToArray
  name: ToArray
  nameWithType: CustomStack<T>.ToArray
  fullName: PAC.DataStructures.CustomStack<T>.ToArray
  nameWithType.vb: CustomStack(Of T).ToArray
  fullName.vb: PAC.DataStructures.CustomStack(Of T).ToArray
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
